{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u9010\u6708\u4fe1\u606f\u5b66","text":""},{"location":"L2/io_technique/","title":"\u8f93\u5165\u6280\u5de7","text":""},{"location":"L2/io_technique/#cin","title":"cin","text":"<p><code>cin</code> \u4f7f\u7528\u7a7a\u767d\u5b57\u7b26\u4f5c\u4e3a\u6570\u636e\u4e4b\u95f4\u7684\u5206\u9694\u7b26\uff0c\u7a7a\u767d\u5b57\u7b26\u5305\u542b\u7a7a\u683c\u7b26\u3001\u5236\u8868\u7b26\u3001\u6362\u884c\u7b26\u3002\u4f7f\u7528 <code>cin &gt;&gt;</code> \u65b9\u5f0f\u8bfb\u53d6\u6570\u636e\u65f6\u4e0d\u4f1a\u5c06\u7a7a\u767d\u5b57\u7b26\u5f53\u505a\u6570\u636e\u5904\u7406\u3002\u89c2\u5bdf\u4e0b\u9762\u51e0\u4e2a\u4f8b\u5b50\u3002</p> <pre><code>int a, b;\ncin &gt;&gt; a &gt;&gt; b;\ncout &lt;&lt; a &lt;&lt; ' ' &lt;&lt; b;\n\n// \u8f93\u5165 2 3\uff0c\u8f93\u51fa 2 3\n// \u8f93\u5165 2 \u56de\u8f66 3\uff0c\u8f93\u51fa 2 3\n</code></pre> <p><code>cin</code> \u5728\u9047\u5230\u65e0\u6cd5\u5339\u914d\u7684\u5b57\u7b26\u65f6\u4f1a\u81ea\u52a8\u5206\u9694\u3002</p> <pre><code>int a;\nchar c;\ncin &gt;&gt; a &gt;&gt; c;  // \u8f93\u5165 12?\ncout &lt;&lt; a &lt;&lt; ' ' &lt;&lt; c;  // \u8f93\u51fa 12 ?\n</code></pre> <p><code>cin</code> \u5728\u8bfb\u5165\u5b57\u7b26\u578b\u65f6\u4e0d\u5fc5\u4f7f\u7528\u5206\u9694\u7b26\u3002</p> <pre><code>char a, b;\ncin &gt;&gt; a &gt;&gt; b;\ncout &lt;&lt; a &lt;&lt; ' ' &lt;&lt; b;\n\n// \u8f93\u5165 ac\uff0c\u8f93\u51fa a c\n// \u8f93\u5165 a c\uff0c\u8f93\u51fa a c\n// \u8f93\u5165 a \u56de\u8f66 c\uff0c\u8f93\u51fa a c\n</code></pre> <p>\u8bfb\u5165\u6570\u636e\u5931\u8d25\u65f6\uff0c<code>cin</code> \u4f1a\u83b7\u5f97\u5931\u6548\u6807\u8bb0\u3002<code>cin</code> \u5931\u6548\u540e\u65e0\u6cd5\u518d\u4f7f\u7528 <code>cin</code> \u8fdb\u884c\u4efb\u4f55\u8bfb\u5165\u3002\u53ef\u4ee5\u5c06 <code>cin</code> \u8f6c\u4e3a bool \u7c7b\u578b\u6765\u67e5\u770b\u662f\u5426\u5931\u6548\u3002</p> <pre><code>int a = 1, b = 2;\nchar c = '!';\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; c; // \u8f93\u5165 67?89\ncout &lt;&lt; (bool)cin &lt;&lt; ' ' &lt;&lt; a &lt;&lt; ' ' &lt;&lt; b &lt;&lt; ' ' &lt;&lt; c;  // \u8f93\u51fa 0 67 0 !\n</code></pre> <p>\u53ef\u4ee5\u4f7f\u7528 <code>while (cin &gt;&gt; )</code> \u7684\u65b9\u5f0f\u8fde\u7eed\u8bfb\u53d6\u82e5\u5e72\u8f93\u5165\u76f4\u5230\u8f93\u5165\u7ed3\u675f\u6216\u8005\u8f93\u5165\u51fa\u73b0\u9519\u8bef\u3002</p> <pre><code>int sum = 0;\nwhile (cin &gt;&gt; x) {\n  sum += x;\n}\n\n// \u8f93\u5165 3 4 5 \u56de\u8f66\uff0c\u7136\u540e\u6309 ctrl + z\uff0c\u7136\u540e\u56de\u8f66\uff0c\u8f93\u51fa 12\n</code></pre> <p><code>cin.putback(c)</code> \u53ef\u4ee5\u5c06\u5b57\u7b26 <code>c</code> \u5f39\u56de\u5230\u8f93\u5165\u7f13\u51b2\u533a\u4e2d\u3002</p> <pre><code>int a;\ncin.putback('1');\ncin &gt;&gt; a; // \u8f93\u5165 2\ncout &lt;&lt; a;  // \u8f93\u51fa 21\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u5229\u7528 <code>cin.putback()</code> \u5e2e\u52a9\u6211\u4eec\uff0c\u5f53\u6211\u4eec\u4e0d\u786e\u5b9a\u662f\u5426\u8981\u8bfb\u5165\u6574\u6570\u65f6\uff0c\u53ef\u4ee5\u5148\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u8fdb\u884c\u68c0\u67e5\uff0c\u5982\u679c\u4e3a\u6574\u6570\uff0c\u5219\u5f39\u56de\u7136\u540e\u91cd\u65b0\u8bfb\u5165\u6574\u6570\u3002</p> <pre><code>char ch;\nint x;\ncin &gt;&gt; ch;\nif (ch &gt;= '0' &amp;&amp; ch &lt;= '9') {\n  cin.putback(ch);\n  cin &gt;&gt; x;\n}\n</code></pre> <p><code>cin.get()</code> \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u8bfb\u53d6\u5305\u62ec\u7a7a\u767d\u5b57\u7b26\u5728\u5185\u7684\u5b57\u7b26\u3002\u7528\u6cd5\u4e3a <code>cin.get(char \u53d8\u91cf\u540d)</code> \u6216\u8005 <code>\u53d8\u91cf\u540d = cin.get()</code>\u3002</p> <pre><code>char a, b, c;\ncin.get(a);\nb = cin.get();\ncin &gt;&gt; c;\ncout &lt;&lt; a &lt;&lt; b &lt;&lt; c;\n\n// \u8f93\u5165 2 3\n// \u8f93\u51fa 2 3\n</code></pre> <p>\u5173\u4e8e <code>cin</code> \u7684\u5931\u6548\u6807\u8bb0\u548c <code>while (cin &gt;&gt; )</code> \u7684\u539f\u7406\uff0c\u4ee5\u4e0b\u662f GPT-4 \u7684\u56de\u7b54\u3002</p> Gpt-4 while (cin &gt;&gt; x) \u7684\u539f\u7406\u662f\u4ec0\u4e48\uff1fcin \u6d41\u72b6\u6001\u662f\u4ec0\u4e48\uff1f <p>\u5728 C++ \u4e2d\uff0c\u4f7f\u7528 <code>while (cin &gt;&gt; x)</code> \u5faa\u73af\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u65b9\u5f0f\uff0c\u7528\u4e8e\u8fde\u7eed\u8bfb\u53d6\u8f93\u5165\u76f4\u5230\u9047\u5230\u8f93\u5165\u7ed3\u675f\u6216\u9519\u8bef\u3002\u8fd9\u4e2a\u8bed\u53e5\u7684\u5de5\u4f5c\u539f\u7406\u57fa\u4e8e <code>cin</code> \u7684\u72b6\u6001\uff0c\u5177\u4f53\u89e3\u91ca\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u8f93\u5165\u8fd0\u7b97\u7b26\uff08<code>&gt;&gt;</code>\uff09\uff1a\u5f53 <code>cin &gt;&gt; x</code> \u88ab\u6267\u884c\u65f6\uff0cC++ \u5c1d\u8bd5\u4ece\u6807\u51c6\u8f93\u5165\uff08\u901a\u5e38\u662f\u952e\u76d8\u8f93\u5165\uff09\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u53d8\u91cf <code>x</code> \u4e2d\u3002\u7c7b\u578b\u5fc5\u987b\u4e0e\u53d8\u91cf <code>x</code> \u7684\u7c7b\u578b\u5339\u914d\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002</p> </li> <li> <p>\u5faa\u73af\u6761\u4ef6\uff1a<code>while</code> \u5faa\u73af\u7684\u6761\u4ef6\u662f <code>cin &gt;&gt; x</code> \u7684\u7ed3\u679c\u3002\u5728 C++ \u4e2d\uff0c<code>cin &gt;&gt; x</code> \u5b9e\u9645\u4e0a\u8fd4\u56de <code>cin</code> \u5bf9\u8c61\u7684\u5f15\u7528\u3002\u5f53\u8f93\u5165\u6210\u529f\u65f6\uff08\u5373\u6570\u636e\u6210\u529f\u8bfb\u5165\u5e76\u4e14\u7c7b\u578b\u5339\u914d\uff09\uff0c<code>cin</code> \u4fdd\u6301\u5728\u6709\u6548\u72b6\u6001\uff08\u672a\u8bbe\u7f6e <code>failbit</code> \u6216 <code>badbit</code>\uff09\uff0c\u5e76\u88ab\u89c6\u4e3a\u4e00\u4e2a\u771f\u503c\u3002\u5982\u679c\u9047\u5230\u8f93\u5165\u9519\u8bef\uff08\u4f8b\u5982\u7c7b\u578b\u4e0d\u5339\u914d\u6216\u8f93\u5165\u6d41\u7ed3\u675f\uff09\uff0c<code>failbit</code> \u6216 <code>badbit</code> \u5c06\u88ab\u8bbe\u7f6e\uff0c<code>cin</code> \u5bf9\u8c61\u4f1a\u8f6c\u6362\u4e3a\u5047\u503c\uff0c\u56e0\u6b64\u7ec8\u6b62\u5faa\u73af\u3002</p> </li> <li> <p>\u5904\u7406\u4e0d\u5339\u914d\u6216\u9519\u8bef\uff1a\u5982\u679c\u8f93\u5165\u7684\u6570\u636e\u4e0e <code>x</code> \u7684\u7c7b\u578b\u4e0d\u5339\u914d\uff0c<code>cin</code> \u7684\u72b6\u6001\u5c06\u53d8\u4e3a\u9519\u8bef\u72b6\u6001\uff0c\u8fd9\u5bfc\u81f4 <code>while</code> \u5faa\u73af\u7ec8\u6b62\u3002\u4f8b\u5982\uff0c\u5982\u679c\u671f\u671b\u7684\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u4f46\u7528\u6237\u8f93\u5165\u4e86\u4e00\u4e9b\u5b57\u6bcd\uff0c<code>cin</code> \u5c06\u4e0d\u80fd\u5c06\u8fd9\u4e9b\u5b57\u6bcd\u89e3\u91ca\u4e3a\u6574\u6570\uff0c\u4ece\u800c\u8bbe\u7f6e <code>failbit</code>\u3002</p> </li> <li> <p>\u7ed3\u675f\u8f93\u5165\uff1a\u5728 Unix/Linux \u7cfb\u7edf\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 Ctrl+D\uff08\u6587\u4ef6\u7ed3\u675f\u7b26 EOF\uff09\u6765\u8868\u793a\u8f93\u5165\u7ed3\u675f\uff0c\u5728 Windows \u7cfb\u7edf\u4e2d\u901a\u5e38\u4f7f\u7528 Ctrl+Z\u3002\u8fd9\u4f1a\u4f7f <code>cin</code> \u8fdb\u5165\u6587\u4ef6\u7ed3\u675f\u72b6\u6001\uff08\u8bbe\u7f6e <code>eofbit</code>\uff09\uff0c\u540c\u65f6\u5982\u679c\u6ca1\u6709\u66f4\u591a\u7684\u6709\u6548\u6570\u636e\uff0c\u4e5f\u4f1a\u8bbe\u7f6e <code>failbit</code>\uff0c\u4ece\u800c\u505c\u6b62\u5faa\u73af\u3002</p> </li> </ol> <p>\u8fd9\u79cd <code>while (cin &gt;&gt; x)</code> \u7ed3\u6784\u975e\u5e38\u9002\u5408\u4e8e\u9700\u8981\u591a\u6b21\u8bfb\u53d6\u540c\u7c7b\u578b\u6570\u636e\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u8f93\u5165\u4e00\u7cfb\u5217\u6570\u5b57\u3002\u5f53\u6570\u636e\u6b63\u786e\u8f93\u5165\u65f6\uff0c\u5faa\u73af\u7ee7\u7eed\uff1b\u5f53\u9047\u5230\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u8f93\u5165\u6216\u8f93\u5165\u7ed3\u675f\u65f6\uff0c\u5faa\u73af\u505c\u6b62\uff0c\u5141\u8bb8\u7a0b\u5e8f\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u64cd\u4f5c\u3002</p> <p>\u5728 C++ \u4e2d\uff0c<code>cin</code> \u6d41\u72b6\u6001\u6307\u7684\u662f\u4e00\u4e2a\u8f93\u5165\u6d41\u7684\u5f53\u524d\u72b6\u6001\uff0c\u8fd9\u4e9b\u72b6\u6001\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u4e86\u89e3\u662f\u5426\u53d1\u751f\u4e86\u8f93\u5165\u9519\u8bef\u6216\u5176\u4ed6\u7c7b\u578b\u7684\u6d41\u95ee\u9898\u3002C++ \u6807\u51c6\u5e93\u4e2d\u7684\u8f93\u5165\u6d41\u5bf9\u8c61\uff08\u5982 <code>cin</code>\uff09\u4f7f\u7528\u72b6\u6001\u6807\u5fd7\u6765\u8868\u793a\u6d41\u7684\u5f53\u524d\u5065\u5eb7\u72b6\u51b5\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684 <code>cin</code> \u6d41\u72b6\u6001\u6807\u5fd7\uff1a</p> <ol> <li> <p>goodbit: \u5982\u679c\u8bbe\u7f6e\u4e86 <code>goodbit</code>\uff0c\u8868\u793a\u6d41\u672a\u53d1\u751f\u9519\u8bef\uff0c\u72b6\u6001\u826f\u597d\u3002\u8fd9\u662f\u9ed8\u8ba4\u72b6\u6001\uff0c\u6ca1\u6709\u8bbe\u7f6e\u5176\u4ed6\u4efb\u4f55\u9519\u8bef\u6807\u5fd7\u65f6\uff0c<code>goodbit</code> \u4f1a\u88ab\u8bbe\u7f6e\u3002</p> </li> <li> <p>eofbit: \u5982\u679c\u5728\u8bfb\u53d6\u671f\u95f4\u5230\u8fbe\u4e86\u8f93\u5165\u7684\u672b\u5c3e\uff0c\u5c06\u8bbe\u7f6e <code>eofbit</code>\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u5c1d\u8bd5\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4f46\u5df2\u7ecf\u8fbe\u5230\u4e86\u6587\u4ef6\u7684\u672b\u5c3e\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002</p> </li> <li> <p>failbit: \u5982\u679c\u56e0\u4e3a\u9884\u671f\u683c\u5f0f\u5916\u7684\u5b57\u7b26\u6216\u5176\u4ed6\u539f\u56e0\u5bfc\u81f4\u8f93\u5165\u64cd\u4f5c\u5931\u8d25\uff0c\u5219\u4f1a\u8bbe\u7f6e <code>failbit</code>\u3002\u4f8b\u5982\uff0c\u5982\u679c\u671f\u671b\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u4f46\u7528\u6237\u8f93\u5165\u4e86\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5c31\u4f1a\u8bbe\u7f6e <code>failbit</code>\u3002</p> </li> <li> <p>badbit: \u5982\u679c\u5728\u8bfb\u5199\u64cd\u4f5c\u4e2d\u53d1\u751f\u9519\u8bef\uff0c\u5982\u4e0d\u53ef\u6062\u590d\u7684\u6d41\u9519\u8bef\u6216\u8bbe\u5907\u6545\u969c\uff0c\u5c06\u8bbe\u7f6e <code>badbit</code>\u3002\u8bbe\u7f6e <code>badbit</code> \u901a\u5e38\u610f\u5473\u7740\u6d41\u4e0d\u80fd\u7ee7\u7eed\u4f7f\u7528\u3002</p> </li> </ol> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528\u51e0\u79cd\u65b9\u6cd5\u6765\u68c0\u67e5\u8fd9\u4e9b\u72b6\u6001\u6807\u5fd7\uff1a * <code>cin.good()</code> \u68c0\u67e5 <code>goodbit</code>\uff0c\u5982\u679c\u6d41\u72b6\u6001\u826f\u597d\uff0c\u5373\u6ca1\u6709\u9519\u8bef\uff0c\u8fd4\u56de <code>true</code>\u3002 * <code>cin.eof()</code> \u68c0\u67e5 <code>eofbit</code>\uff0c\u5982\u679c\u8fbe\u5230\u8f93\u5165\u672b\u5c3e\uff0c\u8fd4\u56de <code>true</code>\u3002 * <code>cin.fail()</code> \u68c0\u67e5 <code>failbit</code> \u6216 <code>badbit</code>\uff0c\u5982\u679c\u4efb\u4e00\u9519\u8bef\u6807\u5fd7\u88ab\u8bbe\u7f6e\uff0c\u8fd4\u56de <code>true</code>\u3002 * <code>cin.bad()</code> \u68c0\u67e5 <code>badbit</code>\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86 <code>badbit</code>\uff0c\u8fd4\u56de <code>true</code>\u3002</p> <p>\u8fd9\u4e9b\u51fd\u6570\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u8f93\u5165\u64cd\u4f5c\u4e4b\u524d\u9a8c\u8bc1\u6d41\u7684\u72b6\u6001\uff0c\u4ece\u800c\u5728\u5904\u7406\u8f93\u5165\u65f6\u505a\u51fa\u9002\u5f53\u7684\u9519\u8bef\u5904\u7406\u3002</p>"},{"location":"L2/io_technique/#getline","title":"getline","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>getline()</code> \u51fd\u6570\u6309\u884c\u8bfb\u5165\u4e00\u6574\u884c\u5b57\u7b26\u4e32\u5230 <code>string</code> \u53d8\u91cf\u4e2d\uff0c\u7528\u6cd5\u4e3a <code>getline(cin, string \u53d8\u91cf\u540d);</code>\u3002<code>getline()</code> \u9ed8\u8ba4\u4ee5\u6362\u884c\u7b26\u4e3a\u5206\u9694\u7b26\u3002</p> <pre><code>string a;\ngetline(cin, a);\ncout &lt;&lt; a;\n\n// \u8f93\u5165 123 abc\n// \u8f93\u51fa 123 abc\n</code></pre> <p>\u8c03\u7528 <code>getline()</code> \u51fd\u6570\u4f1a\u5c06\u8f93\u5165\u7f13\u51b2\u533a\u4e2d\u76f4\u5230\u7b2c\u4e00\u4e2a\u6362\u884c\u7b26\uff08\u5305\u62ec\u6362\u884c\u7b26\uff09\u7684\u5185\u5bb9\u5168\u90e8\u5f39\u51fa\u3002\u5728\u8c03\u7528 <code>getline()</code> \u51fd\u6570\u4e4b\u524d\uff0c\u4e00\u5b9a\u8981\u4fdd\u8bc1\u4e4b\u524d\u7684\u6362\u884c\u7b26\u4e00\u5b9a\u4e0d\u5728\u8f93\u5165\u7f13\u51b2\u533a\u4e2d\u3002</p> <pre><code>int x;\nstring s;\ncin &gt;&gt; x;\ngetline(cin, s);\n\n// \u8f93\u5165 2\uff0c\u56de\u8f66\uff0c\u7a0b\u5e8f\u7acb\u9a6c\u7ed3\u675f\n// \u5e94\u8be5\u5728 cin &gt;&gt; x; \u4e4b\u540e\u7acb\u9a6c\u8ddf\u4e00\u4e2a \n</code></pre>"},{"location":"L2/string/","title":"string \u7684\u6210\u5458\u51fd\u6570","text":""},{"location":"L2/string/#\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528-string","title":"\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 string","text":"<p>\u7528\u5b57\u7b26\u6570\u7ec4\u5b9e\u73b0\u5b57\u7b26\u4e32\u662f\u6709\u8bb8\u591a\u4e0d\u4fbf\u7684\uff1a</p> <ul> <li>\u53d7\u9650\u4e8e\u6570\u7ec4\u7684\u8bed\u6cd5\u8bbe\u8ba1\uff0c\u4e0d\u80fd\u76f4\u63a5\u5bf9\u5b57\u7b26\u4e32\u76f4\u63a5\u8d4b\u503c\u3001\u590d\u5236\u3001\u62fc\u63a5\u3002</li> <li>\u65e0\u6cd5\u76f4\u63a5\u6bd4\u8f83\u5b57\u7b26\u4e32\u7684\u5b57\u5178\u5e8f\u5927\u5c0f\uff0c\u9700\u8981\u8c03\u7528 <code>strcmp</code> \u51fd\u6570\u3002</li> </ul> <p><code>std::string</code> \u662f\u5728\u6807\u51c6\u6a21\u677f\u5e93\uff08Standard Template Library\uff09\u7684\u5934\u6587\u4ef6 <code>&lt;string&gt;</code> \u4e2d\u63d0\u4f9b\u7684\u4e00\u4e2a\u5df2\u5c01\u88c5\u597d\u7684\u5b57\u7b26\u4e32\u7c7b\uff1a - <code>string</code> \u80fd\u52a8\u6001\u5206\u914d\u7a7a\u95f4\uff0c\u65e0\u9700\u9884\u5148\u6307\u660e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 - \u5c06\u4e00\u4e9b\u5e38\u7528\u529f\u80fd\u5c01\u88c5\u4e3a\u6210\u5458\u51fd\u6570\u3002 - \u4f53\u73b0\u4e86 C++ \u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u7279\u6027\u3002</p>"},{"location":"L2/string/#\u5e38\u89c4\u4f7f\u7528","title":"\u5e38\u89c4\u4f7f\u7528","text":"<pre><code>string s, t = \"abc\";  // \u58f0\u660e\uff0c\u521d\u59cb\u5316\ncin &gt;&gt; s;             // \u53ef\u4ee5\u76f4\u63a5\u8f93\u5165\nt[0] = 'z';           // \u652f\u6301\u4e0b\u6807\u8bbf\u95ee\ncout &lt;&lt; a;            // \u76f4\u63a5\u8f93\u51fa\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\n</code></pre> <p><code>string</code> \u652f\u6301\u7c7b\u4f3c\u6570\u7ec4\u7684\u65b9\u5f0f\u901a\u8fc7\u4e0b\u6807\u6765\u5b58\u53d6\u7a7a\u95f4\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5\u8f93\u5165\u8f93\u51fa\u3002\u8f93\u5165\u65f6\u9ed8\u8ba4\u4ee5\u7a7a\u767d\u5b57\u7b26\u4e3a\u5206\u9694\u7b26\u3002</p>"},{"location":"L2/string/#getline","title":"getline()","text":"<p>\u4f7f\u7528 <code>getline(cin, a)</code> \u5c06\u4e00\u6574\u884c\u5b57\u7b26\u4e32\u8bfb\u5165\uff0c\u4ee5\u6362\u884c\u7b26\u4e3a\u5206\u9694\u7b26\u3002</p> <pre><code>string s;\ngetline(cin, s);\n</code></pre>"},{"location":"L2/string/#\u8fd0\u7b97\u7b26\u91cd\u8f7d","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":""},{"location":"L2/string/#\u8d4b\u503c\u8fd0\u7b97\u7b26","title":"\u8d4b\u503c\u8fd0\u7b97\u7b26","text":"<pre><code>string s, t;\nchar a[10] = \"abc\";\ns = \"123\";  // \u8d4b\u503c\nt = s;      // \u8d4b\u503c\nt = a;      // \u5efa\u8bae\u4e0d\u8981\u5c06\u5b57\u7b26\u6570\u7ec4\u7684\u5b57\u7b26\u4e32\u8d4b\u503c\u7ed9 `string` \u53d8\u91cf\n</code></pre>"},{"location":"L2/string/#\u5173\u7cfb\u8fd0\u7b97\u7b26","title":"\u5173\u7cfb\u8fd0\u7b97\u7b26","text":"<p><code>&gt;</code>\u3001<code>&lt;</code>\u3001<code>&gt;=</code>\u3001<code>&lt;=</code>\u3001<code>==</code>\u3001<code>!=</code>\uff0c\u5bf9\u4e24\u4e2a <code>string</code> \u4e4b\u95f4\u8fdb\u884c\u5b57\u5178\u5e8f\u6bd4\u8f83\u3002</p> <pre><code>string x = \"123\", y = \"156\";\ncout &lt;&lt; (x &lt; y) &lt;&lt; '\\n';\nstring a = \"45\", y = \"123\";\ncout &lt;&lt; (a &lt; b) &lt;&lt; '\\n';\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002</p>"},{"location":"L2/string/#\u52a0\u6cd5\u8fd0\u7b97\u7b26","title":"\u52a0\u6cd5\u8fd0\u7b97\u7b26","text":"<p>\u53ef\u4ee5\u62fc\u63a5\u4e24\u4e2a <code>string</code> \u53d8\u91cf\u3002</p> <pre><code>string s = \"123\", t = \"456\";\ncout &lt;&lt; s + t &lt;&lt; '\\n';  // 123456\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O(n)\nt += s;                 // \u65f6\u95f4\u590d\u6742\u5ea6 O(n)\ncout &lt;&lt; t &lt;&lt; '\\n';      // 456123\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5728\u4e00\u4e2a <code>char</code> \u548c <code>string</code> \u4e4b\u95f4\u8fdb\u884c\u62fc\u63a5\u3002</p> <pre><code>string s = \"abc\";\ns += 'z';           // \u65f6\u95f4\u590d\u6742\u5ea6 O(1)\ncout &lt;&lt; s &lt;&lt; '\\n';  // abcz\ncout &lt;&lt; 'z' + s;    // zabcz\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O(n)\n</code></pre>"},{"location":"L2/string/#\u5e38\u7528\u6210\u5458\u51fd\u6570","title":"\u5e38\u7528\u6210\u5458\u51fd\u6570","text":"<p>\u5b9a\u4e49 <code>string s, t</code>\uff0c\u4ee4\u4ed6\u4eec\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5206\u522b\u4e3a \\(n\\) \u548c \\(m\\)\u3002</p> \u6210\u5458\u51fd\u6570 \u529f\u80fd \u65f6\u95f4\u590d\u6742\u5ea6 s.size(), s.length() \u8fd4\u56de s \u7684\u957f\u5ea6 \\(O(1)\\) s.empty() \u8fd4\u56de s \u662f\u5426\u4e3a\u7a7a\u4e32 \\(O(1)\\) s.clear() \u6e05\u7a7a\u5b57\u7b26\u4e32\uff0cs \u53d8\u4e3a\u7a7a\u4e32 \\(O(n)\\) s.push_back(x) \u5c06\u5b57\u7b26\u53d8\u91cf x \u7684\u5185\u5bb9\u6dfb\u52a0\u5230 s \u7684\u5c3e\u90e8 \\(O(1)\\) s.pop_back() \u5220\u9664 s \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26 \\(O(1)\\) s.substr(pos) \u8fd4\u56de\u4ece s[pos] \u5230 s \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u6784\u6210\u7684\u5b50\u4e32 \\(O(len)\\)\uff0c\\(len\\) \u4e3a\u5b50\u4e32\u957f\u5ea6 s.substr(pos, len) \u8fd4\u56de\u4ece s[pos] \u5f00\u59cb\u7684\u957f\u5ea6\u4e3a len \u7684\u5b50\u4e32 \\(O(len)\\)\uff0c\\(len\\) \u4e3a\u5b50\u4e32\u957f\u5ea6 s.insert(pos, t) \u5728 s[pos] \u4e4b\u524d\u63d2\u5165\u5b57\u7b26\u4e32 t \\(O(n + m)\\) s.find(t) \u67e5\u627e t \u5728 s \u4e2d\u4f5c\u4e3a\u5b50\u4e32\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e \u6700\u597d \\(O(m)\\)\uff0c\u6700\u574f \\(O(nm)\\) s.find(t, pos) \u67e5\u627e t \u5728 s[pos] \u53ca\u4e4b\u540e\u4f5c\u4e3a\u5b50\u4e32\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e \u6700\u597d \\(O(m)\\)\uff0c\u6700\u574f \\(O(nm)\\) s.erase(pos, len) \u5220\u9664\u4ece s[pos] \u5f00\u59cb\u7684\u8fde\u7eed\u7684 len \u4e2a\u5b57\u7b26 O(n) <p>\u5bf9\u4e8e <code>.find()</code>\uff0c\u5982\u679c\u67e5\u627e\u4e0d\u5230\u76f8\u5e94\u5b50\u4e32\uff0c\u8fd4\u56de\u5e38\u91cf <code>string::npos</code>\uff0c\u5c06\u5176\u5f3a\u5236\u8f6c\u5316\u4e3a <code>int</code> \u7c7b\u578b\u540e\u7ed3\u679c\u4e3a <code>-1</code>\u3002</p> <p>\u5bf9\u4e8e <code>.substr(pos, len)</code>\uff0c\u5982\u679c\u6240\u6c42\u7684\u5b50\u4e32\u957f\u5ea6\u5df2\u7ecf\u8d85\u51fa\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff0c\u5373 \\(pos + len \\ge n\\)\uff0c\u5219\u5176\u7b49\u540c\u4e8e <code>.substr(pos)</code>\uff1b\u5982\u679c \\(pos \\ge n\\)\uff0c\u62a5 <code>RE</code> \u9519\u8bef\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c<code>.insert()</code>\u3001<code>.erase()</code>\u3001<code>.find()</code>\u3001<code>.substr()</code> \u5728\u4fe1\u606f\u5b66\u4e2d\u4e0d\u5e38\u7528\uff0c\u56e0\u4e3a\u5728\u7ed9\u5b9a\u6570\u636e\u89c4\u6a21\u4e0b\u5f88\u6709\u53ef\u80fd\u8d85\u65f6\uff0c\u4f46\u5fc5\u987b\u638c\u63e1\uff0c\u53ef\u4ee5\u7528\u6765\u5199\u8d85\u65f6\u66b4\u529b\u3002</p>"},{"location":"dp/matrix_dp/","title":"\u77e9\u9635 DP","text":"<p>\u987e\u540d\u601d\u4e49\uff0c\u5728\u77e9\u9635\u3001\u7f51\u683c\u56fe\u4e0a\u505a\u7684 DP\u3002</p> <p>\u5bf9\u4e8e\u77e9\u9635\u7c7b\u7684 DP\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u7f51\u683c\u56fe\u641c\u7d22\u7684\u65b9\u5f0f\u627e\u5230\u72b6\u6001\u548c\u8f6c\u79fb\u3002</p>"},{"location":"dp/matrix_dp/#atcoder-dp_h","title":"atcoder dp_h","text":"<p>\u72b6\u6001\uff1a\\(dp(i, j)\\) \u8868\u793a\u4ece \\((1, 1)\\) \u8d70\u5230 \\((i, j)\\) \u7684\u65b9\u6848\u6570\u3002 \u8f6c\u79fb\uff1a\u5bf9\u4e8e\u4e0d\u4e3a\u969c\u788d\u7684\u683c\u5b50 \\((i, j)\\)\uff0c\\(dp_{i, j} = dp_{i - 1, j} + dp_{i, j - 1}\\)\u3002 \u62d3\u6251\u5e8f\uff1a\\(i\\) \u4ece\u5c0f\u5230\u5927\uff08\u6216\u8005 \\(j\\) \u4ece\u5c0f\u5230\u5927\uff09\u3002</p> <p>\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a \\(O(NM)\\)\u3002</p> \u4ee3\u7801 <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MAXN = 1e3 + 1, MOD = 1e9 + 7;\n\nint n, m, dp[MAXN][MAXN];\nchar c[MAXN][MAXN];\n\nint main() {\n  cin &gt;&gt; n &gt;&gt; m;\n  for (int i = 1; i &lt;= n; i++) {\n    for (int j = 1; j &lt;= m; j++) {\n      cin &gt;&gt; c[i][j];\n    }\n  }\n  dp[1][1] = 1;\n  for (int i = 1; i &lt;= n; i++) {\n    for (int j = 1; j &lt;= m; j++) {\n      if ((i + j &gt; 2 &amp;&amp; c[i][j] != '#')) {\n        dp[i][j] = (dp[i - 1][j] + dp[i][j - 1]) % MOD;\n      }\n    }\n  }\n  cout &lt;&lt; dp[n][m];\n  return 0;\n}\n</code></pre> <p>\u6ce8\u610f\u4f7f\u7528\u6536\u96c6\u578b\u5b9e\u73b0\u77e9\u9635\u7c7b DP \u65f6\uff0c\u9700\u8981\u4fdd\u8bc1\u88ab\u6536\u96c6\u7684\u72b6\u6001\u5df2\u88ab\u6c42\u89e3\u8fc7\u3002</p>"},{"location":"dp/matrix_dp/#\u6d1b\u8c37-p1006","title":"\u6d1b\u8c37 P1006","text":"\u5f62\u5f0f\u5316\u9898\u610f <p>\u7ed9\u5b9a\u4e00\u4e2a \\(n \\times m\\) \u7684\u6570\u5b57\u77e9\u9635\uff0c\u4f60\u9700\u8981\u627e\u5230\u4e00\u6761\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\u7684\u8def\u5f84\uff08\u53ea\u80fd\u5411\u53f3\u5411\u4e0b\u8d70\uff09\u548c\u4e00\u6761\u4ece\u53f3\u4e0b\u5230\u5de6\u4e0a\u7684\u8def\u5f84\uff08\u53ea\u80fd\u5411\u4e0a\u5411\u5de6\u8d70\uff09\uff0c\u5e76\u4e14\u4e24\u6761\u8def\u5f84\u4e0d\u80fd\u76f8\u4ea4\u3002\u8bf7\u4f60\u6c42\u51fa\u7ecf\u8fc7\u7684\u6570\u5b57\u7684\u6700\u5927\u503c\u3002</p> \u63d0\u793a <p>\u628a\u4e24\u6761\u8def\u5f84\u90fd\u770b\u505a\u662f\u5de6\u4e0a\u5230\u53f3\u4e0b\u89d2\u7684\u8def\u5f84\u3002\u7136\u540e\u5c1d\u8bd5\u5b9e\u73b0\u641c\u7d22\uff0c\u5982\u4f55\u5b9e\u73b0\u8f6c\u79fb\uff0c\u5e76\u4e14\u4fdd\u8bc1\u8def\u5f84\u4e0d\u76f8\u4ea4\uff1f</p> \u72b6\u6001\u548c\u8f6c\u79fb <p>\\(dp{x1, y1, x2, y2}\\) \u8868\u793a\u4e24\u6761\u8def\u5f84\u4ece\u5de6\u4e0a\u89d2\u5206\u522b\u540c\u65f6\u8d70\u5230 \\((x1, y1)\\) \u548c \\((x2, y2)\\) \u65f6\u7684\u6700\u5927\u6570\u5b57\u548c\u3002\u540c\u65f6\u610f\u5473\u7740 \\(x1 + y1 = x2 + y2\\)\u3002\u6ce8\u610f\u8def\u5f84\u4e0d\u80fd\u76f8\u4ea4\uff0c\u56e0\u6b64\u4e0d\u80fd\u5b58\u5728 \\(x1 = x2, y1 = y2\\) \u7684\u60c5\u51b5\u3002</p> <p>\u8f6c\u79fb\u5c31\u679a\u4e3e \\((x1, y1)\\) \u548c \\((x2, y2)\\) \u884c\u8d70\u7684\u60c5\u51b5\uff0c\u4e00\u5171\u56db\u79cd\u3002</p> <p>\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a \\(O(n^2m^2)\\)\u3002</p> \u4f18\u5316 <p>\u5df2\u77e5 \\(x1, y1, x2\\)\uff0c\u53ef\u4ee5\u63a8\u51fa \\(y2\\)\uff0c\u56e0\u6b64\u53ef\u4ee5\u964d\u4f4e\u4e00\u4e2a\u7ef4\u5ea6\u3002\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a \\(O(n^2m)\\) \u6216\u8005 \\(O(nm^2)\\)\u3002</p> <p>\u5f53\u4f60\u65e0\u6cd5\u5904\u7406\u597d\u8f6c\u79fb\u7684\u7ec6\u8282\u65f6\uff0c\u4e0d\u59a8\u7528 <code>\u641c\u7d22 -&gt; \u8bb0\u5fc6\u5316\u641c\u7d22</code> \u7684\u65b9\u5f0f\u5b8c\u6210\u6b64\u9898\u3002</p>"},{"location":"dp/memorization/","title":"\u8bb0\u5fc6\u5316","text":"<p>\u8bb0\u5fc6\u5316\u641c\u7d22\u662f\u4e00\u79cd\u901a\u8fc7\u8bb0\u5f55\u5df2\u7ecf\u904d\u5386\u8fc7\u7684\u72b6\u6001\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u907f\u514d\u5bf9\u540c\u4e00\u72b6\u6001\u91cd\u590d\u904d\u5386\u7684\u641c\u7d22\u5b9e\u73b0\u65b9\u5f0f\u3002</p> <p>\u56e0\u4e3a\u8bb0\u5fc6\u5316\u641c\u7d22\u786e\u4fdd\u4e86\u6bcf\u4e2a\u72b6\u6001\u53ea\u8bbf\u95ee\u4e00\u6b21\uff0c\u5b83\u4e5f\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u52a8\u6001\u89c4\u5212\u5b9e\u73b0\u65b9\u5f0f\u3002</p>"},{"location":"dp/memorization/#\u6d1b\u8c37-p1434-\u6ed1\u96ea","title":"\u6d1b\u8c37 P1434 \u6ed1\u96ea","text":"\u5f62\u5f0f\u5316\u9898\u610f <p>\u7ed9\u5b9a \\(N \\times M\\) \u5927\u5c0f\u7684\u6570\u5b57\u77e9\u9635\uff0c\u4f60\u53ef\u4ee5\u9009\u5b9a\u4e00\u4e2a\u683c\u5b50\u51fa\u53d1\uff0c\u6bcf\u6b21\u8d70\u5230\u4e00\u4e2a\u4e0a\u4e0b\u5de6\u53f3\u76f8\u90bb\u7684\u6570\u5b57\u6bd4\u5f53\u524d\u683c\u5b50\u5c0f\u7684\u683c\u5b50\u4e0a\u3002\u8bf7\u6c42\u51fa\u884c\u8d70\u7684\u6700\u957f\u7684\u8def\u5f84\u3002</p>"},{"location":"dp/memorization/#\u6734\u7d20-dfs","title":"\u6734\u7d20 DFS","text":"<p>\u5199\u641c\u7d22\uff0c\u4e0d\u4e22\u4eba\u3002</p> <p>\u5728\u641c\u7d22\u65f6\u8bb0\u5f55\u4ee5\u4e0b\u51e0\u4e2a\u72b6\u6001\uff1a\u5f53\u524d\u683c\u5b50\u5750\u6807\uff0c\u884c\u8d70\u7684\u957f\u5ea6\uff0c\u6570\u5b57\u77e9\u9635\u3002</p> Dfs <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int N = 110;\nconst int dx[5] = {0, 0, 1, -1};\nconst int dy[5] = {1, -1, 0, 0};\n\nint r, c, ans, a[N][N];\n\nvoid S(int x, int y, int s){\n  if (x &lt; 1 || x &gt; r || y &lt; 1 || y &gt; c){\n    return ;\n  }\n  ans = max(ans, s);\n  for (int i = 0; i &lt; 4; i++){\n    if (a[x + dx[i]][y + dy[i]] &lt; a[x][y]){\n      S(x + dx[i], y + dy[i], s + 1);\n    }\n  }\n}\n\nint main(){\n  cin &gt;&gt; r &gt;&gt; c;\n  for (int i = 1; i &lt;= r; i++){\n    for (int j = 1; j &lt;= c; j++){\n      cin &gt;&gt; a[i][j];\n    }\n  }\n  for (int i = 1; i &lt;= r; i++){\n    for (int j = 1; j &lt;= c; j++){\n      S(i, j, 1);\n    }\n  }\n  cout &lt;&lt; ans;\n  return 0;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u6307\u6570\u7ea7\u522b\uff0c\u663e\u7136\u4e0d\u80fd\u901a\u8fc7\u3002</p>"},{"location":"dp/memorization/#\u8bb0\u5fc6\u5316_1","title":"\u8bb0\u5fc6\u5316","text":"<p>\u6211\u4eec\u53d1\u73b0\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u67d0\u4e9b\u72b6\u6001\uff08\u683c\u5b50\uff09\u4f1a\u91cd\u590d\u7ecf\u8fc7\u591a\u6b21\uff0c\u4ece\u800c\u505a\u4e86\u8bb8\u591a\u65e0\u7528\u7684\u641c\u7d22\u3002\u4e0d\u59a8\u5c1d\u8bd5\u52a0\u5165\u8bb0\u5fc6\u5316\u6570\u7ec4\uff0c\u53d1\u73b0 AC\u3002</p> \u8bb0\u5fc6\u5316\u4ee3\u7801 <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int MAXN = 1010;\nconst int dx[4] = {0, 0, 1, -1};\nconst int dy[4] = {1, -1, 0, 0};\n\nint n, m, a[MAXN][MAXN], dp[MAXN][MAXN], ans;\n\nint S(int x, int y) {\n  if (dp[x][y] != -1) {\n    return dp[x][y];\n  }\n  dp[x][y] = 1;\n  for (int i = 0; i &lt; 4; i++) {\n    int nx = x + dx[i], ny = y + dy[i];\n    if (nx &gt;= 1 &amp;&amp; nx &lt;= n &amp;&amp; ny &gt;= 1 &amp;&amp; ny &lt;= m &amp;&amp; a[nx][ny] &gt; a[x][y]) {\n      dp[x][y] = max(dp[x][y], S(nx, ny) + 1);\n    }\n  }\n  return dp[x][y];\n}\n\nint main() {\n  cin &gt;&gt; n &gt;&gt; m;\n  for (int i = 1; i &lt;= n; i++) {\n    for (int j = 1; j &lt;= m; j++) {\n      cin &gt;&gt; a[i][j];\n      dp[i][j] = -1;\n    }\n  }\n  for (int i = 1; i &lt;= n; i++) {\n    for (int j = 1; j &lt;= m; j++) {\n      ans = max(ans, S(i, j));\n    }\n  }\n  cout &lt;&lt; ans;\n  return 0;\n}\n</code></pre> \u53ef\u4ee5\u4f7f\u7528\u8bb0\u5fc6\u5316\u7684\u539f\u56e0 <p>\u6b64\u9898\u7684\u72b6\u6001\u8f6c\u79fb\u662f\u5b58\u5728\u62d3\u6251\u5e8f\u7684\uff1a\u7ecf\u8fc7\u7684\u683c\u5b50\u7684\u6570\u5b57\u4ece\u5927\u5230\u5c0f\u3002</p> <p>\u4f60\u5f53\u7136\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u7528\u5faa\u73af\u7684\u65b9\u5f0f\u5199 dp\uff0c\u5c31\u662f\u6bd4\u8f83\u9ebb\u70e6\uff0c\u9700\u8981\u5904\u7406\u597d\u62d3\u6251\u5e8f\u548c\u4e00\u4e9b\u8fb9\u754c\u95ee\u9898\u3002</p> Dp <pre><code>/*\n  \u72b6\u6001\u8868\u793a\n    (x, y, l) \u8868\u793a\u4ee5 (x, y) \u7ed3\u5c3e\u7684\u6ed1\u5761\u957f\u5ea6\u4e3a l\n    (x, y) \u76f8\u540c\u65f6\uff0c\u6700\u5927\u5316 l\uff0cdp[x][y] \u8868\u793a\u4ee5 (x, y) \u7ed3\u5c3e\u7684\u6700\u957f\u6ed1\u5761\u957f\u5ea6\n  \u72b6\u6001\u8f6c\u79fb\n    dp[x][y] = max(dp[x'][y'] + 1)\uff0c\u5176\u4e2d (x', y') \u4e0e (x, y) \u76f8\u90bb\uff0c\u5e76\u4e14 a[x'][y'] &gt; a[x][y]\n  \u521d\u59cb\u72b6\u6001\n    dp[x][y] = 1\n  \u62d3\u6251\u5e8f\n    \u62d3\u6251\u5e8f\u4e0d\u660e\u663e\uff0c\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\n\n  \u72b6\u6001\u8868\u793a\n    \u7531\u4e8e\u6ed1\u5761\u662f\u4e0b\u964d\u5e8f\u5217\uff0c\u91cd\u65b0\u7ed9\u683c\u5b50\u6807\u53f7\uff0c\u5e76\u8bb0\u5f55\u6bcf\u4e2a\u683c\u5b50\u7684\u5750\u6807\u3001\u6570\u503c\uff0c\u5e76\u6309\u6570\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n    (i, l) \u8868\u793a\u4ee5\u7b2c i \u4e2a\u683c\u5b50\u7ed3\u5c3e\u7684\u6ed1\u5761\u957f\u5ea6\u4e3a l\n    dp[i] \u8868\u793a\u4ee5\u7b2c i \u4e2a\u683c\u5b50\u7ed3\u5c3e\u7684\u6700\u957f\u6ed1\u5761\u957f\u5ea6\n  \u72b6\u6001\u8f6c\u79fb\n    dp[i] = max(dp[j]) + 1\uff0c\u5176\u4e2d j &lt; i\uff08\u4fdd\u8bc1\u4e86\u9ad8\u5ea6\u4e0b\u964d\uff09\u5e76\u4e14 j \u548c i \u7684\u5750\u6807\u76f8\u90bb\n  \u521d\u59cb\u72b6\u6001\n    dp[i] = 1;\n  \u62d3\u6251\u5e8f\n    \u7531\u4e8e\u5df2\u7ecf\u6392\u5e8f\uff0c\u968f\u7740 i \u7684\u589e\u5927\u9ad8\u5ea6\u5fc5\u7136\u4e0b\u964d\uff0c\u6309 i \u9012\u589e\u7684\u65b9\u5411\u8f6c\u79fb\n*/\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int N = 1001;\nconst int dx[] = {0, 0, 1, -1};\nconst int dy[] = {1, -1, 0, 0};\n\nstruct Node{\n  int x, y, v;  // \u5750\u6807\u548c\u6570\u503c\n};\n\nbool cmp(const Node &amp;i, const Node &amp;j){  // \u6309\u7167\u6570\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n  return i.v &gt; j.v;\n}\n\nint n, m, c;\nNode a[N * N];\nint dp[N * N];\n\nbool Check(const Node &amp;a, const Node &amp;b){\n  for (int i = 0; i &lt; 4; i++){\n    if (a.x + dx[i] == b.x &amp;&amp; a.y + dy[i] == b.y){\n      return 1;\n    }\n  }\n  return 0;\n}\n\nint main(){\n  cin &gt;&gt; n &gt;&gt; m;\n  for (int i = 1; i &lt;= n; i++){\n    for (int j = 1; j &lt;= m; j++){\n      int x;\n      cin &gt;&gt; x;\n      a[++c] = {i, j, x};\n    }\n  }\n  sort(a + 1, a + c + 1, cmp);\n  int ans = 0;\n  for (int i = 1; i &lt;= c; i++){  // \u6309\u6570\u503c\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\n    dp[i] = 1;\n    for (int j = 1; j &lt; i &amp;&amp; a[j].v &gt; a[i].v; j++){  // \u679a\u4e3e\u6570\u503c\u5927\u7684\u70b9\n      if (Check(a[i], a[j])){  // \u5982\u679c\u4e24\u4e2a\u70b9\u76f8\u90bb\n        dp[i] = max(dp[i], dp[j] + 1);\n      }\n    }\n    ans = max(ans, dp[i]);\n  }\n  cout &lt;&lt; ans &lt;&lt; endl;\n  return 0;\n}\n</code></pre>"},{"location":"dp/memorization/#\u4e0e\u4f7f\u7528\u5faa\u73af\u7684\u9012\u63a8\u7684\u533a\u522b","title":"\u4e0e\u4f7f\u7528\u5faa\u73af\u7684\u9012\u63a8\u7684\u533a\u522b","text":"<p>\u53ef\u4ee5\u53d1\u73b0\u8f6c\u79fb\u5f62\u5f0f\u4e0a\uff0c\u8bb0\u5fc6\u5316\u641c\u7d22\u548c\u6536\u96c6\u578b\u9012\u63a8\u662f\u5f88\u76f8\u4f3c\u7684\u3002\u56e0\u4e3a\u8bb0\u5fc6\u5316\u641c\u7d22\u548c\u6536\u96c6\u578b\u9012\u63a8\u672c\u8d28\u4e0a\u53ea\u662f dp \u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u6cd5\u3002</p> <p>\u5faa\u73af dp \u9700\u8981\u5148\u6307\u660e\u62d3\u6251\u5e8f\u4fdd\u8bc1\u6bcf\u4e2a\u72b6\u6001\u53ea\u6c42\u89e3\u4e00\u6b21\uff0c\u800c\u8bb0\u5fc6\u5316\u641c\u7d22\u4e0d\u9700\u8981\u62d3\u6251\u5e8f\uff08\u53ea\u8981\u9898\u76ee\u7684\u9650\u5236\u6761\u4ef6\u4fdd\u8bc1\u6709\u62d3\u6251\u5e8f\uff09\uff0c\u901a\u8fc7\u7ed9\u72b6\u6001\u6253\u6807\u8bb0\u7684\u65b9\u5f0f\u5b9e\u73b0\u6bcf\u4e2a\u72b6\u6001\u6c42\u89e3\u4e00\u6b21\u3002</p>"},{"location":"dp/memorization/#\u6280\u5de7","title":"\u6280\u5de7","text":"<p>\u5f53\u4f60\u53d1\u73b0\u4e00\u9053\u52a8\u6001\u89c4\u5212\u9898\u76ee\u7684\u62d3\u6251\u5e8f\u6709\u70b9\u96be\u627e\u5230\uff0c\u6216\u8005\u8bf4\u9898\u76ee\u7684\u8f6c\u79fb\u8fc7\u7a0b\u6bd4\u8f83\u590d\u6742\uff0c\u5bfc\u81f4\u4f60\u7528\u641c\u7d22\u6216\u8005\u5206\u6cbb\u6765\u7f16\u5199\u4ee3\u7801\u65f6\uff0c\u8bb0\u5fc6\u5316\u662f\u4e00\u4e2a\u597d\u7684\u4f18\u5316\u7b56\u7565\u3002</p> <p>Warning</p> <p>\u5e73\u65f6\u5199\u52a8\u89c4\u9898\u65f6\u8fd8\u662f\u5c3d\u91cf\u5199\u5faa\u73af\u7684 dp\uff0c\u53bb\u5206\u6790\u72b6\u6001\u8f6c\u79fb\u62d3\u6251\u5e8f\uff0c\u5728\u5e94\u8bd5\u4e2d\u5b9e\u5728\u5199\u4e0d\u51fa\u5faa\u73af dp \u624d\u8003\u8651\u8bb0\u5fc6\u5316\u3002</p> <p>\u4e00\u822c\u5199\u8bb0\u5fc6\u5316\u7684\u6d41\u7a0b\u4e3a\uff1a</p> <ol> <li>\u5199\u51fa\u66b4\u641c dfs</li> <li>\u5c06 dfs \u6539\u6210\u6ca1\u6709\u3010\u5916\u90e8\u53d8\u91cf\u3011\u5bf9\u641c\u7d22\u8fc7\u7a0b\u9020\u6210\u3010\u5168\u5c40\u5f71\u54cd\u3011\u7684\u4ee3\u7801</li> <li>\u6dfb\u52a0\u8bb0\u5fc6\u5316\u6570\u7ec4</li> </ol> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u8bb0\u5fc6\u5316\u641c\u7d22\u6709\u4ee5\u4e0b\u51e0\u4e2a\u7279\u70b9\uff1a</p> <ol> <li>\u7531\u4e8e\u9012\u5f52\u7684\u5b9e\u73b0\u5f62\u5f0f\uff0c\u5e38\u6570\u65f6\u95f4\u5f00\u9500\u6bd4\u8f83\u5927\uff0c\u5e76\u4e14\u96be\u4ee5\u4f7f\u7528\u5176\u4ed6\u4f18\u5316\u3002</li> <li>\u5bf9\u4e8e\u4e00\u4e9b\u6bd4\u8f83\u590d\u6742\u7684 DP \u9898\u76ee\uff0c\u6bd4\u5faa\u73af DP \u80fd\u66f4\u597d\u7684\u5904\u7406\u8fb9\u754c\u60c5\u51b5\u3002</li> <li>\u5faa\u73af DP \u53ef\u80fd\u9700\u8981\u904d\u5386\u62d3\u6251\u5e8f\u4e2d\u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\uff0c\u800c\u8bb0\u5fc6\u5316\u641c\u7d22\u4e0d\u4f1a\u5bf9\u4e00\u4e9b\u65e0\u6548\u3001\u975e\u6cd5\u72b6\u6001\u8fdb\u884c\u641c\u7d22\u3002\uff08\u5728\u4e00\u4e9b\u9898\u76ee\u4e2d\u5f88\u6709\u4ef7\u503c\uff0c\u4f8b\u5982 [NOIP2018 \u666e\u53ca\u7ec4] \u6446\u6e21\u8f66\uff09</li> </ol>"},{"location":"dp/memorization/#\u4e00\u4e9b\u4e60\u9898","title":"\u4e00\u4e9b\u4e60\u9898","text":"<p>DAG \u4e0a\u6700\u957f\u8def</p> <p>[NOIP2018 \u666e\u53ca\u7ec4] \u6446\u6e21\u8f66</p>"},{"location":"dp/multi_sequence_dp/","title":"\u591a\u5e8f\u5217 dp","text":""},{"location":"dp/multi_sequence_dp/#\u53cc\u5e8f\u5217\u95ee\u9898","title":"\u53cc\u5e8f\u5217\u95ee\u9898","text":""},{"location":"dp/multi_sequence_dp/#atcoder-dp_f","title":"atcoder dp_f","text":"<p>\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\uff0clongest common subsequence\uff0c\u7b80\u79f0 lcs\u3002</p> <p>\u9898\u610f</p> <p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 \\(s, t\\)\uff0c\u6c42\u51fa\u5b83\u4eec\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217 \\(x\\)\uff0c\u5373 \\(x\\) \u65e2\u662f \\(s\\) \u7684\u5b50\u5e8f\u5217\u53c8\u662f \\(t\\) \u7684\u5b50\u5e8f\u5217\u3002\\(1 \\le |s|, |t| \\le 3000\\)\u3002</p> <p>\u53ef\u4ee5\u8003\u8651\u5982\u4f55\u6784\u9020\u516c\u5171\u7684\u5b50\u5e8f\u5217\u3002</p> \u4e00\u4e9b\u53ef\u4f9b\u53c2\u8003\u7684\u66b4\u641c DFS1DFS2DFS3 <pre><code>// \u6c42\u51fa s \u548c t \u7684\u5b50\u5e8f\u5217\uff0c\u518d\u5224\u516c\u5171\n#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nstring s, t;\nint n, m;\nset&lt;string&gt; res_s, res_t;\n\nvoid dfs(const string &amp;s, set&lt;string&gt; &amp;S, int last, string ans) {\n  S.insert(ans);\n  for (int i = last + 1; i &lt; s.size(); i++) {\n    dfs(s, S, i, ans + s[i]);\n  }\n}\n\nint main() {\n  cin &gt;&gt; s &gt;&gt; t;\n  dfs(s, res_s, -1, \"\");\n  dfs(t, res_t, -1, \"\");\n  for (auto s : res_s) {\n    if (res_t.count(s)) {  // \u627e\u5230\u516c\u5171\u5b50\u5e8f\u5217\n      cout &lt;&lt; s &lt;&lt; '\\n';\n    }\n  }\n  return 0;\n}\n</code></pre> <pre><code>// \u5148\u6c42\u51fa s \u7684\u5b50\u5e8f\u5217\uff0c\u518d\u5224\u8be5\u5b50\u5e8f\u5217\u662f\u5426\u4e3a t \u7684\u5b50\u5e8f\u5217\n#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nset&lt;string&gt; res_s;\nstring s, t;\n\n// \u5224\u65ad a \u662f b \u7684\u5b50\u5e8f\u5217\nbool Check(const string &amp;a, const string &amp;b) {\n  int n = a.size(), m = b.size(), i, j;\n  for (i = 0, j = 0; i &lt; n &amp;&amp; j &lt; m; j++) {\n    i += a[i] == b[j];\n  }\n  return i == n;\n}\n\nvoid dfs(const string &amp;s, set&lt;string&gt; &amp;S, int last, string ans) {\n  S.insert(ans);\n  for (int i = last + 1; i &lt; s.size(); i++) {\n    string str = ans + s[i];\n    if (Check(str, t)) {\n      dfs(s, S, i, ans + s[i]);\n    }\n  }\n}\n\nint main() {\n  cin &gt;&gt; s &gt;&gt; t;\n  dfs(s, res_s, -1, \"\");\n  for (auto s : res_s) {\n    if (Check(s, t)) {\n    }\n  }\n  return 0;\n}\n</code></pre> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nset&lt;string&gt; res, _res;\nstring s, t;\n\n// \u4ee5 s[last_s] \u548c t[last_t] \u7ed3\u5c3e\u7684\u516c\u5171\u5b50\u5e8f\u5217\u4e3a ans\nvoid dfs(int last_s, int last_t, string ans) {\n  res.insert(ans);\n  for (int i = last_s + 1; i &lt; s.size(); i++) {\n    for (int j = last_t + 1; j &lt; t.size(); j++) {\n      if (s[i] == t[j]) {\n        dfs(i, j, ans + s[i]);\n        break;\n      }\n    }\n  }\n}\n\n// s[1] ~ s[i] \u548c t[1] ~ t[j] \u7684\u516c\u5171\u5b50\u5e8f\u5217\u4e3a ans\nvoid DFS(int i, int j, string ans) {\n  _res.insert(ans);\n  if (i == s.size() || j == t.size()) {\n    return;\n  }\n  if (s[i] == t[j]) {\n    DFS(i + 1, j + 1, ans + s[i]);\n  }\n  DFS(i + 1, j, ans), DFS(i, j + 1, ans);\n}\n\nint main() {\n  freopen(\"1.out\", \"w\", stdout);\n  cin &gt;&gt; s &gt;&gt; t;\n  dfs(-1, -1, \"\");\n  for (auto str : res) {\n    cout &lt;&lt; str &lt;&lt; '\\n';\n  }\n  cout &lt;&lt; '\\n';\n  DFS(0, 0, \"\");\n  for (auto str : _res) {\n    cout &lt;&lt; str &lt;&lt; '\\n';\n  }\n  return 0;\n}\n</code></pre> \u6784\u9020\u8fc7\u7a0b <p>\u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u6307\u9488 \\(i, j\\)\uff0c\u4e00\u5f00\u59cb\u5b83\u4eec\u4e3a \\(1\\)\uff0c\u7528\u4e8e\u6307\u5411 \\(s\\) \u548c \\(t\\) \u7684\u5b57\u7b26\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u4e09\u6761\u89c4\u5219\u6784\u9020\u516c\u5171\u5b50\u5e8f\u5217\uff1a</p> <ol> <li>\\(s_i\\) \u4e0d\u5728\u516c\u5171\u5b50\u5e8f\u5217\u4e2d\uff0c\u6b64\u65f6 \\(i\\) \u52a0 \\(1\\)\uff08\\(i \\le |s|\\)\uff09\u3002</li> <li>\\(t_j\\) \u4e0d\u5728\u516c\u5171\u5b50\u5e8f\u5217\u4e2d\uff0c\u6b64\u65f6 \\(j\\) \u52a0 \\(1\\)\uff08\\(j \\le |t|\\)\uff09\u3002</li> <li>\\(s_i = t_j\\) \u65f6\uff0c\u53ef\u4ee5\u5c06 \\(s_i\\)\uff08\u6216 \\(t_j\\)\uff09\u52a0\u5165\u5230\u7ed3\u679c\u7684\u516c\u5171\u5b50\u5e8f\u5217\u4e2d\uff08\\(i \\le |s|, j \\le |t|\\)\uff09\u3002</li> </ol> <p>\u5c1d\u8bd5\u7528\u641c\u7d22\u5b9e\u73b0\u8be5\u6784\u9020\u8fc7\u7a0b\u3002</p> \u72b6\u6001\u548c\u8f6c\u79fb <p>\u5b9a\u4e49 \\(dp_{i, j}\\) \u8868\u793a \\(s_1 s_2 \\dots s_i\\) \u548c \\(t_1 t_2 \\dots t_j\\) \u7684\u516c\u5171\u5b50\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\u3002</p> <p>\u6839\u636e\u4e0a\u8ff0\u6784\u9020\u8fc7\u7a0b\uff0c\u663e\u7136\u6709 \\(dp_{i, j} = \\max(dp_{i - 1, j}, dp_{i, j - 1}, dp_{i - 1, j - 1} + [s_i == t_j])\\)\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(|s||t|)\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(|s||t|)\\)\u3002</p> \u65b9\u6848\u8f93\u51fa <p>\u4ece\u76ee\u6807\u72b6\u6001 \\(dp_{|s|, |t|}\\) \u5f00\u59cb\uff0c\u5012\u63a8\u5bfb\u627e\u5728\u6700\u4f18\u7684\u8f6c\u79fb\u8def\u5f84\u4e0a\u7684\u72b6\u6001\uff0c\u7136\u540e\u6784\u9020\u5b57\u7b26\u4e32\u3002</p> \u4ee3\u7801 <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MAXN = 3e3 + 1;\n\nstring s, t;\nint dp[MAXN][MAXN];\n\nint main() {\n  cin &gt;&gt; s &gt;&gt; t;\n  int n = s.size(), m = t.size();\n  s = '#' + s, t = '#' + t;\n  for (int i = 1; i &lt;= n; i++) {\n    for (int j = 1; j &lt;= m; j++) {\n      dp[i][j] = max({dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1] + (s[i] == t[j])});\n    }\n  }\n  string ans;\n  for (int i = n, j = m; i &gt;= 1 &amp;&amp; j &gt;= 1;) {\n    if (dp[i][j] == dp[i - 1][j]) {\n      i--;\n    } else if (dp[i][j] == dp[i][j - 1]) {\n      j--;\n    } else {\n      ans += s[i];\n      i--, j--;\n    }\n  }\n  reverse(ans.begin(), ans.end());\n  cout &lt;&lt; ans &lt;&lt; '\\n';\n  return 0;\n}\n</code></pre>"},{"location":"dp/multi_sequence_dp/#cses-1639","title":"CSES 1639","text":"<p>\u7f16\u8f91\u8ddd\u79bb\u3002</p> <p>\u9898\u610f</p> <p>\u7ed9\u5b9a\u5b57\u7b26\u4e32 \\(s\\) \u548c \\(t\\)\uff0c\u4f60\u53ef\u4ee5\u5728\u5b57\u7b26\u4e32 \\(s\\) \u4e2d\u63d2\u5165\u3001\u5220\u9664\u3001\u4fee\u6539\u5b57\u7b26\uff0c\u6c42\u51fa\u4f7f\u5f97 \\(s\\) \u53d8\u4e3a \\(t\\) \u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002\\(1 \\le |s|, |t| \\le 5000\\)\u3002</p> <p>\u540c\u6837\u5730\uff0c\u8003\u8651\u5982\u4f55\u6784\u9020\u4fee\u6539\u65b9\u6848\u3002\u6b63\u7740\u6784\u9020\u65b9\u6848\u6709\u70b9\u56f0\u96be\uff0c\u6211\u4eec\u4e0d\u59a8\u5229\u7528\u5206\u6cbb\u7684\u601d\u60f3\u5c06\u5927\u95ee\u9898\u5206\u89e3\u6210\u5c0f\u95ee\u9898\u8fdb\u884c\u6c42\u89e3\u3002</p> <p>\u4ee4 \\(F(i, j)\\) \u8868\u793a\u5c06 \\(s_1 s_2 \\dots, s_i\\) \u53d8\u4e3a \\(t_1 t_2 \\dots t_j\\) \u7684\u6700\u5c11\u4fee\u6539\u6b21\u6570\uff0c\u5219\u539f\u95ee\u9898\u4e3a \\(F(|s|, |t|)\\)\u3002</p> \u5206\u6cbb\u8fc7\u7a0b <p>\u5bf9\u4e8e\u95ee\u9898 \\(F(i, j)\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u505a\u5982\u4e0b\u5206\u89e3\uff1a</p> <ol> <li>\u53ef\u4ee5\u8003\u8651\u5728\u5b57\u7b26 \\(s_i\\) \u4e4b\u540e\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26 \\(t_j\\)\uff0c\u5c06\u95ee\u9898\u5206\u89e3\u4e3a \\(F(i, j - 1)\\)\u3002</li> <li>\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u5c06\u5b57\u7b26 \\(s_i\\) \u76f4\u63a5\u5220\u6389\uff0c\u5c06\u95ee\u9898\u5206\u89e3\u4e3a \\(F(i - 1, j)\\)\u3002</li> <li>\u53ef\u4ee5\u8003\u8651\u5c06\u5b57\u7b26 \\(s_i\\) \u4fee\u6539\u4e3a \\(t_j\\)\uff0c\u5c06\u95ee\u9898\u5206\u89e3\u4e3a \\(F(i - 1, j - 1)\\)\u3002</li> </ol> <p>\\(F(i, j) = \\min(F(i, j - 1) + 1, F(i - 1, j) + 1, F(i - 1, j - 1) + [s_i \\ne t_j])\\)</p> <p>\u5c06\u4e0a\u8ff0\u8fc7\u7a0b\u8f6c\u6362\u6210 dp \u5373\u53ef\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e00\u4e9b\u8fb9\u754c\u95ee\u9898\uff08\u81ea\u884c\u601d\u8003\u548c\u8c03\u8bd5\uff09\u3002</p> \u4ee3\u7801 <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MAXN = 5e3 + 1;\n\nstring s, t;\nint n, m, dp[MAXN][MAXN];\n\nint main() {\n  ios::sync_with_stdio(0), cin.tie(0);\n  cin &gt;&gt; s &gt;&gt; t;\n  n = s.size(), m = t.size();\n  s = '#' + s, t = '#' + t;\n  for (int i = 1; i &lt;= n; i++) {\n    dp[i][0] = i;\n  }\n  for (int i = 1; i &lt;= m; i++) {\n    dp[0][i] = i;\n  }\n  for (int i = 1; i &lt;= n; i++) {\n    for (int j = 1; j &lt;= m; j++) {\n      /*\n      dp[i][j] = min({dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1]}) + 1;\n      if (s[i] == t[j]) {\n        dp[i][j] = min(dp[i][j], dp[i - 1][j - 1]);\n      }\n      */\n      if (s[i] == t[j]) {\n        dp[i][j] = dp[i - 1][j - 1];\n      } else {\n        dp[i][j] = min({dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1]}) + 1;\n      }\n    }\n  }\n  cout &lt;&lt; dp[n][m];\n  return 0;\n}\n</code></pre>"},{"location":"dp/sequence_dp/","title":"\u5e8f\u5217 DP","text":""},{"location":"dp/sequence_dp/#\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217","title":"\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217","text":"<p>longest increasing subsequence\uff0c\u7b80\u79f0 LIS\u3002</p>"},{"location":"dp/sequence_dp/#\u6d1b\u8c37-b3637","title":"\u6d1b\u8c37 B3637","text":"<p>\u72b6\u6001\uff1a\\(dp_i\\) \u8868\u793a\u4ee5 \\(i\\)\u200b \u7ed3\u5c3e\u7684 LIS \u7684\u6700\u957f\u957f\u5ea6\u3002</p> <p>\u76f4\u63a5\u505a \\(O(N^2)\\) dp\u3002</p>"},{"location":"dp/sequence_dp/#cses-1145","title":"CSES 1145","text":"<p>LIS \u7684 \\(O(n \\log n)\\) \u5b9e\u73b0\uff0c\u672c\u5904\u8bb2\u89e3\u4e8c\u5206\uff0c\u4ee5\u540e\u8bb2\u89e3\u6570\u636e\u7ed3\u6784\u4f18\u5316\u3002</p> <p>\u4e00\u5f00\u59cb\u7528\u641c\u7d22\u5b9e\u73b0 LIS \u7684\u72b6\u6001\u8bbe\u8ba1\u4e3a \\((i, x)\\)\uff0c\u8868\u793a\u4e0a\u5347\u5b50\u5e8f\u5217\u672b\u5c3e\u5143\u7d20\u4e3a \\(a_i\\)\uff0c\u957f\u5ea6\u4e3a \\(x\\)\u3002</p> <p>\u7c7b\u4f3c\u4e8e CF1582F1\uff0c\u5047\u8bbe\u8003\u8651\u5b8c\u524d \\(i\\) \u4e2a\u5143\u7d20\u540e\uff0c\u6709\u5f88\u591a\u957f\u5ea6\u4e3a \\(x\\) \u7684\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u90a3\u5bf9\u4e8e\u957f\u5ea6\u4e3a \\(x\\) \u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u80af\u5b9a\u662f\u672b\u5c3e\u5143\u7d20\u8d8a\u5c0f\u8d8a\u597d\u3002</p> <p>\u56e0\u6b64\u91cd\u65b0\u8bbe\u8ba1\u72b6\u6001 \\(dp_{i, x}\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u5143\u7d20\u7684\u957f\u5ea6\u4e3a \\(x\\) \u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u672b\u5c3e\u5143\u7d20\u6700\u5c0f\u503c\u3002\u521d\u59cb\u5316\u65b9\u9762\uff0c\u7531\u4e8e\u4e00\u5f00\u59cb\u53ea\u6709\u7a7a\u5e8f\u5217\uff0c\u6240\u4ee5 \\(dp_{0, 1} \\sim dp_{0, n}\\) \u90fd\u4e3a \\(\\infty\\)\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a \\(dp_{i, 1} \\sim dp_{i, n}\\) \u662f\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684\uff0c\u53ef\u4ee5\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\uff1a</p> <ul> <li>\u5047\u8bbe\u5b58\u5728\u4e00\u4e2a \\(x(0 \\le x \\le n - 1)\\) \u4f7f\u5f97 \\(dp_{i, x} \\ge dp_{i, x + 1}\\) \u5e76\u4e14 \\(dp_{i, x + 1} \\ne \\infty\\)\u3002</li> <li>\u4ee4\u524d \\(i\\) \u4e2a\u5143\u7d20\u4e2d\u957f\u5ea6\u4e3a \\(x + 1\\) \u7684\u67d0\u4e2a\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u503c\u4f9d\u6b21\u4e3a \\(p_1 \\lt p_2 \\lt \\dots \\lt p_{x + 1} = dp_{i, x + 1}\\)\u3002</li> <li>\u90a3\u4e48\u5bf9\u4e8e\u957f\u5ea6\u4e3a \\(x\\) \u7684\u4e0a\u5347\u5b50\u5e8f\u5217 \\(p_1 \\lt p_2 \\dots \\lt p_x \\lt dp_{i, x + 1} \\le dp_{i, x}\\)\u3002\u672b\u5c3e\u5143\u7d20 \\(p_x\\) \u6bd4 \\(dp_{i, x}\\) \u5c0f\uff0c\u4e0e \\(dp_{i, x}\\) \u7684\u5b9a\u4e49\u77db\u76fe\u3002\u53cd\u8bc1\u6cd5\u6210\u7acb\u3002</li> </ul> <p>\u89c2\u5bdf\u8f6c\u79fb\uff1a</p> <ul> <li>\u53ef\u4ee5\u4e0d\u9009\u7b2c \\(i + 1\\) \u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u5148 \\(dp_{i + 1, x} = dp_{i, x}\\)</li> <li>\u5982\u679c\u9009 \\(a_{i + 1}\\)\uff0c\u5219\u53ef\u4ee5\u627e\u5230 \\(dp_{i + 1, x} \\ge a_{i + 1}\\) \u4e2d\u7684\u6700\u5c0f\u7684 \\(x\\)\uff08\u4e3a\u4e86\u4fdd\u8bc1 \\(dp_{i + 1}\\) \u7684\u5355\u8c03\u6027\uff09\uff0c\u7136\u540e\u66f4\u65b0 \\(dp_{i + 1, x}\\) \u7684\u503c\u3002</li> <li>\u6bcf\u6b21\u53ea\u4f1a\u4fee\u6539 \\(dp_{i + 1}\\) \u4e2d\u7684\u4e00\u4e2a\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u964d\u7ef4\u4f18\u5316\u3002</li> </ul> <p>\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(N)\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N \\log N)\\)\u3002</p>"},{"location":"dp/sequence_dp/#\u5212\u5206-dp","title":"\u5212\u5206 DP","text":"<p>\u5212\u5206 DP\uff1a\u5728\u6570\u7ec4\u4e2d\u9009 \\(k\\) \u4e2a\u5143\u7d20\u3001\u9009 \\(k\\) \u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5b50\u6bb5\u3001\u5206\u4e3a \\(k\\) \u4e2a\u5b50\u6bb5\u7684\u4e00\u7c7b\u52a8\u6001\u89c4\u5212\u6a21\u578b\u3002\u76f8\u5f53\u4e8e\u662f\u5728\u5b50\u5e8f\u5217\u95ee\u9898\u7684\u57fa\u7840\u4e4b\u4e0a\u52a0\u4e86\u4e00\u4e2a\u9009\u6570\u6570\u91cf\u7684\u9650\u5236\u3002</p> <p>\u5212\u5206 DP \u7ecf\u5e38\u4e0e\u5404\u79cd\u5404\u6837\u7684\u4f18\u5316\u7ed3\u5408\u8d77\u6765\u8003\u5bdf\uff08\u56e0\u4e3a\u72b6\u6001\u6bd4\u8f83\u597d\u60f3\uff09\uff0c\u4f8b\u5982\u524d\u7f00\u548c\u3001\u53cc\u6307\u9488\u3001\u7d2f\u52a0\u548c\u3001\u5355\u8c03\u961f\u5217\u3001\u7ebf\u6bb5\u6811\u7b49\u4e00\u7cfb\u5217\u6570\u636e\u7ed3\u6784\u4f18\u5316\u3002</p>"},{"location":"dp/sequence_dp/#\u6d1b\u8c37-p9688","title":"\u6d1b\u8c37 P9688","text":"<p>\u4ee4 \\(dp_{x, i}\\) \u8868\u793a\u5728\u524d \\(i\\) \u79cd\u989c\u8272\u4e2d\u9009\u4e86 \\(x\\) \u79cd\u989c\u8272\uff0c\u6700\u540e\u9009\u7684\u989c\u8272\u4e3a \\(i\\) \u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>\u8f6c\u79fb\u65f6\u8003\u8651\u679a\u4e3e\u4e0a\u4e00\u4e2a\u9009\u4e86\u989c\u8272 \\(j\\)\uff0c\u5219 \\(dp_{x, i}\\) \u53ef\u4ee5\u7531 \\(dp_{x - 1, j}\\) \u8f6c\u79fb\u800c\u6765\uff0c\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u65f6 \\(j \\lt i\\)\u3001\u989c\u8272 \\(i, j\\) \u90fd\u51fa\u73b0\u3001\u989c\u8272\u4e3a \\(i\\) \u7684\u683c\u5b50\u5168\u90e8\u5728\u989c\u8272\u4e3a \\(j\\) \u7684\u683c\u5b50\u7684\u53f3\u8fb9\u3002\u8fd9\u4e9b\u9650\u5236\u6761\u4ef6\u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406\u6bcf\u79cd\u989c\u8272\u7684\u6700\u65e9\u3001\u6700\u665a\u683c\u5b50\u6765\u5b9e\u73b0\u3002</p> <p>\\(dp\\) \u8fc7\u7a0b\u7684\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(NK)\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N^2K)\\)\u200b\u3002</p> <p>\u5212\u5206 \\(dp\\) \u7684\u62d3\u6251\u5e8f\uff0c\u53ef\u4ee5\u662f \\(x\\) \u4ece\u5c0f\u5230\u5927\uff0c\u4e5f\u53ef\u4ee5\u662f \\(i\\) \u4ece\u5c0f\u5230\u5927\u3002</p>"},{"location":"dp/sequence_dp/#cf1133e","title":"CF1133E","text":"\u5f62\u5f0f\u5316\u9898\u610f <p>\u7ed9\u5b9a \\(n\\) \u4e2a\u6574\u6570 \\(a_i\\)\uff0c\u4f60\u9700\u8981\u5c06\u6574\u6570\u5206\u4e3a\u6700\u591a \\(k\\) \u7ec4\uff0c\u6bcf\u4e2a\u6574\u6570\u6700\u591a\u5206\u5230\u4e00\u7ec4\uff0c\u5e76\u4e14\u6bcf\u7ec4\u5185\u6574\u6570\u7684\u6781\u5dee\u4e0d\u8d85\u8fc7 \\(5\\)\u3002\u6c42\u6700\u591a\u6709\u591a\u5c11\u6574\u6570\u88ab\u5206\u7ec4\u3002\\(1 \\le k \\le n \\le 5000\\)\u3002</p> \u63d0\u793a <p>\u4e0d\u96be\u60f3\u5230\uff0c\u53ef\u4ee5\u5148\u6392\u5e8f\uff0c\u6b64\u65f6\u6bcf\u7ec4\u5185\u7684\u6574\u6570\u4e00\u5b9a\u662f\u6392\u5e8f\u540e\u7684\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\u3002</p> \u72b6\u6001\u548c\u8f6c\u79fb <p>\u5b9a\u4e49\u72b6\u6001 \\(dp_{i, j}\\) \u8868\u793a\u524d \\(i\\) \u4e2a\u6574\u6570\u5206\u4e3a\u4e86 \\(j\\) \u4e2a\u975e\u7a7a\u7ec4\u65f6\u9009\u51fa\u7684\u6700\u591a\u6570\u91cf\u3002</p> <p>\u8003\u8651\u6536\u96c6\u578b\u8f6c\u79fb\u3002\u5982\u679c \\(a_i\\) \u4e0d\u88ab\u5206\u7ec4\uff0c\u663e\u7136\u6709\u8f6c\u79fb \\(dp_{i, j} = \\max(dp_{i - 1, j})\\)\u3002\u5426\u5219\uff0c\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u7b2c \\(j\\) \u7ec4\u9009\u7684\u7b2c\u4e00\u4e2a\u6574\u6570 \\(a_k\\)\uff0c\u9700\u8981\u6ee1\u8db3 \\(a_i - a_k \\le 5\\)\uff0c\u7136\u540e\u505a\u8f6c\u79fb \\(dp_{i, j} = \\max{dp_{i, j}, dp_{k - 1, j - 1} + i - k + 1}\\)\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(nk)\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^2k)\\)\uff0cTLE\u3002</p> \u4f18\u5316 <p>\u5982\u679c \\(a_i\\) \u88ab\u5206\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5c3d\u53ef\u80fd\u591a\u7684\u6574\u6570\u548c \\(a_i\\) \u4e00\u7ec4\u3002\u5f62\u5f0f\u5316\u5730\u8bf4\uff0c\u5c31\u662f\u627e\u5230\u6700\u5c0f\u7684\u6ee1\u8db3 \\(a_i - a_k \\le 5\\) \u7684 \\(k\\)\uff0c\u7136\u540e\u53ea\u505a\u4e00\u6b21\u8fd9\u4e2a \\(k\\) \u7684\u8f6c\u79fb\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u6216\u8005\u53cc\u6307\u9488\u9884\u5904\u7406\u5904\u6bcf\u4e2a \\(i\\) \u5bf9\u5e94\u7684 \\(k\\)\u3002</p> <p>\u9884\u5904\u7406\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n) \\sim O(n \\log n)\\)\uff0cdp \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u4e3a \\(O(nk)\\)\u3002</p> \u8bc1\u660e <p>\u601d\u7ef4\u8bc1\u660e\uff1a\u5f53\u5206\u51fa\u7684\u7ec4\u6570 \\(j\\) \u4e00\u5b9a\u65f6\uff0c\u5143\u7d20\u6570\u91cf\u8d8a\u5c11\uff0c\u8d8a\u6709\u53ef\u80fd\u5168\u90e8\u88ab\u5206\u7ec4\u3002\u4e00\u65b9\u9762\u8f6c\u79fb\u4fdd\u8bc1\u4e86\u7b2c \\(j\\) \u7ec4\u9009\u51fa\u7684\u6570\u5b57\u5c3d\u53ef\u80fd\u591a\uff0c\u53e6\u4e00\u65b9\u9762\u4fdd\u8bc1\u524d \\(k - 1\\) \u4e2a\u6570\u5b57\u5c3d\u53ef\u80fd\u90fd\u88ab\u5206\u7ec4\u3002</p> <p>\u5f62\u5f0f\u5316\u8bc1\u660e\uff1a\\(0 \\le dp_{i, j} - dp_{i - 1, j} \\le 1\\)\uff0c\u5219\u5bf9\u4e8e \\(k\\) \u548c \\(k + 1\\) \u7684\u8f6c\u79fb\u6709 \\((dp_{k - 1, j - 1} + i - k + 1) - (dp_{k, j - 1} + i - k) \\ge 0\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\u51b3\u7b56 \\(k\\) \u6bd4 \\(k + 1\\) \u66f4\u4f18\u3002</p>"},{"location":"dp/sequence_dp/#cf467c","title":"CF467C","text":""},{"location":"dp/sequence_dp/#\u65f6\u95f4\u5e8f\u5217\u4e0a-dp","title":"\u65f6\u95f4\u5e8f\u5217\u4e0a DP","text":""},{"location":"dp/sequence_dp/#cses-1140","title":"CSES 1140","text":"<p>\u65f6\u95f4\u5e8f\u5217\u4e0a\u7684 \\(dp\\)\u3002\u6211\u4eec\u5148\u8003\u8651 \\(a_i, b_i \\le 10^5\\) \u65f6\u95f4\u8303\u56f4\u6bd4\u8f83\u5c0f\u7684\u60c5\u51b5\u3002</p> <p>\u4ee4 \\(dp_i\\) \u8868\u793a\u5230\u65f6\u523b \\(i\\) \u7ed3\u675f\u65f6\u7684\u6700\u5927\u83b7\u5229\u3002</p> <p>\u5206\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u8fdb\u884c\u8f6c\u79fb\uff1a</p> <ul> <li> <p>\u9996\u5148 \\(dp_i = dp_{i - 1}\\)\uff0c\u8868\u793a\u65f6\u523b \\(i\\) \u4e4b\u524d\u6ca1\u6709\u8fdb\u884c\u9879\u76ee\u8fdb\u884c\u3002</p> </li> <li> <p>\u5982\u679c\u65f6\u523b \\(i\\) \u662f\u67d0\u4e9b\u9879\u76ee \\(j\\) \u7684\u7ed3\u675f\u65f6\u523b\uff0c\u5219 \\(dp_i = \\max\\{ dp_{a_j - 1} + p_j\\}\\)\uff0c\u8868\u793a\u5728\u65f6\u523b \\(i\\) \u65f6\u8fdb\u884c\u4e86\u9879\u76ee\u3002</p> </li> </ul> <p>\u62d3\u6251\u5e8f\u663e\u7136\u4e3a \\(i\\) \u4ece\u5c0f\u5230\u5927\uff0c\u5feb\u901f\u67e5\u627e \\(j\\) \u662f\u8981\u505a\u7684\u4e8b\u60c5\uff0c\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5</p> <ul> <li>\u5bf9\u6240\u6709\u4efb\u52a1\u6309\u7ed3\u675f\u65f6\u523b\u6392\u5e8f\uff0c\u7136\u540e\u53cc\u6307\u9488\u7684\u65b9\u5f0f\u7ef4\u62a4 \\(j\\)\u3002</li> <li>\u5c06\u4ee5\u65f6\u523b \\(i\\) \u7ed3\u675f\u7684\u4efb\u52a1\u7528 <code>vector</code> \u8bb0\u5f55\uff0c\u7136\u540e\u8f6c\u79fb\u65f6\u76f4\u63a5\u904d\u5386\u5bf9\u5e94\u7684 <code>vector</code>\u3002</li> </ul> <p>\\(dp\\) \u8fc7\u7a0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N + T)\\)\uff0c\u5176\u4e2d \\(N\\) \u4e3a\u4efb\u52a1\u6570\u91cf\uff0c\\(T\\)\u200b \u4e3a\u65f6\u95f4\u957f\u5ea6\u3002 </p> <p>\u7531\u4e8e\u9898\u76ee\u7684 \\(a_i, b_i \\le 10^9\\)\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u6240\u6709\u51fa\u73b0\u7684\u65f6\u523b\u79bb\u6563\u5316\u5904\u7406\u5373\u53ef\u3002</p>"},{"location":"dp/sequence_dp/#\u79bb\u6563\u5316","title":"\u79bb\u6563\u5316","text":"<pre><code>int cnt = 0;\nint t[];  // vector&lt;int&gt; t;\nfor (int i = 1; i &lt;= n; i++) {\n  cin &gt;&gt; a[i];\n  t[++cnt] = a[i];\n  // t.push_back(a[i]);\n}\nsort(t + 1, t + cnt + 1);\n// unique \u8fd4\u56de\u5df2\u6392\u5e8f\u8303\u56f4\u4e2d\u53bb\u91cd\u540e\u7684\u6570\u5217\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u4e00\u4e2a\u5730\u5740\u6216\u8fed\u4ee3\u5668\n// int m = unique(t + 1, t + cnt + 1) - t - 1;\n// sort(t.begin(), t.end());\n// t.erase(unique(t.begin(), t.end()), t.end());\n/*\n    for (int i = 1; i &lt;= cnt; i++) {\n        if (i == 1 || a[i] != a[i - 1]) {\n            a[++m] = a[i];\n        }\n    }\n*/\nfor (int i = 1; i &lt;= n; i++) {\n  a[i] = lower_bound(t + 1, t + cnt + 1, a[i]) - t;  \n  // \u6216 lower_bound(t.begin(), t.end(), a[i]) - t.begin() + 1;\n}\n</code></pre> <pre><code>map&lt;int, int&gt; h;\nfor (int i = 1; i &lt;= n; i++) {\n  cin &gt;&gt; a[i];\n  h[a[i]] = 1;\n}\nint cnt = 0;\nfor (pair&lt;int, int&gt; &amp;it : h) {\n  it.second = ++cnt;\n}\n\n// h[x] \u8bb0\u5f55\u4e86 x \u79bb\u6563\u5316\u540e\u7684\u503c\n</code></pre> <p>NOI \u7cfb\u5217\u8d5b\u4e8b\u5efa\u8bae\u4f7f\u7528\u7b2c\u4e00\u79cd\uff08\u6570\u7ec4\u6a21\u62df\uff0c\u4e0d\u662f <code>vector</code>\uff09\uff0c\u5e38\u6570\u5c0f\u3002</p>"},{"location":"dp/sequence_dp/#\u6d1b\u8c37-p1280","title":"\u6d1b\u8c37 P1280","text":"<p>\u4e0e CSES 1140 \u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u6709\u4e00\u4e2a\u8f6c\u79fb\u5904\u7406\u8d77\u6765\u6709\u4e9b\u7ec6\u8282\uff1a\u5728\u67d0\u65f6\u523b\u6709\u4efb\u52a1\u65f6\uff0c\u5fc5\u987b\u505a\u5176\u4e2d\u4e00\u4e2a\u4efb\u52a1\u3002</p> <p>\u8003\u8651\u5982\u4e0b\u60c5\u51b5\uff1a</p> <ul> <li>\u5982\u679c\u5f53\u524d\u65f6\u523b \\(i\\) \u6ca1\u6709\u4efb\u52a1\u5f00\u59cb\uff0c\u6536\u96c6\u578b\u8f6c\u79fb \\(dp_i \\gets dp_{i - 1} + 1\\)</li> <li>\u5426\u5219\u5f53\u524d\u65f6\u523b\u5f00\u59cb\u7684\u4efb\u52a1\u662f \\(j\\)\uff0c\u6269\u6563\u578b\u8f6c\u79fb \\(dp_{i - 1} \\to dp_{p_j + t_j - 1}\\)</li> </ul>"},{"location":"dp/sequence_dp/#\u5176\u4ed6\u9898\u76ee","title":"\u5176\u4ed6\u9898\u76ee","text":""},{"location":"dp/sequence_dp/#abc271_e","title":"abc271_e","text":"<p>\u4ece \\(1\\) \u5230 \\(N\\) \u7684\u8def\u5f84\u7684\u7f16\u53f7\u5e8f\u5217\u662f \\(E\\) \u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\u3002</p> <p>\u770b\u4f3c\u72b6\u6001\u4e3a \\(dp_i\\) \u4ee5\u8fb9 \\(E_i\\) \u7ed3\u5c3e\u7684\uff0c\u4ece \\(1\\) \u5230 \\(B_{E_i}\\)\u200b \u7684\u6700\u5c11\u957f\u5ea6\u3002</p> <p>\u4e0b\u4e00\u6761\u8fb9\u7684\u9009\u53d6\u5fc5\u987b\u8981\u4ee5\u5f53\u524d\u8fb9\u7684\u7ec8\u70b9\u4e3a\u8d77\u70b9\u3002</p> <p>\u91cd\u65b0\u8bbe\u8ba1\u72b6\u6001\u4e3a \\(dp_{i, u}\\) \u8868\u793a\u8003\u8651\u4e86\u8fb9 \\(E_1, \\dots, E_i\\)\uff0c\u4ece \\(1\\) \u5230 \\(u\\) \u7684\u6700\u5c11\u8def\u5f84\u957f\u5ea6\u3002</p> <p>\u8f6c\u79fb\u4e3a $$ dp_{i, u} =  \\begin{cases}  \\begin{aligned} dp_{i - 1, u}&amp;, &amp;E_i \\ne (u, v)\\ \\min(dp_{i - 1, u}, dp_{i - 1, v})&amp;, &amp;E_i = (u, v) \\end{aligned} \\end{cases} $$</p> <p>\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u53ef\u4ee5\u7701\u7565\u7b2c\u4e00\u7ef4\uff0c\u5176\u6b21\u53d1\u73b0\u8f6c\u79fb\u65f6\u53ea\u9700\u8981\u505a \\(E_i = (u, v)\\)\u200b \u7684\u8f6c\u79fb\uff0c\u56e0\u6b64\u7b2c\u4e00\u7ef4\u662f\u6beb\u65e0\u7528\u5904\u7684\u3002</p> <p>\u8fd9\u91cc\u7528\u5230\u7684\u601d\u7ef4\u603b\u7ed3\u6210\u4e00\u53e5\u8bdd\uff1a\u505a\u5e8f\u5217\u578b \\(dp\\) \u4e0d\u4e00\u5b9a\u8981\u7528\u5143\u7d20\u4e0b\u6807\u5f53 \\(dp\\) \u72b6\u6001\uff0c\u4e5f\u53ef\u4ee5\u7528\u5143\u7d20\u503c\u5f53 \\(dp\\) \u7684\u72b6\u6001\u3002</p>"},{"location":"dp/sequence_dp/#cf1582f1","title":"CF1582F1","text":"<p>\u5f88\u81ea\u7136\u7684\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u72b6\u6001\u8bbe\u8ba1\uff1a\\((i, x)\\) \u8868\u793a\u4e0a\u5347\u5b50\u5e8f\u5217\u672b\u5c3e\u5143\u7d20\u4e3a \\(a_i\\)\uff0c\u5b50\u5e8f\u5217\u5f02\u6216\u503c\u4e3a \\(x\\)\u3002</p> <p>\u76f4\u63a5\u66b4\u529b\u505a\u9012\u63a8\uff0c\u65f6\u95f4 \\(O(N^2 \\times V)\\)\uff0c\u5176\u4e2d \\(V = 512\\)\uff0c\u4e0d\u80fd\u63a5\u53d7\u3002</p> <p>\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u5047\u8bbe\u8003\u8651\u5b8c\u524d \\(i\\) \u4e2a\u5143\u7d20\uff0c\u6709\u5f88\u591a\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u503c\u4e3a \\(x\\)\uff0c\u90a3\u6211\u80af\u5b9a\u662f\u8d2a\u5fc3\u5730\u9009\u62e9\u8fd9\u4e9b\u5b50\u5e8f\u5217\u4e2d\u672b\u5c3e\u5143\u7d20\u5c3d\u53ef\u80fd\u5c0f\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u5b50\u80fd\u591f\u8ba9\u540e\u7eed\u7684\u5143\u7d20\u5c3d\u53ef\u80fd\u505a\u8f6c\u79fb\u3002</p> <p>\u4f18\u5316\u4e0b\u72b6\u6001\u8bbe\u8ba1\uff0c\\(dp_{i, x}\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u5143\u7d20\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u5f02\u6216\u503c\u4e3a \\(x\\) \u7684\u672b\u5c3e\u5143\u7d20\u6700\u5c0f\u503c\u3002\u8f6c\u79fb\u5c31\u662f\u9009\u6216\u4e0d\u9009\u5f53\u524d\u5143\u7d20\u3002\u53ef\u4ee5\u53d1\u73b0\u8f6c\u79fb\u53d1\u751f\u5728 \\(dp_i\\) \u548c \\(dp_{i - 1}\\) \u4e4b\u95f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u7a7a\u95f4\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(V)\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N \\times V)\\)\u3002</p>"},{"location":"dp/theory/","title":"DP \u7406\u8bba","text":"<p>\u5b9e\u73b0 DP \u7684\u51e0\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u8bfb\u9898\uff0c\u5c06\u9898\u610f\u8868\u8fbe\u4e3a\u6570\u5b66\u5f62\u5f0f\uff0c\u5728\u6b64\u5f62\u5f0f\u4e2d\u5bfb\u627e\u72b6\u6001\u3001\u8f6c\u79fb\u3001\u62d3\u6251\u5e8f\u3001\u6700\u4f18\u5316\u5c5e\u6027\u3002</li> <li>\u63a8\u4e0d\u51fa\u72b6\u6001\u65f6\u53ef\u4ee5\u5148\u5c1d\u8bd5\u5b9e\u73b0\u641c\u7d22\u3002</li> <li>\u8fb9\u754c\uff1a\u521d\u59cb\u72b6\u6001\u662f\u54ea\u4e9b\uff1f\u76ee\u6807\u72b6\u6001\u662f\u54ea\u4e9b\uff1f\u72b6\u6001\u521d\u59cb\u5316\u4e3a\u4ec0\u4e48\u503c\uff1f\u8f6c\u79fb\u4e2d\u662f\u5426\u53ef\u80fd\u51fa\u73b0\u6570\u7ec4\u8d8a\u754c\u3001\u6570\u636e\u6ea2\u51fa\uff1f</li> <li>\u4f18\u5316\u72b6\u6001\u8bbe\u8ba1\uff1a\u964d\u7ef4\u3001\u6539\u53d8\u6700\u4f18\u5316\u5c5e\u6027\u7b49</li> <li>\u4f18\u5316\u8f6c\u79fb\uff1a\u6570\u636e\u7ed3\u6784\u4f18\u5316\uff08\u524d\u7f00\u548c\uff0c\u5355\u8c03\u961f\u5217\uff0c\u5355\u8c03\u6808\uff0c\u7ebf\u6bb5\u6811\u7b49\uff09\uff0c\u51b3\u7b56\u5355\u8c03\u6027\uff08\u659c\u7387\u4f18\u5316\uff0c\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\uff09\u3001\u6839\u53f7\u7b97\u6cd5\u7b49\u6570\u5b66\u7c7b\u4f18\u5316\u3002</li> </ol>"},{"location":"ds/stack/","title":"stack","text":"<p>stack is a LIFO structure</p>"}]}