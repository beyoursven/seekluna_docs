{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u9010\u6708\u4fe1\u606f\u5b66","text":""},{"location":"CSPS/","title":"\u7b80\u4ecb","text":"<p>\u4ee5\u4e0b\u4e3a\u77e5\u8bc6\u70b9\u8ba1\u5212\u3002</p>"},{"location":"CSPS/#\u7a0b\u5e8f\u8bbe\u8ba1","title":"\u7a0b\u5e8f\u8bbe\u8ba1","text":"<ul> <li>STL \u5bb9\u5668\u548c\u8fed\u4ee3\u5668\uff1avector, map, set, multiset, stack, queue, deque, priority_queue, unordered_set, unordered_map</li> <li>pair, tuple</li> <li>\u7b97\u6cd5\u5e93\u4e2d\u5e38\u7528\u51fd\u6570</li> <li>\u5e38\u6570\u4f18\u5316</li> <li>\u5bf9\u62cd</li> </ul>"},{"location":"CSPS/#\u6570\u636e\u7ed3\u6784","title":"\u6570\u636e\u7ed3\u6784","text":"<ul> <li>\u94fe\u8868\uff0c\u6808\uff0c\u961f\u5217</li> <li>\u5355\u8c03\u6808\uff0c\u5355\u8c03\u961f\u5217</li> <li>\u5e76\u67e5\u96c6</li> <li>ST \u8868</li> <li>\u7ebf\u6bb5\u6811\uff0c\u6811\u72b6\u6570\u7ec4</li> <li>*\u54c8\u5e0c\u8868</li> <li>*\u5b57\u5178\u6811</li> </ul> <p>\u5b57\u7b26\u4e32\u4e2d\uff0c\u4f18\u5148\u5b66\u4f1a hash \u6253\u66b4\u529b</p>"},{"location":"CSPS/#\u56fe\u8bba","title":"\u56fe\u8bba","text":"<ul> <li>\u5efa\u56fe\uff1a\u90bb\u63a5\u8868\uff0c\u90bb\u63a5\u77e9\u9635\uff0c\u8fb9\u96c6\u6570\u7ec4</li> <li>\u56fe\u7684 DFS \u548c\u904d\u5386</li> <li>\u56fe\u7684 BFS \u548c\u53d8\u5f62</li> <li>\u62d3\u6251\u6392\u5e8f\uff1akahn\uff0cdfs</li> <li>\u6700\u77ed\u8def\uff1abellman-ford\uff0cfloyd\uff0cdijkstra\uff0c*spfa</li> <li>\u6700\u5c0f\u751f\u6210\u6811\uff1akruskal\uff0cprim</li> <li>DFS \u6811\uff0cBFS \u6811\uff0c\u751f\u6210\u6811</li> <li>\u70b9\u53cc\uff0c\u8fb9\u53cc\uff0c*\u5f3a\u8fde\u901a</li> </ul>"},{"location":"CSPS/#\u6a21\u578b","title":"\u6a21\u578b","text":"<ul> <li>\u53cd\u56fe</li> <li>\u6b21\u77ed\u8def\uff0cK \u77ed\u8def</li> <li>\u6b21\u5c0f\u751f\u6210\u6811</li> <li>\u6700\u77ed\u8def\u5f84\u6811\uff0c\u6700\u77ed\u8def\u56fe\u4e0a\u505a\u72b6\u6001\u8f6c\u79fb</li> <li>\u5e26\u8d1f\u6743\u8fb9\u7684\u56fe\uff0c*\u8d1f\u73af</li> <li>*\u5dee\u5206\u7ea6\u675f</li> <li>\u62c6\u70b9\uff0c\u5206\u5c42\u56fe\uff0c\u540c\u4f59\u72b6\u6001\u8bbe\u8ba1</li> </ul>"},{"location":"CSPS/#\u4f18\u5316","title":"\u4f18\u5316","text":"<ul> <li>\u7f29\u70b9\u4f18\u5316\u5efa\u56fe\uff0c*\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe</li> <li>\u4f18\u5316\u8f6c\u79fb</li> </ul>"},{"location":"CSPS/#\u6811\u8bba","title":"\u6811\u8bba","text":""},{"location":"CSPS/#\u4e8c\u53c9\u6811","title":"\u4e8c\u53c9\u6811","text":"<ul> <li>\u4e8c\u53c9\u6811\u7684\u6982\u5ff5</li> <li>\u4e8c\u53c9\u6811\u7684\u8868\u793a\uff1a\u513f\u5b50\u8868\u793a\u6cd5\uff0c\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6570\u7ec4\u8868\u793a</li> <li>\u4e8c\u53c9\u6811\u7684\u904d\u5386\uff1a\u5148\u5e8f\uff0c\u4e2d\u5e8f\uff0c\u540e\u5e8f</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u548c\u6ee1\u4e8c\u53c9\u6811\u7684\u6027\u8d28</li> </ul>"},{"location":"CSPS/#\u6811","title":"\u6811","text":"<ul> <li>\u6811\u7684\u6982\u5ff5</li> <li>\u6811\u7684\u5b58\u50a8\uff1a\u513f\u5b50\u8868\u793a\u6cd5\uff0c\u7236\u4eb2\u8868\u793a\u6cd5\uff0c\u5de6\u513f\u5b50\u53f3\u5144\u5f1f\u8868\u793a\u6cd5\uff08\u591a\u53c9\u8f6c\u4e8c\u53c9\uff09</li> <li>\u6811\u7684\u904d\u5386</li> <li>\u6811\u7684\u76f4\u5f84\u3001\u4e2d\u5fc3\u3001\u91cd\u5fc3</li> <li>\u57fa\u73af\u6811</li> <li>\u6700\u8fd1\u516c\u5171\u7956\u5148</li> </ul>"},{"location":"CSPS/#\u6a21\u578b_1","title":"\u6a21\u578b","text":""},{"location":"CSPS/#\u6392\u5e8f\u7b97\u6cd5","title":"\u6392\u5e8f\u7b97\u6cd5","text":"<ul> <li>\u9006\u5e8f\u5bf9\u7406\u8bba</li> <li>\u9009\u62e9\u63d2\u5165\u5192\u6ce1\u6392\u5e8f</li> <li>\u5f52\u5e76\u6392\u5e8f</li> <li>\u5feb\u901f\u6392\u5e8f</li> <li>\u5806\u6392\u5e8f\uff08\u5728 pq \u4e2d\u5b66\uff09</li> <li>\u57fa\u6570\u6392\u5e8f\uff08\u6811\u4e0a\u8def\u5f84\u5b57\u5178\u5e8f\u95ee\u9898\uff09</li> </ul>"},{"location":"CSPS/#dp","title":"DP","text":""},{"location":"CSPS/#\u6570\u5b66","title":"\u6570\u5b66","text":""},{"location":"CSPS/#\u8fdb\u5236\u548c\u4f4d\u8fd0\u7b97","title":"\u8fdb\u5236\u548c\u4f4d\u8fd0\u7b97","text":""},{"location":"CSPS/#\u6570\u8bba","title":"\u6570\u8bba","text":"<ul> <li>\u8d28\u6570\u5224\u65ad\uff0c\u8d28\u6570\u7b5b</li> <li>\u552f\u4e00\u5206\u89e3\u5b9a\u7406\uff0c\u8d28\u56e0\u6570\u5206\u89e3</li> <li>\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5</li> <li>\u53d6\u6574</li> <li>\u540c\u4f59</li> <li>\u8d39\u9a6c\u5c0f\u5b9a\u7406</li> <li>\u88f4\u8700\u5b9a\u7406</li> <li>\u6269\u6b27</li> <li>\u4e58\u6cd5\u9006\u5143</li> <li>\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b</li> <li>*\u6b27\u62c9\u51fd\u6570</li> <li>*CRT \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406</li> </ul>"},{"location":"CSPS/#\u7ec4\u5408\u6570\u5b66","title":"\u7ec4\u5408\u6570\u5b66","text":"<ul> <li>\u52a0\u6cd5\u539f\u7406\u548c\u4e58\u6cd5\u539f\u7406</li> <li>\u6392\u5217\u7ec4\u5408\u7684\u8ba1\u7b97\u4e0e\u6a21\u610f\u4e49\u4e0b\u7684\u9884\u5904\u7406</li> <li>\u591a\u91cd\u96c6\u6392\u5217\u3001\u7ec4\u5408</li> <li>\u9519\u6392\uff0c\u5706\u6392</li> <li>*\u9e3d\u7b3c\u4e0e\u5bb9\u65a5</li> <li>\u4e8c\u9879\u5f0f\u5b9a\u7406</li> </ul>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/map/","title":"map","text":"<p>\u5305\u542b\u5143\u7d20\u5bf9 <code>&lt;key, value&gt;</code> \u7684\u6709\u5e8f\u6620\u5c04\u5bb9\u5668\uff0c\u53ef\u4ee5\u770b\u505a\u662f <code>key</code> \u6620\u5c04\u5230 <code>value</code>\u3002<code>map</code> \u8981\u6c42\u6240\u6709\u7684\u6620\u5c04\u7684 <code>key</code> \u662f\u4e92\u4e0d\u76f8\u540c\u7684\uff0c<code>value</code> \u53ef\u4ee5\u91cd\u590d\u3002\u5e95\u5c42\u662f\u7ea2\u9ed1\u6811\u3002\u6240\u6709\u6620\u5c04\u6309\u7167 <code>key</code> \u6392\u5e8f\u3002</p> <p>\u5934\u6587\u4ef6 <code>&lt;map&gt;</code>\u3002 </p> <p>\u5b9a\u4e49\uff1a<code>map&lt;key \u7c7b\u578b, value \u7c7b\u578b, \u6bd4\u8f83\u5668&gt; \u5bb9\u5668\u540d</code>\u3002\u9ed8\u8ba4\u6bd4\u8f83\u5668\u4e3a <code>&lt;</code> \u89c4\u5219\u3002</p> <p>\u65e0\u9700\u7ba1 <code>multimap</code>\uff0c\u6ca1\u7528\u8fc7\u3002</p> <p>\u6bd4\u8f83\u5668\u7684\u7ec6\u8282\u540c <code>set</code>\u3002</p>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/map/#\u57fa\u672c\u4f7f\u7528","title":"\u57fa\u672c\u4f7f\u7528","text":"<p>\u63d2\u5165\uff0c\u5220\u9664\uff0c\u67e5\u627e\u90fd\u662f \\(O(\\log N)\\) \u7684\u3002\\(N\\) \u4e3a\u6620\u5c04\u5bf9\u6570\u91cf\u3002<code>map&lt;key, value&gt; m;</code></p> <ul> <li><code>m[x]</code>\uff0c\u8bbf\u95ee <code>x</code> \u6620\u5c04\u5230\u7684 value\uff0c\u5982\u679c <code>m</code> \u4e2d\u4e0d\u5b58\u5728\u8be5\u6620\u5c04\uff0c\u4f1a\u65b0\u5efa\u4e00\u4e2a <code>x</code> \u5230 value \u7c7b\u578b\u9ed8\u8ba4\u503c\u7684\u6620\u5c04\uff08int, string\uff09\u3002</li> <li><code>m[x] = y</code>\uff0c\u8d4b\u503c\u3002</li> <li><code>m.count(x)</code>\uff0c\u8fd4\u56de <code>m</code> \u4e2d\u6709\u591a\u5c11\u4e2a <code>x</code>\uff0c\u4e5f\u5c31\u662f\u770b\u662f\u5426\u5b58\u5728 key \u4e3a <code>x</code> \u7684\u6620\u5c04\u3002</li> <li><code>m.erase(x)</code>\uff0c\u5220\u9664 <code>key</code> \u4e3a <code>x</code> \u7684\u6620\u5c04\uff0c\u6ca1\u6709\u4e0d\u5220\u9664</li> <li><code>m.erase(it)</code>\uff0c\u5220\u9664 <code>it</code> \u8fed\u4ee3\u5668\u6307\u5411\u7684\u6620\u5c04\uff0c<code>it</code> \u4e0d\u4e3a\u5c3e\u8fed\u4ee3\u5668\u3002</li> <li><code>m.find(x)</code>\uff0c\u8fd4\u56de <code>key</code> \u4e3a <code>x</code> \u7684\u6620\u5c04\u7684\u8fed\u4ee3\u5668\u3002\u67e5\u627e\u6620\u5c04\u4ee5\u53ca\u5224\u65ad\u6620\u5c04\u662f\u5426\u5b58\u5728\u5e94\u4f7f\u7528 <code>.find()</code> \u800c\u975e <code>[]</code>\uff0c\u52a0\u5feb\u6548\u7387\u3002</li> <li><code>m.lower_bound(x), m.upper_bound(x)</code>\uff0c\u8fd4\u56de\u7b2c\u4e00\u4e2a <code>key</code> \u5927\u4e8e\u7b49\u4e8e\u548c\u5927\u4e8e <code>x</code> \u7684\u6620\u5c04\u7684\u8fed\u4ee3\u5668\u3002</li> <li><code>.insert(), .begin(), .end(), .empty(), .size(), .clear(), .swap()</code></li> </ul> <pre><code>map&lt;int, int&gt; m;\nm[1] = 5;                    // [(1, 5)]\nm[3] = 14;                   // [(1, 5); (3, 14)]\nm[2] = 7;                    // [(1, 5); (2, 7); (3, 14)]\nm[0] = -1;                   // [(0, -1); (1, 5); (2, 7); (3, 14)]\nm.erase(2);                  // [(0, -1); (1, 5); (3, 14)]\ncout &lt;&lt; m[1] &lt;&lt; endl;        // 5\ncout &lt;&lt; m.count(7) &lt;&lt; endl;  // 0\ncout &lt;&lt; m.count(1) &lt;&lt; endl;  // 1\ncout &lt;&lt; m[2] &lt;&lt; endl;        // 0\uff0c\u82e5\u4e0d\u5b58\u5728\u6620\u5c04\u5219\u65b0\u5efa\u4e00\u4e2a\u6620\u5c04\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/map/#pair-\u76f8\u5173","title":"pair \u76f8\u5173","text":"<p><code>map</code> \u4e2d\u5b58\u50a8\u6620\u5c04\u7684\u65b9\u5f0f\u662f\u4f7f\u7528 C++ <code>pair</code>\u3002\u5982\u679c\u4f60\u5b9a\u4e49\u4e86\u4e00\u4e2a <code>map&lt;string, int&gt; m</code>\uff0c\u90a3\u4e48\u6240\u6709\u7684\u6620\u5c04\u90fd\u662f\u7c7b\u578b <code>pair&lt;string, int&gt;</code>\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\u904d\u5386\uff1a</p> <pre><code>for (const auto &amp;x : m) { cout &lt;&lt; x.first &lt;&lt; \" \" &lt;&lt; x.second &lt;&lt; endl; }\nfor (auto x : m) { cout &lt;&lt; x.first &lt;&lt; \" \" &lt;&lt; x.second &lt;&lt; endl; }\nfor (pair&lt;string, int&gt; x : m) { cout &lt;&lt; x.first &lt;&lt; \" \" &lt;&lt; x.second &lt;&lt; endl; }\n\n// .first \u662f\u7b2c\u4e00\u4e2a\u5143\u7d20 string \u7c7b\u578b\uff0c.second \u662f\u7b2c\u4e8c\u4e2a\u5143\u7d20 int \u7c7b\u578b\n</code></pre> <p>\u63a8\u8350\u4f7f\u7528\u7b2c\u4e00\u79cd\uff0c\u5e38\u5f15\u7528\u548c\u62f7\u8d1d\u7684\u533a\u522b\u3002\u7279\u522b\u5730\uff0c\u7531\u4e8e\u53ef\u4ee5\u4f7f\u7528\u5f15\u7528\uff0c\u4f60\u8fd8\u53ef\u4ee5\u7528\u4e0b\u8ff0\u65b9\u5f0f\u4fee\u6539\u6620\u5c04\uff1a</p> <pre><code>for (auto &amp;x : m) {\n  x.second = 1234;  // \u628a\u6240\u6709\u6620\u5c04\u7684 value \u6539\u4e3a 1234\n}\n\nmap&lt;string, int&gt; h = {{\"zsc\", 250}};\nauto it = h.find(\"zsc\");\nit-&gt;second = 0;  // \u5c06 \"zsc\" \u6620\u5c04\u4e3a 0\n</code></pre> <p>\u4f60\u53ef\u4ee5\u5728\u904d\u5386\u65f6\u4fee\u6539\u6620\u5c04\u7684 value\uff0c\u4f46\u4e0d\u80fd\u589e\u52a0\u65b0\u7684\u6620\u5c04\u3001\u5220\u9664\u5df2\u6709\u6620\u5c04\uff0c\u5426\u5219\u4f1a RE\u3002</p> <pre><code>map&lt;int, int&gt; m;\n\nfor (int i = 0; i &lt; 10; ++i) m[i] = i;\n\nfor (auto &amp;it : m) {\n  cout &lt;&lt; \"Current Key: \" &lt;&lt; it.first &lt;&lt; endl;\n\n  m.erase(it.first);\n}\n</code></pre> <p>\u56e0\u6b64\u4f60\u8981\u5220\u9664\u65f6\uff0c\u4f60\u53ef\u4ee5\u62f7\u8d1d\u4e00\u4e2a\u65b0 <code>map</code> \u6765\u5220\u9664\uff0c\u6216\u8005\u5c06\u9700\u8981\u5220\u9664\u7684 <code>key</code> \u8bb0\u5f55\u4e0b\u6765\u6700\u540e\u5220\u9664\uff1a</p> <pre><code>map&lt;int, int&gt; m, M;\n\nfor (int i = 0; i &lt; 10; ++i) m[i] = i;\n\nint current_iteration = 0;\n\nfor (const auto &amp;it : m) {\n  if (current_iteration % 3 == 0) { M[it.first] = it.second; }\n\n  current_iteration++;\n}\n\nswap(m, M);\n\ncout &lt;&lt; \"Entries:\" &lt;&lt; endl;\nfor (const auto &amp;it : m) { cout &lt;&lt; it.first &lt;&lt; \" \" &lt;&lt; it.second &lt;&lt; endl; }\n/*\n * Entries:\n * 0 0\n * 3 3\n * 6 6\n * 9 9\n */\n</code></pre> <pre><code>map&lt;int, int&gt; m;\nfor (int i = 0; i &lt; 10; ++i) { m[i] = i; }\n\nvector&lt;int&gt; to_erase;\nint current_iteration = 0;\n\nfor (const auto &amp;it : m) {\n  if (current_iteration % 3 == 0) { to_erase.push_back(it.first); }\n\n  current_iteration++;\n}\n\nfor (int key : to_erase) { m.erase(key); }\n\ncout &lt;&lt; \"Remaining entries:\" &lt;&lt; endl;\nfor (const auto &amp;it : m) { cout &lt;&lt; it.first &lt;&lt; \" \" &lt;&lt; it.second &lt;&lt; endl; }\n\n/*\n * Remaining entries:\n * 1 1\n * 2 2\n * 4 4\n * 5 5\n * 7 7\n * 8 8\n */\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/map/#\u6bd4\u8f83\u5668","title":"\u6bd4\u8f83\u5668","text":"<p>\u540c <code>set</code>\u3002</p>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/map/#lower_bound-upper_bound","title":"lower_bound, upper_bound","text":"<pre><code>map&lt;int, int&gt; m;\nm[3] = 5;     // [(3, 5)]\nm[11] = 4;    // [(3, 5); (11, 4)]\nm[10] = 491;  // [(3, 5); (10, 491); (11, 4)]\ncout &lt;&lt; m.lower_bound(10)-&gt;first &lt;&lt; \" \" &lt;&lt; m.lower_bound(10)-&gt;second\n     &lt;&lt; '\\n';  // 10 491\ncout &lt;&lt; m.upper_bound(10)-&gt;first &lt;&lt; \" \" &lt;&lt; m.upper_bound(10)-&gt;second\n     &lt;&lt; '\\n';  // 11 4\nm.erase(11);   // [(3, 5); (10, 491)]\nif (m.upper_bound(10) == m.end()) {\n  cout &lt;&lt; \"end\" &lt;&lt; endl;  // Prints end\n}\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/multiset/","title":"multiset","text":"<p>\u591a\u91cd\u96c6\u5408\uff0c\u5934\u6587\u4ef6\u3001\u5b9a\u4e49\u3001\u521d\u59cb\u5316\u3001\u7edd\u5927\u90e8\u5206\u64cd\u4f5c\u548c\u6210\u5458\u4e0e <code>set</code> \u4e00\u81f4\uff0c\u6709\u51e0\u4e2a\u7279\u6b8a\u70b9\u9700\u8981\u8bb0\u4f4f\u3002</p> <p>\u4ee4 \\(N\\) \u4e3a\u591a\u91cd\u96c6\u5bb9\u5668\u5927\u5c0f\uff0c\\(x\\) \u4e3a\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c<code>multiset&lt;int&gt; s</code>\uff0c\u4ee4 \\(M\\) \u4e3a \\(x\\) \u5728\u591a\u91cd\u96c6\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002</p> <ul> <li><code>s.count(x)</code>\uff0c\u8fd4\u56de \\(x\\) \u5728\u591a\u91cd\u96c6\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\\(O(\\log N + M)\\)</li> <li><code>s.erase(x)</code>\uff0c\u5220\u9664\u591a\u91cd\u96c6\u5bb9\u5668\u5185\u6240\u6709\u503c\u4e3a \\(x\\) \u7684\u5143\u7d20\uff0c\\(O(\\log N + M)\\)</li> <li>\u5982\u679c\u53ea\u60f3\u67e5\u627e\u662f\u5426\u5b58\u5728\u5143\u7d20 \\(x\\)\u3001\u5220\u9664\u4e00\u4e2a\u503c\u4e3a \\(x\\) \u7684\u5143\u7d20\uff0c\u4f7f\u7528 <code>s.find(x) != s.end()</code> \u548c <code>auto it = s.find(x); if (it != s.end()) s.erase(it)</code>\u3002\u76f4\u63a5\u5220\u9664\u5c3e\u8fed\u4ee3\u5668\u62a5\u9519\u3002</li> </ul> <pre><code>// multiset \u7684 erase \u64cd\u4f5c\nmultiset&lt;int&gt; ms;\nms.insert(1); // [1]\nms.insert(14); // [1, 14]\nms.insert(9); // [1, 9, 14]\nms.insert(2); // [1, 2, 9, 14]\nms.insert(9); // [1, 2, 9, 9, 14]\nms.insert(9); // [1, 2, 9, 9, 9, 14]\ncout &lt;&lt; ms.count(4) &lt;&lt; '\\n'; // 0\ncout &lt;&lt; ms.count(9) &lt;&lt; '\\n'; // 3\ncout &lt;&lt; ms.count(14) &lt;&lt; '\\n'; // 1\nms.erase(ms.find(9));\ncout &lt;&lt; ms.count(9) &lt;&lt; '\\n'; // 2\nms.erase(9);\ncout &lt;&lt; ms.count(9) &lt;&lt; '\\n'; // 0\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/pq/","title":"priority_queue","text":"<p>\u4f18\u5148\u961f\u5217\uff0cC++ \u5df2\u7ecf\u5c01\u88c5\u597d\u7684\u5806\u3002\u6bd4\u8d5b\u4e2d\u5e38\u7528\u4f18\u5148\u961f\u5217\u4ee3\u66ff\u5806\u7684\u5b9e\u73b0\u3002</p>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/pq/#\u5934\u6587\u4ef6","title":"\u5934\u6587\u4ef6","text":"<pre><code>#include &lt;queue&gt;\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/pq/#\u5b9a\u4e49","title":"\u5b9a\u4e49","text":"<pre><code>#include &lt;vector&gt;\n#include &lt;queue&gt;\n#include &lt;functional&gt;\n\n// \u5b9a\u4e49\u65f6\u9700\u8981\u4e09\u4e2a\u53c2\u6570\uff1a\u6570\u636e\u7c7b\u578b\u4e3a TypeName\uff0c\u5e95\u5c42\u5bb9\u5668\u4e3a Container\uff0c\u6bd4\u8f83\u5668\u51fd\u6570\u5bf9\u8c61\u4e3a Compare\n// \u4e0d\u6307\u5b9a Container \u548c Compare \u65f6\uff0c\u9ed8\u8ba4\u5e95\u5c42\u5bb9\u5668\u4e3a vector\uff0c\u9ed8\u8ba4\u6bd4\u8f83\u5668\u89c4\u5219\u4e3a less&lt;TypeName&gt;\npriority_queue&lt;TypeName, [Container], [Compare]&gt; pq;\n\npriority_queue&lt;int&gt; pq1;  // \u9ed8\u8ba4\u4e3a\u5927\u6839\u5806\npriority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; pq3;  // \u5c0f\u6839\u5806\uff0c\u9700\u8981\u5f15\u5165\u5934\u6587\u4ef6 &lt;functional&gt;\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/pq/#\u6210\u5458\u51fd\u6570","title":"\u6210\u5458\u51fd\u6570","text":"<p>\\(O(1)\\) \u65f6\u95f4\u590d\u6742\u5ea6\uff1a</p> <ul> <li><code>top()</code> \u8bbf\u95ee\u5806\u9876\u5143\u7d20\uff08\u4f18\u5148\u961f\u5217\u4e0d\u80fd\u4e3a\u7a7a\uff09</li> <li><code>empty()</code> \u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a</li> <li><code>size()</code> \u67e5\u8be2\u5143\u7d20\u6570\u91cf</li> </ul> <p>\\(O(\\log n)\\) \u65f6\u95f4\u590d\u6742\u5ea6\uff1a</p> <ul> <li><code>push(x)</code> \u63d2\u5165\u5143\u7d20</li> <li><code>pop()</code> \u5220\u9664\u5806\u9876\u5143\u7d20\uff08\u4f18\u5148\u961f\u5217\u4e0d\u80fd\u4e3a\u7a7a\uff09</li> </ul> <p>\u65e0 <code>clear()</code>\uff0c\u6e05\u7a7a\u53ef\u4ee5\u5728\u5c40\u90e8\u5b9a\u4e49\u5bb9\u5668\uff0c\u6216\u8005\u4e0d\u65ad <code>pop()</code>\u3002</p>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/pq/#\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668","title":"\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668","text":"<p>\u5bf9\u4e8e\u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u5176\u6bd4\u8f83\u89c4\u5219\u624d\u80fd\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u8be5\u7c7b\u578b\u5143\u7d20\u3002</p> <pre><code>struct Node {\n  int x, id;\n};\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/pq/#\u65b9\u6cd5-1\u5b9a\u4e49\u6bd4\u8f83\u5668\u51fd\u6570\u5bf9\u8c61","title":"\u65b9\u6cd5 1\uff1a\u5b9a\u4e49\u6bd4\u8f83\u5668\u51fd\u6570\u5bf9\u8c61","text":"<pre><code>// \u6700\u4e00\u822c\u7684\u5199\u6cd5\nstruct cmp {\n  bool operator()(const Node &amp;i, const Node &amp;j) const {  // \u51fd\u6570\u5c3e\u7684 const \u4fee\u9970\u7b26\u8868\u793a\u8be5\u51fd\u6570\u4e0d\u80fd\u5bf9\u6240\u5728\u7c7b\u7684\u6210\u5458\u8fdb\u884c\u4fee\u6539\n    return i.x &lt; j.x;\n  }\n};\n\npriority_queue&lt;Node, vector&lt;Node&gt;, cmp&gt; pq;  // \u5b9a\u4e49\u4e86\u4e00\u4e2a x \u4e3a\u5173\u952e\u5b57\u7684\u5927\u6839\u5806\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/pq/#\u65b9\u6cd5-2\u91cd\u8f7d\u8fd0\u7b97\u7b26","title":"\u65b9\u6cd5 2\uff1a\u91cd\u8f7d\u8fd0\u7b97\u7b26","text":"<pre><code>bool operator&lt;(const Node &amp;i, const Node &amp;j) {\n  return i.x &gt; j.x;\n}\n\npriority_queue&lt;Node&gt; pq;  // \u5b9a\u4e49\u4e86\u4e00\u4e2a x \u4e3a\u5173\u952e\u5b57\u7684\u5c0f\u6839\u5806\n</code></pre> <pre><code>struct Node {\n  int x, id;\n  bool operator &lt; (const Node &amp;i) const {\n    return x &gt; i.x;\n  }\n};\n\npriority_queue&lt;Node&gt; pq;  // \u5b9a\u4e49\u4e86\u4e00\u4e2a x \u4e3a\u5173\u952e\u5b57\u7684\u5c0f\u6839\u5806\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/pq/#\u65b9\u6cd5-3\u4f7f\u7528-lamda-\u8868\u8fbe\u5f0fc11","title":"\u65b9\u6cd5 3\uff1a\u4f7f\u7528 lamda \u8868\u8fbe\u5f0f\uff08C++11\uff09","text":"<pre><code>auto cmp = [](const Node &amp;i, const Node &amp;j) {\n  return i.x &lt; j.x;\n};\n\npriority_queue&lt;Node, vector&lt;Node&gt;, decltype(cmp)) pq; // x \u4e3a\u5173\u952e\u5b57\u7684\u5927\u6839\u5806\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/pq/#\u4f8b\u5b50","title":"\u4f8b\u5b50","text":"<pre><code>struct cmp{\n  bool operator()(int i, int j) {\n    return i &gt; j;\n  }\n};\n\npriority_queue&lt;int&gt; pq1;  // \u9ed8\u8ba4\u4e3a\u5927\u6839\u5806\npriority_queue&lt;int, vector&lt;int&gt;, cmp&gt; pq2;  // \u7279\u522b\u6ce8\u610f\u6bd4\u8f83\u5668\u7684\u5b9e\u73b0\uff0c\u8ddf sort \u6bd4\u8f83\u5668\u53cd\u7740\u6765\n\npq1.push(1);\npq1.push(2);\ncout &lt;&lt; pq1.top() &lt;&lt; '\\n';  // 2\npq1.pop();\ncout &lt;&lt; pq1.top() &lt;&lt; '\\n';  // 1\n\npq2.push(1);\npq2.push(2);\ncout &lt;&lt; pq2.top() &lt;&lt; '\\n';  // 1\npq2.pop();\ncout &lt;&lt; pq2.top() &lt;&lt; '\\n';  // 2\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/pq/#\u7ed3\u6784\u4f53","title":"\u7ed3\u6784\u4f53","text":"<pre><code>struct Student {\n  int a, b, c;  // \u8bed\u6570\u5916\n};\n\nstruct cmp {\n  bool operator()(const Student &amp;i, const Student &amp;j) const {\n    if (i.a != j.a) {\n      return i.a &lt; j.a;\n    }\n    if (i.b != j.b) {\n      return i.b &lt; j.b;\n    }\n    return i.c &lt; j.c;\n  }\n};\n\npriority_queue&lt;Student, vector&lt;Student&gt;, cmp&gt; pq;  // \u6309\u8bed\u6570\u5916\u4ece\u9ad8\u5230\u4f4e\u6392\n\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0), cout.tie(0);\n  pq.push({100, 100, 90});\n  pq.push({100, 100, 100});\n  pq.push({100, 90, 100});\n  pq.push({90, 100, 100});\n  while (!pq.empty()) {\n    Student x = pq.top();\n    pq.pop();\n    cout &lt;&lt; x.a &lt;&lt; ' ' &lt;&lt; x.b &lt;&lt; ' ' &lt;&lt; x.c &lt;&lt; '\\n';\n  }\n  return 0;\n}\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/reference/","title":"\u53c2\u8003\u8d44\u6599","text":"<p>OI-Wiki</p>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/set/","title":"set","text":"<p>\u5305\u542b\u4e0d\u540c\u5143\u7d20\u7684\u6709\u5e8f\u96c6\u5408\u5bb9\u5668\uff0c\u4f7f\u7528\u6bd4\u8f83\u64cd\u4f5c\uff0c\u5e95\u5c42\u662f\u7ea2\u9ed1\u6811\uff08\u5e73\u8861\u6811\uff09\u3002</p> <p>\u5934\u6587\u4ef6\uff1a<code>&lt;set&gt;</code></p> <p>\u5b9a\u4e49\uff1a<code>set&lt;\u7c7b\u578b, \u6bd4\u8f83\u5668&gt; \u5bb9\u5668\u540d</code>\uff0c\u53ef\u4ee5\u7528\u521d\u59cb\u5316\u5217\u8868\u6216\u53e6\u4e00\u4e2a set \u521d\u59cb\u5316\u3002\u4e0d\u6307\u5b9a\u6bd4\u8f83\u5668\u65f6\u4f7f\u7528\u9ed8\u8ba4\u7684 <code>&lt;</code> \u6bd4\u8f83\u89c4\u5219\u8fdb\u884c\u6392\u5e8f\u3002</p> <p><code>set&lt;int&gt; s, t = {1, 2, ..., M}, a = t</code>\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(1), O(M \\log M), O(M)\\)\u3002</p>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/set/#\u57fa\u672c\u64cd\u4f5c","title":"\u57fa\u672c\u64cd\u4f5c","text":"<p>\u4ee4 \\(N\\) \u4e3a\u5f53\u524d\u5bb9\u5668 <code>s</code> \u7684\u5927\u5c0f\uff0c\\(x\\) \u4e3a\u5143\u7d20\uff0c\\(it\\) \u4e3a\u8fed\u4ee3\u5668</p>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/set/#\u4fee\u6539","title":"\u4fee\u6539","text":"<ul> <li><code>s.clear()</code> \u6e05\u7a7a\uff0c\\(O(N)\\)</li> <li><code>s.insert()</code> \u63d2\u5165\u5143\u7d20</li> <li><code>s.insert(x)</code>\uff0c\\(O(\\log N)\\)</li> <li><code>s.insert({1, 2, ..., M})</code>\uff0c\\(O(M \\log (M + N))\\)</li> <li><code>s.erase()</code> \u5220\u9664\u5143\u7d20\uff0c\u5bb9\u5668\u4e0d\u5305\u542b\u6307\u5b9a\u5143\u7d20\u5219\u4e0d\u5220\u9664\uff0c\\(O(\\log N)\\)</li> <li><code>s.erase(x)</code> \u5220\u9664\u5143\u7d20 \\(x\\)</li> <li><code>s.erase(it)</code> \u5220\u9664 \\(it\\) \u6307\u5411\u7684\u5143\u7d20\uff0c<code>it</code> \u4e0d\u80fd\u4e3a\u5c3e\u8fed\u4ee3\u5668</li> <li><code>s.swap(other), swap(s, other)</code>\uff0c\u5c06\u5bb9\u5668\u548c \\(other\\) \u4ea4\u6362\uff0c\\(O(1)\\)</li> <li> <p><code>swap</code> \u6570\u7ec4\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N)\\)</p> </li> <li> <p><code>=</code></p> </li> <li><code>s = other</code>\uff0c\u7528\u5bb9\u5668\u8d4b\u503c\uff0c\\(O(|N| + |other|)\\)</li> <li><code>s = {1, 2, ..., M}</code>\uff0c\u7528\u521d\u59cb\u5316\u5217\u8868\u8d4b\u503c\uff0c\\(O((N + M) \\log (N + M))\\)</li> </ul>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/set/#\u67e5\u627e","title":"\u67e5\u627e","text":"<ul> <li><code>s.count(x)</code>\uff0c\u8fd4\u56de\u5bb9\u5668\u5185 \\(x\\) \u7684\u6570\u91cf\uff0c\\(O(\\log N)\\)</li> <li><code>s.find(x)</code>\uff0c\u8fd4\u56de\u5bb9\u5668\u5185\u6307\u5411\u503c\u4e3a \\(x\\) \u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de <code>.end()</code>\uff0c\\(O(\\log N)\\)</li> <li><code>s.lower_bound(x)</code> \u548c <code>s.upper_bound(x)</code>\uff0c\u8fd4\u56de\u5bb9\u5668\u5185\u6307\u5411\u5927\u4e8e\u7b49\u4e8e\u548c\u5927\u4e8e \\(x\\) \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de <code>s.end()</code>\uff0c\\(O(\\log N)\\)\u3002</li> <li>\u4e0d\u662f\u4e8c\u5206\uff0c\u9700\u8981\u8ddf <code>lower_bound(), upper_bound()</code> \u533a\u5206</li> <li> <p>\u76f4\u63a5\u7528 <code>set&lt;int&gt; s; lower_bound(s.begin(), s.end(), x)</code> \u65f6\u95f4\u590d\u6742\u5ea6\u7ebf\u6027 \\(O(N)\\)</p> </li> <li> <p><code>s.empty()</code> \u548c <code>s.size()</code></p> </li> <li><code>s.begin()</code> \u548c <code>s.end()</code></li> </ul>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/set/#\u6bd4\u8f83","title":"\u6bd4\u8f83","text":"<p><code>==, !=, &lt;, &lt;=, &gt;, &gt;=</code>\uff0c\u5f53 <code>lhs, rhs</code> \u5927\u5c0f\u4e0d\u540c\u65f6\uff0c<code>lhs == rhs, lhs != rhs</code> \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(1)\\)\uff08\u56e0\u4e3a\u53ea\u9700\u8981\u5224\u65ad\u5927\u5c0f\uff09\uff0c\u5176\u4f59\u60c5\u51b5\u5747\u4f7f\u7528\u5b57\u5178\u5e8f\u6bd4\u8f83 \\(O(N)\\)\u3002</p>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/set/#\u6bd4\u8f83\u5668","title":"\u6bd4\u8f83\u5668","text":"<p>\u8bed\u6cd5\u7ed3\u6784\u540c <code>priority_queue</code>\uff0c\u4f46\u662f\u4e0d\u7528\u50cf <code>priority_queue</code> \u53cd\u8fc7\u6765\u5199\u6bd4\u8f83\u5668\u3002\u53ef\u4ee5\u4f7f\u7528\u6bd4\u8f83\u5668\u51fd\u6570\u5bf9\u8c61\uff0c\u53ef\u4ee5\u91cd\u8f7d\u8fd0\u7b97\u7b26\u3002</p> <p>\u53c2\u9605\u8fd9\u91cc\uff1a</p> <p>\u91cd\u8f7d\u5c0f\u4e8e\u3001\u5927\u4e8e\u8fd0\u7b97\u7b26\u4f1a\u81ea\u52a8\u751f\u6210\u51fd\u6570\u5bf9\u8c61 <code>greater&lt;Node&gt;, less&lt;Node&gt;</code>\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;set&gt;\n#include &lt;queue&gt;\n#include &lt;vector&gt;\n#include &lt;functional&gt;\n\nusing namespace std;\n\nstruct Node {\n  int a, b;\n  bool operator&lt;(const Node &amp;i) const {\n    return a &gt; i.a;\n  }\n  bool operator&gt;(const Node &amp;i) const {\n    return b &gt; i.b;\n  }\n};\n\nset&lt;Node, greater&lt;Node&gt;&gt; s;\nset&lt;Node, less&lt;Node&gt;&gt; ss;\n\nint main() {\n  s = {{10, 1}, {5, 2}, {1, 100}};\n  ss = {{10, 1}, {5, 2}, {1, 100}};\n  for (auto x : s) {\n    cout &lt;&lt; x.a &lt;&lt; ' ' &lt;&lt; x.b &lt;&lt; '\\n';\n  }\n  cout &lt;&lt; '\\n';\n  for (auto x : ss) {\n    cout &lt;&lt; x.a &lt;&lt; ' ' &lt;&lt; x.b &lt;&lt; '\\n';\n  }\n  return 0;\n}\n\n/*\noutput:\n1 100\n5 2\n10 1\n\n10 1\n5 2\n1 100\n*/\n</code></pre> <p>\u4ee4\u6bd4\u8f83\u5668 <code>comp(a, b)</code>\uff0c<code>set</code> \u5224\u65ad\u4e24\u5143\u7d20 \\(a, b\\) \u76f8\u7b49\u7684\u6761\u4ef6\u4e3a <code>!comp(a, b) &amp;&amp; !comp(b, a)</code>\u3002\uff08\u6bd4\u8f83\u5668\u4ec0\u4e48\u65f6\u5019\u8fd4\u56de\u771f\uff09\u3002\u6b64\u5904\u4e3a\u7ec6\u8282\u3002</p> <pre><code>struct Node {\n  int a, id;  // \u503c\uff0c\u7f16\u53f7\n};\n\nstruct cmp {\n  bool operator()(const Node &amp;i, const Node &amp;j) const {\n    return i.a &lt; j.a;\n  }\n} f;\n\nint main() {\n  set&lt;Node, cmp&gt; s;\n  s.insert({1, 3}), s.insert({1, 5}), s.insert({-1, -1});\n  for (Node x : s) {\n    cout &lt;&lt; x.a &lt;&lt; ' ' &lt;&lt; x.id &lt;&lt; '\\n';\n  }\n  return 0;\n}\n/*\noutput:\n-1 -1\n1 3\n*/\n</code></pre> <p>\u5982\u679c\u5bf9\u4e8e\u503c\u76f8\u540c\u4f46\u7f16\u53f7\u4e0d\u76f8\u540c\u7684\u5143\u7d20\u4e5f\u9700\u8981\u5b58\u50a8\uff0c\u5219\u6bd4\u8f83\u5668\u5e94\u4e3a\uff1a</p> <pre><code>struct Node {\n  int a, id;\n};\n\nstruct cmp {\n  bool operator()(const Node &amp;i, const Node &amp;j) const {\n    return i.a &lt; j.a || i.a == j.a &amp;&amp; i.id &lt; j.id;\n  }\n};\n\nint main() {\n  set&lt;Node, cmp&gt; s;\n  s.insert({1, 3}), s.insert({1, 5}), s.insert({-1, -1});\n  for (Node x : s) {\n    cout &lt;&lt; x.a &lt;&lt; ' ' &lt;&lt; x.id &lt;&lt; '\\n';\n  }\n  return 0;\n}\n/*\noutput:\n-1 -1\n1 3\n1 5\n*/\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/set/#\u57fa\u672c\u4f7f\u7528","title":"\u57fa\u672c\u4f7f\u7528","text":"<pre><code>#include &lt;set&gt;\n\nusing namespace std;\n\nset&lt;int&gt; s;\n\ns.insert(3);\ns.insert(2);\ns.insert(5);\ncout &lt;&lt; s.count(3) &lt;&lt; \"\\n\"; // 1\ncout &lt;&lt; s.count(4) &lt;&lt; \"\\n\"; // 0\ns.erase(3);\ns.insert(4);\ncout &lt;&lt; s.count(3) &lt;&lt; \"\\n\"; // 0\ncout &lt;&lt; s.count(4) &lt;&lt; \"\\n\"; // 1\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/set/#\u6bd4\u8f83\u5668\u76f8\u5173","title":"\u6bd4\u8f83\u5668\u76f8\u5173","text":"<pre><code>struct Node {\n  int x, id;\n  bool operator &lt;(const Node &amp;i) const {\n    return x &lt; i.x || x == i.x &amp;&amp; id &lt; i.id;\n  }\n};\n\nstruct cmp {\n  bool operator()(const Node &amp;i, const Node &amp;j) {\n    return i.x &gt; j.x || i.x == j.x &amp;&amp; i.id &lt; j.id;\n  }\n}\n\nset&lt;Node&gt; s1;  // \u6309 x \u4ece\u5c0f\u5230\u5927\nset&lt;Node, cmp&gt; s2;  // \u6309 x \u4ece\u5927\u5230\u5c0f\nstruct Node {\n  int x, id;\n};\n\nstruct comp {\n  bool operator ()(const Node &amp;i, const Node &amp;j) const {\n    return i.x &lt; j.x; // \u5982\u679c id \u4e0d\u540c\uff0c\u5e94\u4e3a return i.x &lt; j.x || i.x == j.x &amp;&amp; i.id &lt; j.id;\n  }\n};\n\nset&lt;Node, comp&gt; s;\n\ns.insert({1, 2});\ns.insert({1, 3});  // \u4e24\u5143\u7d20\u89c6\u4e3a\u76f8\u7b49\ncout &lt;&lt; s.size();  // 1\n</code></pre>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/set/#\u904d\u5386","title":"\u904d\u5386","text":"<pre><code>set&lt;int&gt; s = {2,5,6,8};\ncout &lt;&lt; s.size() &lt;&lt; \"\\n\"; // 4\nfor (int x : s) {\n  cout &lt;&lt; x &lt;&lt; \"\\n\";\n}\nfor (auto it = s.begin(); it != s.end(); it++) {\n  cout &lt;&lt; *it &lt;&lt; '\\n';\n}\n</code></pre> <p>\u4e0d\u8981\u5728\u904d\u5386\u65f6\u6267\u884c <code>.insert</code>\u3001<code>.erase</code> \u7b49\u4fee\u6539\u5bb9\u5668\u7684\u64cd\u4f5c\uff0c\u5426\u5219 RE\u3001WA\u3002</p>"},{"location":"CSPS/STL/%E5%AE%B9%E5%99%A8/set/#lower_bound-upper_bound-\u76f8\u5173","title":"lower_bound, upper_bound \u76f8\u5173","text":"<p>\u4e00\u5b9a\u8981\u6ce8\u610f\u8fed\u4ee3\u5668\u7684\u5404\u79cd\u8fb9\u754c\u95ee\u9898\u3002</p> <pre><code>set&lt;int&gt; s;\ns.insert(1); // [1]\ns.insert(14); // [1, 14]\ns.insert(9); // [1, 9, 14]\ns.insert(2); // [1, 2, 9, 14]\n\nauto it = s.lower_bound(3);  // \u6307\u5411\u503c 9\ncout &lt;&lt; *prev(it);  // \u8bbf\u95ee &lt; 3 \u7684\u6700\u5927\u5143\u7d20 2\n\ncout &lt;&lt; *s.upper_bound(7) &lt;&lt; '\\n'; // 9\ncout &lt;&lt; *s.upper_bound(9) &lt;&lt; '\\n'; // 14\ncout &lt;&lt; *s.lower_bound(5) &lt;&lt; '\\n'; // 9\ncout &lt;&lt; *s.lower_bound(9) &lt;&lt; '\\n'; // 9\ncout &lt;&lt; *s.begin() &lt;&lt; '\\n'; // 1\nauto it = s.end();\ncout &lt;&lt; *(--it) &lt;&lt; '\\n'; // 14\ns.erase(s.upper_bound(6)); // [1, 2, 14]\n\nauto it = s.find(x);\nif (it != s.end()) {  // \u627e\u5230\u5143\u7d20 x\n} else {  // \u6ca1\u627e\u5230\u5143\u7d20 x\n}\n</code></pre> <p>\u601d\u8003\u9898\uff1a\u5982\u4f55\u627e\u5230\u96c6\u5408\u4e2d\u79bb \\(x\\) \u6700\u8fd1\u7684\u5143\u7d20\uff1f</p> <pre><code>auto it = s.lower_bound(x);\nif (it == s.begin()) {\n  cout &lt;&lt; *it &lt;&lt; \"\\n\";\n} else if (it == s.end()) {\n  it--;\n  cout &lt;&lt; *it &lt;&lt; \"\\n\";\n} else {\n  int a = *it; it--;\n  int b = *it;\n  if (x - b &lt; a - x) cout &lt;&lt; b &lt;&lt; \"\\n\";\n  else cout &lt;&lt; a &lt;&lt; \"\\n\";\n}\n\n// \u5982\u679c\u4e00\u5f00\u59cb\u63d2\u5165\u4e00\u4e2a\u6781\u5c0f\u503c\u548c\u4e00\u4e2a\u6781\u5927\u503c\uff0c\u4e0d\u9700\u8981\u505a\u5206\u7c7b\u8ba8\u8bba\ns.insert({-INF, INF});\nauto it = s.lower_bound(x);\nint a = *it; it--;\nint b = *it;\nif (x - b &lt; a - x) cout &lt;&lt; b &lt;&lt; \"\\n\";\nelse cout &lt;&lt; a &lt;&lt; \"\\n\";\n</code></pre>"},{"location":"CSPS/ds/heap/%E4%BA%8C%E5%8F%89%E5%A0%86/","title":"\u4e8c\u53c9\u5806","text":""},{"location":"CSPS/ds/heap/%E4%BA%8C%E5%8F%89%E5%A0%86/#\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5b58\u50a8","title":"\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5b58\u50a8","text":"<p>\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u6a21\u62df\u94fe\u8868\u7684\u65b9\u5f0f\uff08\u8bb0\u5f55\u5de6\u53f3\u513f\u5b50\u7f16\u53f7\uff09\u6765\u5b9e\u73b0\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u3002</p> <pre><code>struct Node {\n  int l, r;  // \u5de6\u53f3\u513f\u5b50\u7f16\u53f7\n} a[MAXN];\n</code></pre> <p>\u5b9e\u9645\u4e0a\u53ef\u4ee5\u6309\u987a\u5e8f\u7ed9\u5b8c\u5168\u4e8c\u53c9\u6811\u7f16\u53f7\uff0c\u6b64\u65f6\u7f16\u53f7\u4e3a \\(i\\) \u7684\u7ed3\u70b9\u7684\u5de6\u513f\u5b50\u3001\u53f3\u513f\u5b50\u3001\u7236\u4eb2\u7f16\u53f7\u4e3a \\(2i, 2i+1,\\lfloor \\frac{i}{2} \\rfloor\\)\u3002\u8fd9\u79cd\u5b58\u50a8\u65b9\u5f0f\u53c8\u88ab\u79f0\u4e3a\u5806\u5f0f\u5b58\u50a8\u3002</p> <p></p>"},{"location":"CSPS/ds/heap/%E4%BA%8C%E5%8F%89%E5%A0%86/#\u5806","title":"\u5806","text":"<p>\u5806\u662f\u4e00\u79cd\u652f\u6301\u52a8\u6001\u5feb\u901f\u67e5\u8be2\u6700\u503c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u4ee5\u4e0b\u51e0\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li>\u9ad8\u6548\u63d2\u5165\u5143\u7d20\u3002</li> <li>\u9ad8\u6548\u67e5\u8be2\u3001\u5220\u9664\u6700\u503c\u3002</li> <li>\u9ad8\u6548\u4fee\u6539\u6307\u5b9a\u5143\u7d20\u3001\u5220\u9664\u6307\u5b9a\u5143\u7d20.</li> </ul> <p>\u4e8c\u53c9\u5806\uff08\u7b80\u79f0\u5806\uff09\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5b83\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\u5bf9\u4e8e\u5c0f\u6839\u5806\uff08\u5927\u6839\u5806\uff09\u800c\u8a00\uff0c\u7236\u7ed3\u70b9\u7684\u503c\u4e0d\u5927\u4e8e\uff08\u4e0d\u5c0f\u4e8e\uff09\u4e24\u4e2a\u513f\u5b50\u7684\u503c\u3002</li> </ul> <p>\u5806\u7684\u6839\u53c8\u88ab\u79f0\u4e3a\u5806\u9876\uff0c\u5c0f\u6839\u5806\u7684\u5806\u9876\u5143\u7d20\u662f\u5806\u4e2d\u6700\u5c0f\u7684\u5143\u7d20\uff08\u5982\u4f55\u8bc1\u660e\uff1f\uff09\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u76f4\u63a5\u5b58\u50a8\u5806\u3002</p> <pre><code>int a[MAXN], n;  // \u6570\u7ec4\u5b58\u50a8\u5806\uff0c\u5806\u7684\u5927\u5c0f\uff0c\u5806\u4e2d\u7684\u7f16\u53f7\u4ece 1 \u5f00\u59cb\n</code></pre> <p></p>"},{"location":"CSPS/ds/heap/%E4%BA%8C%E5%8F%89%E5%A0%86/#\u57fa\u672c\u64cd\u4f5c","title":"\u57fa\u672c\u64cd\u4f5c","text":"<p>\u5f53\u5bf9\u5806\u8fdb\u884c\u589e\u5220\u6539\u67e5\u7684\u64cd\u4f5c\u65f6\uff0c\u53ef\u80fd\u4f1a\u7834\u574f\u5806\u7684\u6027\u8d28\uff0c\u4e5f\u53ef\u80fd\u4f1a\u8ba9\u5806\u4e0d\u518d\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u9700\u8981\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u3002</p> <p>\u4e0b\u6587\u5148\u4ecb\u7ecd\u4e24\u79cd\u57fa\u672c\u64cd\u4f5c\uff1a\u4e0a\u6d6e\u548c\u4e0b\u6c89\u3002\u8fd9\u4e24\u79cd\u64cd\u4f5c\u7528\u6765\u4fdd\u8bc1\u5806\u7684\u6027\u8d28\u3002\u672c\u6587\u8bb2\u89e3\u5747\u4ee5\u5c0f\u6839\u5806\u4e3a\u4f8b\u3002</p>"},{"location":"CSPS/ds/heap/%E4%BA%8C%E5%8F%89%E5%A0%86/#\u4e0a\u6d6e","title":"\u4e0a\u6d6e","text":"<p>\u5f53\u4f60\u4fee\u6539\u5806\u4e2d\u67d0\u5143\u7d20\u8ba9\u5176\u53d8\u5c0f\u65f6\uff1a</p> <ul> <li>\u5982\u679c\u5143\u7d20\u6709\u7236\u4eb2\uff0c\u5e76\u4e14\u503c\u6bd4\u7236\u4eb2\u66f4\u5c0f\uff0c\u4ea4\u6362\u5143\u7d20\uff0c\u7136\u540e\u7ee7\u7eed\u6267\u884c\u8be5\u64cd\u4f5c\u3002</li> <li>\u5426\u5219\uff0c\u505c\u6b62\u4e0a\u6d6e\u3002</li> </ul> <p></p> <pre><code>// \u8ba9\u5806\u4e2d\u7f16\u53f7\u4e3a x \u7684\u7ed3\u70b9\u4e0a\u6d6e\nvoid Up(int x) {\n  for (int i = x, j = i / 2; j &amp;&amp; a[i] &lt; a[j]; i = j, j = i / 2) {  // j \u4e3a\u7236\u4eb2\u7f16\u53f7\n    swap(a[i], a[j]);\n  }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(\\log n)\\)\u3002</p>"},{"location":"CSPS/ds/heap/%E4%BA%8C%E5%8F%89%E5%A0%86/#\u4e0b\u6c89","title":"\u4e0b\u6c89","text":"<p>\u5f53\u4f60\u4fee\u6539\u5806\u4e2d\u67d0\u5143\u7d20\u8ba9\u5176\u53d8\u5927\u65f6\uff1a</p> <ul> <li>\u5982\u679c\u5f53\u524d\u5143\u7d20\u4e0d\u662f\u53f6\u5b50\uff0c\u5e76\u4e14\u5927\u4e8e\u8f83\u5c0f\u7684\u513f\u5b50\u65f6\uff0c\u4ea4\u6362\uff0c\u7136\u540e\u7ee7\u7eed\u6267\u884c\u8be5\u64cd\u4f5c\u3002</li> <li>\u5426\u5219\uff0c\u505c\u6b62\u4e0b\u6c89\u3002</li> </ul> <p></p> <pre><code>// \u83b7\u53d6\u8f83\u5c0f\u513f\u5b50\u7f16\u53f7\nint Son(int x) {\n  int i = 2 * x, j = 2 * x + 1;\n  return i + (j &lt;= n &amp;&amp; a[j] &lt; a[i]);\n}\n\n// \u8ba9\u5806\u4e2d\u7f16\u53f7\u4e3a x \u7684\u7ed3\u70b9\u4e0b\u6c89\nvoid Down(int x) {\n  for (int i = x, j = Son(i); j &lt;= n &amp;&amp; a[i] &gt; a[j]; i = j, j = Son(i)) {  // j \u4e3a\u8f83\u5c0f\u513f\u5b50\u7f16\u53f7\n    swap(a[i], a[j]);\n  }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(\\log n)\\)\u3002</p>"},{"location":"CSPS/ds/heap/%E4%BA%8C%E5%8F%89%E5%A0%86/#\u67e5\u627e\u6700\u5c0f\u503c","title":"\u67e5\u627e\u6700\u5c0f\u503c","text":"<p>\u5373\u5806\u9876\u3002</p> <pre><code>int Top() {\n  return a[1];\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(1)\\)\u3002</p>"},{"location":"CSPS/ds/heap/%E4%BA%8C%E5%8F%89%E5%A0%86/#\u63d2\u5165\u5143\u7d20","title":"\u63d2\u5165\u5143\u7d20","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5728\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6700\u540e\u4e00\u4e2a\u53f6\u7ed3\u70b9\u53f3\u8fb9\uff08\u5373\uff0c\u5806\u7684\u5c3e\u90e8\uff09\u589e\u52a0\u4e00\u4e2a\u7ed3\u70b9\uff0c\u4fdd\u8bc1\u5806\u4ecd\u7136\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</p> <p>\u4e4b\u540e\u9700\u8981\u4e0a\u6d6e\u6765\u7ef4\u62a4\u5806\u7684\u6027\u8d28\u3002</p> <p></p> <pre><code>void Push(int x) {\n  a[++n] = x;\n  Up(n);\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(\\log n)\\)\u3002</p>"},{"location":"CSPS/ds/heap/%E4%BA%8C%E5%8F%89%E5%A0%86/#\u5220\u9664\u6700\u5c0f\u503c","title":"\u5220\u9664\u6700\u5c0f\u503c","text":"<p>\u5982\u679c\u76f4\u63a5\u5220\u9664\u5806\u9876\uff0c\u4f1a\u4f7f\u5806\u5206\u88c2\u4e3a\u4e24\u4e2a\u5806\uff0c\u800c\u5220\u9664\u5806\u5c3e\u5143\u7d20\u4e0d\u9700\u8981\u7ef4\u62a4\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u5806\u9876\u548c\u5806\u5c3e\u5143\u7d20\u8fdb\u884c\u4ea4\u6362\uff0c\u7136\u540e\u5220\u9664\u5806\u5c3e\u5143\u7d20\uff0c\u4fdd\u8bc1\u5806\u4ecd\u7136\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</p> <p>\u5982\u679c\u4ea4\u6362\u540e\u7684\u5806\u9876\u4e0d\u6ee1\u8db3\u5806\u7684\u6027\u8d28\uff0c\u9700\u8981\u8fdb\u884c\u4e0b\u6c89\u3002</p> <p></p> <pre><code>void Pop() {\n  swap(a[1], a[n--]);\n  Down(1);\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(\\log n)\\)\u3002</p>"},{"location":"CSPS/ds/heap/%E4%BA%8C%E5%8F%89%E5%A0%86/#\u7528\u7c7b\u6765\u5b9e\u73b0\u5806","title":"\u7528\u7c7b\u6765\u5b9e\u73b0\u5806","text":"<p>\u5bf9\u4e8e\u6bd4\u8f83\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u5c06\u5176\u6240\u5b58\u50a8\u7684\u5143\u7d20\u3001\u5c5e\u6027\u3001\u64cd\u4f5c\u5168\u90e8\u5c01\u88c5\u8d77\u6765\uff0c\u4f7f\u4ee3\u7801\u53d8\u5f97\u66f4\u5177\u6709\u903b\u8f91\u3002</p> <pre><code>struct Heap {\n  int a[MAXN], n;\n\n  void Up(int x) {\n    for (int i = x, j; (j = i / 2) &amp;&amp; a[i] &lt; a[j]; i = j) {\n      swap(a[i], a[j]);\n    }\n  }\n\n  int Son(int j) {\n    return j + (j &lt; n &amp;&amp; a[j + 1] &lt; a[j]);\n  }\n\n  void Down(int x) {\n    for (int i = x, j; (j = Son(i * 2)) &lt;= n &amp;&amp; a[i] &gt; a[j]; i = j) {\n      swap(a[i], a[j]);\n    }\n  }\n\n  void Push(int x) {\n    a[++n] = x, Up(n);\n  }\n\n  void Pop() {\n    swap(a[1], a[n--]);\n    Down(1);\n  }\n\n  int Top() {\n    return a[1];\n  }\n} h;\n</code></pre>"},{"location":"CSPS/ds/heap/%E5%85%B6%E4%BB%96/","title":"\u5176\u4ed6","text":""},{"location":"CSPS/ds/heap/%E5%85%B6%E4%BB%96/#\u54c8\u592b\u66fc\u6811","title":"\u54c8\u592b\u66fc\u6811","text":"<p>\u54c8\u592b\u66fc\u6811\uff1a\u7ed9\u5b9a \\(n\\) \u4e2a\u6570\u503c\uff0c\u5bf9\u5176\u6784\u5efa\u4e00\u68f5\u542b\u6709\u8fd9 \\(n\\) \u4e2a\u6570\u503c\u7684\u5e26\u6743\u53f6\u5b50\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u4ee4 \\(w_i, l_i\\) \u4e3a\u53f6\u5b50\u7ed3\u70b9 \\(i\\) \u7684\u6743\u503c\u548c\u5230\u6811\u6839\u7684\u8ddd\u79bb\uff0c\u8981\u6c42\u6700\u5c0f\u5316 \\(\\sum w_il_i\\)\u3002</p>"},{"location":"CSPS/ds/heap/%E5%85%B6%E4%BB%96/#\u6b65\u9aa4","title":"\u6b65\u9aa4","text":"<p>\u6bcf\u6b21\u9009\u62e9\u6743\u503c\u4e3a \\(w_1, w_2\\) \u7684\u6700\u5c0f\u7684\u4e14\u6ca1\u6709\u7236\u4eb2\u7684\u4e24\u4e2a\u7ed3\u70b9\uff0c\u65b0\u5efa\u4e00\u4e2a\u6743\u503c\u4e3a \\(w_1 + w_2\\)  \u7684\u7ed3\u70b9\u5e76\u5c06\u4e4b\u524d\u7684\u4e24\u4e2a\u7ed3\u70b9\u8fde\u5411\u8be5\u7ed3\u70b9\u3002</p> <ol> <li>\u5c06 \\(n\\) \u4e2a\u7ed3\u70b9\u6743\u503c\u538b\u5165\u5806\u4e2d\u3002</li> <li>\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4 \\(n - 1\\) \u6b21\uff1a</li> <li>\u5f39\u51fa\u5806\u4e2d\u7684\u6700\u5c0f\u7684\u4e24\u4e2a\u7ed3\u70b9 \\(u, v\\)\uff0c\u4ee4\u503c\u4e3a \\(w_u, w_v\\)\uff0c\\(ans = ans + w_u + w_v\\)\u3002</li> <li>\u65b0\u5efa\u4e00\u4e2a\u6743\u503c\u4e3a \\(w_u + w_v\\) \u7684\u7ed3\u70b9 \\(p\\)\uff0c\u538b\u5165\u5806\u4e2d\uff0c\u5e76\u4e14\u4ee4\u8be5\u7ed3\u70b9\u4e3a \\(u, v\\) \u7684\u7236\u4eb2\u3002</li> </ol> <p>\u8d2a\u5fc3\u601d\u8def\uff1a\u6743\u503c\u8d8a\u5c0f\u7684\u7ed3\u70b9\u7684 \\(l_i\\) \u5e94\u5c3d\u53ef\u80fd\u5927\u3002</p> <p>\\(ans\\) \u5c31\u662f\u6700\u7ec8\u7684 \\(\\sum w_i l_i\\)\u3002</p>"},{"location":"CSPS/ds/heap/%E5%85%B6%E4%BB%96/#\u54c8\u592b\u66fc\u7f16\u7801","title":"\u54c8\u592b\u66fc\u7f16\u7801","text":"<p>\u7ed9\u5b9a\u5b57\u7b26\u4e32\u548c\u5b57\u7b26\u4e32\u4e2d \\(n\\) \u79cd\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u8981\u6c42\u7ed9\u5b57\u7b26\u8fdb\u884c\u4e00\u79cd\u4e0d\u5b9a\u957f\u5ea6\u7684\u4e8c\u8fdb\u5236\u7f16\u7801\uff0c\u4f7f\u5f97\u5c06\u5b57\u7b26\u4e32\u7ffb\u8bd1\u4e3a\u4e8c\u8fdb\u5236\u4e32\u540e\u957f\u5ea6\u6700\u5c0f\u3002\u5c06 \\(n\\) \u79cd\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u6784\u5efa\u54c8\u592b\u66fc\u6811\uff0c\u5bf9\u4e8e\u6811\u4e0a\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u5de6\u513f\u5b50\u8fb9\u4e3a \\(0\\)\uff0c\u53f3\u513f\u5b50\u8fb9\u4e3a \\(1\\)\uff0c\u4ece\u6811\u6839\u5230\u53f6\u5b50\u7ed3\u70b9\u7684\u8def\u5f84\u7684\u4e8c\u8fdb\u5236\u4e32\uff0c\u5c31\u662f\u8be5\u53f6\u5b50\u5bf9\u5e94\u7684\u5b57\u7b26\u7684\u4e8c\u8fdb\u5236\u7f16\u7801\u3002</p> <p>\u8be5\u7f16\u7801\u7684\u4f18\u70b9\uff1a\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u7684\u7f16\u7801\u5747\u4e0d\u662f\u5176\u4ed6\u6240\u6709\u5b57\u7b26\u7684\u7f16\u7801\u7684\u524d\u7f00\u3002</p> <p>\u4f8b\u5b50\uff1a</p> <pre><code>\u5b57\u7b26\uff1aA    B    C    D    E\n\u7f16\u7801\uff1a100  10   11   1    0\n\n\u7f16\u7801\uff1a10100111\n\u5b57\u7b26\u4e32\uff1aBACD\n\n\u4e0d\u80fd\u51c6\u786e\u5c06\u7f16\u7801\u7ffb\u8bd1\u4e3a\u5b57\u7b26\uff0c\u56e0\u4e3a\u6709\u4e9b\u5b57\u7b26\u7684\u7f16\u7801\u662f\u5176\u4ed6\u7f16\u7801\u7684\u524d\u7f00\n\n\u5b57\u7b26\uff1aA    B    C    D    E\n\u7f16\u7801\uff1a1100 111  1101 10   0\n\u7f16\u7801\uff1a1111100110110\n\u5b57\u7b26\u4e32\uff1aBACD\n\n\u5982\u679c\u6ee1\u8db3\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u7684\u7f16\u7801\u5747\u4e0d\u662f\u5176\u4ed6\u6240\u6709\u5b57\u7b26\u7684\u7f16\u7801\u7684\u524d\u7f00\uff0c\u53ef\u4ee5\u51c6\u786e\u5c06\u7f16\u7801\u7ffb\u8bd1\u4e3a\u5b57\u7b26\u4e32\n</code></pre>"},{"location":"CSPS/ds/heap/%E5%85%B6%E4%BB%96/#\u4e60\u9898\u8bb2\u89e3","title":"\u4e60\u9898\u8bb2\u89e3","text":"<p>Work Scheduling\uff1a\u540e\u6094\u8d2a\u5fc3\uff0c\u4fdd\u7559\u8c03\u6574\u3002</p> <p>\u76f4\u64ad\u83b7\u5956\uff0c\u9ed1\u5323\u5b50\uff1a\u5bf9\u9876\u5806\u3002</p>"},{"location":"CSPS/ds/heap/%E5%85%B6%E4%BB%96/#\u6d1b\u8c37-p2168-\u8377\u9a6c\u53f2\u8bd7","title":"\u6d1b\u8c37 P2168 \u8377\u9a6c\u53f2\u8bd7","text":"<p>\u7c7b\u4f3c\u4e8e\u54c8\u592b\u66fc\u6811\uff0c\u7528\u540c\u6837\u7684\u8d2a\u5fc3\u7b56\u7565\u5efa\u4e00\u68f5 \\(k\\) \u53c9\u6811\u3002\\(w_i\\) \u4e3a\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\uff0c\\(l_i\\) \u4e3a\u6bcf\u4e2a\u5b57\u7b26\u7684 \\(k\\) \u8fdb\u5236\u7f16\u7801\u7684\u957f\u5ea6\u3002</p> <p>\u5982\u679c\u6bcf\u6b21\u90fd\u662f\u53d6\u51fa \\(k\\) \u4e2a\u6700\u5c0f\u7684\u6743\u503c\uff0c\u4ed4\u7ec6\u53d1\u73b0\uff0c\u6700\u7ec8\u5269\u4e0b\u7684\u5806\u7684\u5927\u5c0f\u53ef\u80fd\u5728 \\([2, k - 1]\\) \u4e4b\u95f4\u3002\u4f8b\u5982\uff0c\\(n = 4, k = 3\\)\uff0c\u6700\u7ec8\u5806\u5269\u4e0b \\(2\\) \u4e2a\u7ed3\u70b9\u3002</p> <p>\u9519\u8bef\u7b56\u7565\uff1a\u5c06\u5806\u4e2d\u5269\u4e0b\u7684\u6240\u6709\u7ed3\u70b9\u53d6\u51fa\uff0c\u5e76\u8fde\u5411\u6700\u7ec8\u7684\u6811\u6839\u3002\u5c06\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u8fde\u5411\u6811\u6839\uff0c\u53ef\u4ee5\u8ba9 \\(\\sum w_il_i\\) \u66f4\u5c0f\u3002</p> <p></p> <p>\u5f53 \\(n = k, 2k - 1, 3k - 2, 4k - 3, \\dots = b * (k - 1) + 1 \\ (b \\ge 1)\\)\uff0c\u6700\u7ec8\u5806\u53ea\u4f1a\u5269\u4e0b \\(1\\) \u4e2a\u7ed3\u70b9\uff0c\u5373\u6811\u6839\u3002</p> <p>\u5206\u7c7b\u8ba8\u8bba\u6c42\u89e3\u6587\u7ae0\u7684\u6700\u77ed\u7f16\u7801\u957f\u5ea6\uff1a</p> <ul> <li>\u5f53 \\((n - 1) \\bmod (k - 1) = 0\\)\uff0c\u6309\u4e0a\u8ff0\u505a\u6cd5\u76f4\u63a5\u505a\u3002</li> <li>\u5f53 \\((n - 1) \\bmod (k - 1) \\ne 0\\)\uff0c\u4e00\u5f00\u59cb\u5148\u52a0\u5165 \\(k - 1 - (n - 1) \\bmod (k - 1)\\) \u4e2a \\(0\\)\uff0c\u7136\u540e\u6309\u4e0a\u8ff0\u505a\u6cd5\u76f4\u63a5\u505a\u3002\\(0\\) \u4e00\u5b9a\u662f\u5728\u6700\u6df1\u7684\u53f6\u5b50\u4e2d\u51fa\u73b0\uff0c\u6811\u7684\u9ad8\u5ea6\u4e5f\u5c3d\u53ef\u80fd\u5c0f\u3002</li> </ul> <p>\u7b2c\u4e8c\u95ee\u5b9e\u9645\u5728\u95ee\u9700\u8981\u7528\u5c3d\u53ef\u80fd\u77ed\u7684 \\(k\\) \u8fdb\u5236\u4e32\u6765\u7f16\u7801\u3002\u5f53 \\(n = 7, k = 3, w = [1, 1, 1, 3, 3, 3, 3]\\) \u65f6\uff0c\u6709\u4e24\u79cd\u4ee5\u4e0b\u7684\u54c8\u592b\u66fc\u6811\u4f7f\u5f97\u6700\u7ec8\u6587\u7ae0\u957f\u5ea6\u90fd\u662f\u6700\u77ed\u7684\uff1a</p> <p></p> <p>\u8fd9\u63d0\u793a\u6211\u4eec\u5728\u53d6\u51fa\u6743\u503c\u6700\u77ed\u7684\u7ed3\u70b9\u65f6\uff0c\u8fd8\u9700\u8981\u8003\u8651\u5f53\u524d\u7ed3\u70b9\u5bf9\u5e94\u7684\u5b50\u6811\u7684\u9ad8\u5ea6\u3002\u5f53\u6743\u503c\u4e0d\u540c\u65f6\u4f18\u5148\u53d6\u6743\u503c\u5c0f\u7684\u7ed3\u70b9\uff0c\u5f53\u6743\u503c\u76f8\u540c\u65f6\u4f18\u5148\u53d6\u5b50\u6811\u6df1\u5ea6\u5c0f\u7684\u7ed3\u70b9\u3002</p>"},{"location":"CSPS/ds/heap/%E5%85%B6%E4%BB%96/#\u6d1b\u8c37-p2278-\u64cd\u4f5c\u7cfb\u7edf","title":"\u6d1b\u8c37 P2278 \u64cd\u4f5c\u7cfb\u7edf","text":"<p>\u6ce8\u610f\uff1a\u5f53\u4e00\u4e2a\u8fdb\u7a0b \\(p\\) \u8fd8\u5728\u8fd0\u884c\uff08\u672a\u7ed3\u675f\u65f6\uff09\uff0c\u5982\u679c\u6765\u4e86\u4e00\u4e2a\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u8fdb\u7a0b \\(q\\)\uff0c\u4fdd\u7559 \\(p\\) \u7684\u8fdb\u5ea6\uff0c\u7136\u540e\u8fdb\u884c \\(q\\)\u3002</p> <p>\u679a\u4e3e\u6bcf\u4e2a\u5230\u6765\u7684\u8fdb\u7a0b \\(i\\)\uff1a</p> <ul> <li>\u5148\u6267\u884c\u5b8c\u7b49\u5f85\u961f\u5217\u4e2d\u4e0d\u88ab \\(i\\) \u5e72\u6270\u7684\u8fdb\u7a0b\u3002</li> <li>\u5982\u679c\u8fd8\u5269\u8fdb\u7a0b\uff08\u4f1a\u88ab\u5e72\u6270\u7684\uff09\uff0c\u4ee4\u63a5\u4e0b\u6765\u8981\u6267\u884c\u7684\u662f\u8fdb\u7a0b \\(j\\)\uff0c\u6bd4\u8f83 \\(j\\) \u548c \\(i\\) \u7684\u4f18\u5148\u7ea7 \\(p_j, p_i\\)</li> <li>\\(p_j \\ge p_i\\)\uff0c\u6267\u884c \\(j\\)\uff0c\u8fdb\u7a0b \\(i\\) \u5728\u7b49\u5f85\u961f\u5217\u4e2d</li> <li>\\(p_j \\lt p_i\\)\uff0c\u6267\u884c \\(j\\) \u7684\u4e00\u90e8\u5206\u76f4\u5230 \\(i\\) \u5230\u6765\uff0c\u7136\u540e\u6267\u884c \\(i\\)\u3002\\(i\\) \u540e\u7eed\u662f\u5426\u6709\u4f18\u5148\u7ea7\u66f4\u5927\u7684\u8fdb\u7a0b\u672a\u77e5\u3002</li> </ul> <p>\u5c06\u6240\u6709\u8fdb\u7a0b\u6309\u7167\u4ee5\u4e0a\u6b65\u9aa4\u52a0\u5165\u7b49\u5f85\u961f\u5217\u540e\uff0c\u5982\u679c\u961f\u5217\u4e2d\u8fd8\u5269\u8fdb\u7a0b\uff0c\u6a21\u62df\u6267\u884c\u3002\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u7b49\u5f85\u961f\u5217\uff0c\u8bb0\u5f55\u6bcf\u6761\u8fdb\u7a0b\u7684\u7f16\u53f7\u3001\u5230\u8fbe\u65f6\u95f4\u3001\u4f18\u5148\u7ea7\u3001\u5269\u4f59\u6267\u884c\u65f6\u95f4\u3002</p>"},{"location":"CSPS/ds/heap/%E5%85%B6%E4%BB%96/#\u6d1b\u8c37-p3045-cow-coupons","title":"\u6d1b\u8c37 P3045 Cow Coupons","text":"<p>\u8d2a\u5fc3\u7b56\u7565\u4e3a\u9009\u62e9 \\(C_i\\) \u5c0f\u7684\u5976\u725b\u7528\u5b8c\u4f18\u60e0\u5238\uff08\u82b1\u94b1\u5c3d\u53ef\u80fd\u5c11\uff09\uff0c\u7136\u540e\u5269\u4e0b\u5976\u725b\u76f4\u63a5\u8d2d\u4e70\u3002\u8fd9\u4e2a\u8d2a\u5fc3\u663e\u7136\u662f\u9519\u7684\u3002</p> <p>\u5047\u8bbe\u5b58\u5728\u4e00\u4e2a\u76f4\u63a5\u8d2d\u4e70\u7684\u5976\u725b \\(j\\)\uff0c\u4e70\u5b8c \\(j\\) \u4e4b\u540e\u7684\u4ef7\u683c \\(x \\le M\\)\u3002\u5982\u679c\u7528\u4f18\u60e0\u5238\u4e70 \\(j\\)\uff0c\u610f\u5473\u7740\u7528\u4f18\u60e0\u5238\u8d2d\u4e70\u7684\u5976\u725b\u96c6\u5408\u4e2d\u6709\u4e00\u5934\u8981\u76f4\u63a5\u8d2d\u4e70\uff0c\u4ee4\u5176\u4e3a \\(i\\)\uff0c\u6b64\u65f6\u82b1\u8d39 \\(x - P_j + C_j - C_i + P_i = x + (P_i - C_i) - (P_j - C_j)\\)\u3002</p> <p>\u4ee4 \\(D_i = P_i - C_i\\) \u8868\u793a\u4f7f\u7528\u4f18\u60e0\u5238\u53ef\u4ee5\u4f18\u60e0\u7684\u94b1\u6570\uff0c\u5982\u679c \\(D_i \\lt D_j\\)\uff0c\\(x + (P_i - C_i) - (P_j - C_j) = x + D_i - D_j \\lt x\\)\uff0c\u6240\u6709\u540e\u9762\u7684\u5976\u725b\u4e2d\u6709\u53ef\u80fd\u5b58\u5728\u7528\u4f18\u60e0\u5238\u4e70\u7684\u3002</p> <p>\u8d2a\u5fc3\u8c03\u6574\u4e3a\uff0c\u5148\u9009\u62e9 \\(C_i\\) \u5c0f\u7684 \\(K\\) \u4e2a\u5976\u725b\u7528\u4f18\u60e0\u5238\uff0c\u5bf9\u4e8e\u5269\u4f59\u7684\u5976\u725b \\(K + 1 \\sim N\\) \u627e\u76f4\u63a5\u8d2d\u4e70\u82b1\u8d39\u6700\u5c11\u7684\u5976\u725b \\(x\\)\uff08\\(P_x\\) \u6700\u5c0f\u7684\uff09\u548c\u7528\u4f18\u60e0\u5238\u8d2d\u4e70\u82b1\u8d39\u6700\u5c11\u7684\u5976\u725b \\(y\\)\uff08\\(C_y\\) \u6700\u5c0f\u7684\uff09\uff0c\u7136\u540e\u9009\u62e9\u5176\u4e2d\u82b1\u8d39\u6700\u5c11\u7684\u60c5\u51b5\u5904\u7406\u3002\u6ce8\u610f\u5ef6\u8fdf\u5220\u9664\u7684\u95ee\u9898\u3002</p>"},{"location":"CSPS/ds/heap/%E5%85%B6%E4%BB%96/#\u6d1b\u8c37-p2827-\u86af\u8693","title":"\u6d1b\u8c37 P2827 \u86af\u8693","text":"<p>\u672c\u9898\u5148\u8003\u8651\u66b4\u529b\u6a21\u62df\uff0c\u7ef4\u62a4\u4e00\u4e2a\u86af\u8693\u5217\u8868\uff0c\u6bcf\u6b21\u5728\u5217\u8868\u4e2d\u67e5\u627e\u86af\u8693\u957f\u5ea6\u6700\u5927\u503c\uff0c\u5207\u534a\uff0c\u7136\u540e\u7ed9\u5176\u4ed6\u6240\u6709\u86af\u8693\u957f\u5ea6 \\(+q\\)\u3002\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(m(n+m))\\)\u3002</p> <p>\u6240\u4f7f\u7528\u5230\u7684\u67e5\u627e\u3001\u5207\u534a\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u7528\u624b\u5199\u5806\u6216\u4f18\u5148\u961f\u5217\u7ef4\u62a4\uff0c\u5176\u4ed6\u6240\u6709\u86af\u8693\u957f\u5ea6 \\(+q\\)\uff0c\u4ece\u76f8\u5bf9\u7684\u89c6\u89d2\u6765\u770b\u662f\u7ed9\u5206\u51fa\u4e24\u4e2a\u86af\u8693\u7684\u957f\u5ea6 \\(-q\\)\u3002\u8fd9\u6837\u5355\u6b21\u64cd\u4f5c\u80fd\u4ee5 \\(O(\\log (n+m))\\) \u7684\u65f6\u95f4\u7ef4\u62a4\u3002\u6ce8\u610f\u5207\u534a\u65f6\u9700\u8981\u5148\u8fd8\u539f\u4e3a\u539f\u957f\u5ea6\u3002</p> <p>\u5bf9\u4e8e\u6ee1\u5206\u505a\u6cd5\uff0c\u6709\u4e00\u4e2a\u7ed3\u8bba\u662f\u5148\u5207\u534a\u5206\u51fa\u7684\u86af\u8693\u957f\u5ea6 \\(a, b\\) \u4e00\u5b9a\u6bd4\u540e\u5207\u534a\u5206\u51fa\u7684\u86af\u8693\u7684\u957f\u5ea6 \\(c, d\\) \u957f\uff0c\u5373 \\(a \\gt c, b \\gt d\\)\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u4e09\u4e2a\u961f\u5217\u5206\u522b\u5b58\u50a8\u539f\u6765\u7684 \\(n\\) \u53ea\u86af\u8693\uff08\u4ece\u5927\u5230\u5c0f\u6392\u597d\uff09\u3001\u5207\u534a \\(\\lfloor px \\rfloor\\) \u7684\u86af\u8693\u3001\u5207\u534a \\(x - \\lfloor px \\rfloor\\) \u7684\u86af\u8693\uff0c\u6bcf\u6b21\u5728\u4e09\u4e2a\u961f\u5934\u5bfb\u627e\u6700\u5927\u503c\uff0c\u5207\u534a\u540e\u7684\u86af\u8693\u653e\u5728\u76f8\u5e94\u961f\u5c3e\u5373\u53ef\u3002</p>"},{"location":"CSPS/ds/heap/%E5%85%B6%E4%BB%96/#\u6700\u5c0f\u51fd\u6570\u503c","title":"\u6700\u5c0f\u51fd\u6570\u503c","text":"<p>\\(\\mathbb N*\\) \u662f\u6b63\u6574\u6570\u96c6\u3002\u6839\u636e\u4e00\u4e9b\u521d\u4e2d\u4ee3\u6570\u77e5\u8bc6\u53ef\u77e5\uff0c\\(F_1(x) \\sim F_n(x)\\) \u5728 \\(x \\in [1, \\infin)\\) \u4e0a\u5355\u8c03\u9012\u589e\u3002\u7c7b\u4f3c\u4e8e\u6700\u5927\u548c\uff0c\u6211\u4eec\u5c06 \\(F_1(1) \\sim F_n(1)\\) \u5b58\u5165\u4f18\u5148\u961f\u5217\u4e2d\uff0c\u6bcf\u6b21\u5f39\u51fa\u6700\u5c0f\u503c \\(F_t(x)\\) \u540e\u5c06\u8be5\u51fd\u6570\u7684\u4e0b\u4e00\u4e2a\u503c \\(F_t(x + 1)\\) \u538b\u5165\u4f18\u5148\u961f\u5217\uff0c\u64cd\u4f5c \\(m\\) \u6b21\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(m \\log n)\\)\u3002</p>"},{"location":"CSPS/ds/heap/%E5%BA%94%E7%94%A8/","title":"\u5e94\u7528","text":""},{"location":"CSPS/ds/heap/%E5%BA%94%E7%94%A8/#\u5806\u6392\u5e8f","title":"\u5806\u6392\u5e8f","text":""},{"location":"CSPS/ds/heap/%E5%BA%94%E7%94%A8/#\u6a21\u677f\u5feb\u901f\u6392\u5e8f","title":"\u3010\u6a21\u677f\u3011\u5feb\u901f\u6392\u5e8f","text":"<p>\u6ca1\u5565\u597d\u8bb2\u89e3\u7684\u3002</p> <p>\u5806\u6392\u5e8f\u4e0d\u662f\u7a33\u5b9a\u6392\u5e8f\u3002\u5e73\u5747\u3001\u6700\u574f\u3001\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a \\(O(n \\log n)\\)\u3002</p>"},{"location":"CSPS/ds/heap/%E5%BA%94%E7%94%A8/#\u8d2a\u5fc3","title":"\u8d2a\u5fc3","text":""},{"location":"CSPS/ds/heap/%E5%BA%94%E7%94%A8/#\u5408\u5e76\u679c\u5b50","title":"\u5408\u5e76\u679c\u5b50","text":"<p>\u8d2a\u5fc3\uff0c\u6bcf\u6b21\u9009\u51fa\u6570\u76ee\u6700\u5c0f\u7684\u4e24\u5806\u8fdb\u884c\u5408\u5e76\u5373\u53ef\u3002\u66b4\u529b\u6a21\u62df\u662f \\(O(n^2)\\)\uff0c\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u4f18\u5316\u81f3 \\(O(n \\log n)\\)\u3002</p> <p>\u5982\u679c\u628a\u5408\u5e76\u8fc7\u7a0b\u5efa\u6811\uff0c\u90a3\u4e48\u9898\u76ee\u6240\u8981\u6c42\u7684\u7684\u7b54\u6848\u5c31\u662f \\(\\sum a_id_i\\)\uff0c\\(a_i\\) \u4e3a\u6570\u76ee\uff0c\\(d_i\\) \u4e3a \\(a_i\\) \u5728\u6811\u4e2d\u7684\u6df1\u5ea6\uff0c\u663e\u7136 \\(d_i\\) \u5927\u7684\u53f6\u5b50\u7ed3\u70b9 \\(a_i\\) \u5c3d\u53ef\u80fd\u5c0f\uff0c\u56e0\u6b64\u6bcf\u6b21\u9009\u51fa\u6570\u76ee\u6700\u5c0f\u7684\u4e24\u5806\u8fdb\u884c\u5408\u5e76\u3002</p>"},{"location":"CSPS/ds/heap/%E5%BA%94%E7%94%A8/#\u6700\u5c0f\u548c","title":"\u6700\u5c0f\u548c","text":"<p>\u5806\u4f18\u5316\u3002</p> <p>\u5982\u679c\u66b4\u529b\u8bb0\u5f55\u6240\u6709\u548c\uff0c\u518d\u52a0\u4e0a\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u9ad8\u8fbe \\(O(n^2 \\log n)\\)\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5148\u5bf9 \\(n^2\\) \u4e2a\u548c\u8fdb\u884c\u5206\u7ec4\uff1a</p> <ul> <li>\u7b2c\u4e00\u7ec4\uff1a\\(a_1 + b_1, a_1 + b_2, a_1 + b_3, \\dots, a_1 + b_n\\)</li> <li>\u7b2c\u4e8c\u7ec4\uff1a\\(a_2 + b_1, a_2 + b_2, a_2 + b_3, \\dots, a_2 + b_n\\)</li> <li>\\(\\dots\\)</li> <li>\u7b2c \\(N\\) \u7ec4\uff1a\\(a_n + b_1, a_n + b_2, a_n + b_3, \\dots, a_n + b_n\\)</li> </ul> <p>\u7531\u4e8e\u9898\u76ee\u7ed9\u51fa\u7684\u5e8f\u5217 \\(a\\) \u548c \\(b\\) \u90fd\u662f\u5355\u8c03\u4e0d\u51cf\u7684\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u7ec4\u5185\u7684 \\(n\\) \u4e2a\u548c\u4e5f\u90fd\u662f\u5355\u8c03\u4e0d\u51cf\u7684\u3002\u53ef\u4ee5\u66b4\u529b\u7528 \\(n\\) \u4e2a\u6307\u9488\u7ef4\u62a4\u6bcf\u4e00\u7ec4\u7684\u6700\u5c0f\u503c\uff0c\u6bcf\u6b21\u53d6\u4e00\u4e2a\u6700\u5c0f\u503c \\(O(n)\\)\uff0c\u603b\u65f6\u95f4 \\(O(n^2)\\)\u3002</p> <p>\u8bbe\u8ba1\u72b6\u6001\u3010\u548c\uff0c\u548c\u6240\u5c5e\u7684\u7ec4\uff0c\u548c\u5728\u6240\u5c5e\u7ec4\u4e2d\u662f\u7b2c\u51e0\u4e2a\u3011\u3002\u4e00\u5f00\u59cb\u5148\u5c06\u6bcf\u7ec4\u7684\u6700\u5c0f\u548c\u7684\u72b6\u6001\u5b58\u50a8\u5728\u5806\u4e2d\u3002\u6bcf\u6b21\u53d6\u51fa\u5806\u4e2d\u7684\u6700\u5c0f\u548c\u540e\uff0c\u5c06\u8be5\u7ec4\u7684\u540e\u4e00\u4e2a\u548c\u538b\u5165\u5230\u5806\u4e2d\u3002\u6267\u884c \\(n\\) \u6b21\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u6700\u5c0f\u7684 \\(n\\) \u4e2a\u548c\u5c31\u5f97\u5230\u4e86\u3002\u603b\u65f6\u95f4 \\(O(n \\log n)\\)\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u5b9e\u73b0\uff0c\u4f7f\u7528\u7ed3\u6784\u4f53\u8868\u793a\u72b6\u6001\uff0c\u4f7f\u7528 priority_queue \u4ee3\u66ff\u5806\u3002</p>"},{"location":"CSPS/ds/heap/%E5%BA%94%E7%94%A8/#\u5efa\u7b51\u62a2\u4fee","title":"\u5efa\u7b51\u62a2\u4fee","text":"<p>\u5806\u8d2a\u5fc3\u3002\u8d2a\u5fc3\u9898\u76ee\u57fa\u672c\u4e0a\u662f\u901a\u8fc7\u5927\u91cf\u5237\u9898\u6512\u7ecf\u9a8c\u548c\u7384\u5b66\u6784\u9020\u6765\u89e3\u51b3\u7684\uff0c\u5c11\u6570\u540c\u5b66\u80fd\u7528\u5929\u8d4b\u52a0\u901f\u5927\u91cf\u5237\u9898\u7684\u8fc7\u7a0b\u3002\u8d2a\u5fc3\u7684\u8bc1\u660e\u4ea6\u5982\u6b64\u3002</p> <p>\u8fd9\u4e2a\u9898\u72b6\u6001\u6709\u4e24\u4e2a\u5c5e\u6027\u3010\u4fee\u7406\u65f6\u957f\uff0c\u622a\u6b62\u65f6\u523b\u3011\uff0c\u53ef\u4ee5\u5148\u5bf9\u622a\u6b62\u65f6\u523b\u6392\u5e8f\uff08\u76f8\u5f53\u4e8e\u662f\u7ed9\u6240\u6709\u5efa\u7b51\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4f18\u5148\u7ea7\uff0c\u622a\u6b62\u65f6\u95f4\u8d8a\u65e9\u7684\u80af\u5b9a\u8d8a\u8981\u5148\u5b8c\u6210\uff09\u3002</p> <p>\u6309\u6392\u5e8f\u540e\u7684\u987a\u5e8f\u6a21\u62df\u4fee\u7406\u5efa\u7b51\uff0c\u5e76\u8bb0\u5f55\u4fee\u7406\u603b\u65f6\u957f\u3002\u53cd\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>3\n100 100\n2 101\n3 102\n\u6309\u6b64\u8d2a\u5fc3\u53ea\u80fd\u4fee\u7b2c 1 \u4e2a\u5efa\u7b51\uff0c\u5b9e\u9645\u80fd\u4fee\u7b2c 2\u30013 \u4e2a \u5efa\u7b51\n</code></pre> <p>\u5982\u679c\u603b\u65f6\u957f\u4e0d\u8d85\u8fc7\u5f53\u524d\u5efa\u7b51\u7684\u622a\u6b62\u65f6\u523b\uff0c\u90a3\u5c31\u628a\u5f53\u524d\u5efa\u7b51\u52a0\u5165\u5230\u4fee\u7406\u8ba1\u5212\u5f53\u4e2d\uff1b</p> <p>\u5426\u5219\uff0c\u8bf4\u660e\u5fc5\u7136\u6709\u4e00\u4e2a\u5efa\u7b51\u662f\u4e0d\u80fd\u4fee\u7406\u7684\uff08\u5982\u4f55\u7406\u89e3\uff1f\uff09\uff0c\u4e3a\u4e86\u8ba9\u540e\u9762\u7684\u5efa\u7b51\u4fee\u7406\u6709\u66f4\u591a\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u5e94\u8be5\u4e0d\u53bb\u4fee\u7406\u524d\u9762\u6240\u6709\u5efa\u7b51\u4e2d\u65f6\u957f\u6700\u957f\u7684\u90a3\u4e00\u4e2a\uff08\u5982\u4f55\u7406\u89e3\uff1f\uff09\u3002</p> <p>\u53ef\u4ee5\u7528\u5806\u6765\u5b58\u50a8\u6240\u6709\u4fee\u7406\u5efa\u7b51\u7684\u65f6\u957f\uff0c\u52a0\u5165\u4fee\u7406\u8ba1\u5212\u2014\u2014\u5806\u4e2d\u63d2\u5165\u5143\u7d20\uff0c\u79fb\u9664\u65f6\u957f\u6700\u957f\u7684\u5efa\u7b51\u2014\u2014\u5220\u9664\u5806\u4e2d\u6700\u5927\u503c\u3002</p>"},{"location":"CSPS/ds/heap/%E5%BA%94%E7%94%A8/#\u5bf9\u9876\u5806\u53cc\u5806\u7ef4\u62a4\u5206\u754c\u7ebf","title":"\u5bf9\u9876\u5806\uff08\u53cc\u5806\u7ef4\u62a4\u5206\u754c\u7ebf\uff09","text":"<p>\u5bf9\u9876\u5806\u3002\u7528\u4e24\u4e2a\u76f8\u53cd\u7684\u5806\u6765\u5bf9\u6240\u6709\u5143\u7d20\u6309\u503c\u57df\u8fdb\u884c\u5212\u5206\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e24\u4e2a\u5806\uff0c\u4e00\u4e2a\u5927\u6839\u5806\u5b58\u50a8\u4e2d\u4f4d\u6570\u5de6\u8fb9\u4e00\u534a\uff08\u5373\u8f83\u5c0f\u90e8\u5206\uff09\u7684\u6240\u6709\u5143\u7d20\uff08\u5305\u62ec\u4e2d\u4f4d\u6570\uff09\uff0c\u4e00\u4e2a\u5c0f\u6839\u5806\u5b58\u50a8\u4e2d\u4f4d\u6570\u53f3\u8fb9\u4e00\u534a\uff08\u5373\u8f83\u5927\u90e8\u5206\uff09\u7684\u6240\u6709\u5143\u7d20\u3002\u4f8b\u5982\u5f53\u524d\u5df2\u6709\u4e00\u4e2a\u6392\u5e8f\u597d\u7684\u5e8f\u5217 \\([A_1, A_2, A_3, A_4, A_5]\\)\uff0c\u90a3\u5927\u6839\u5806\u4e2d\u5b58\u50a8 \\([A_1, A_2, A_3]\\)\uff0c\u5c0f\u6839\u5806\u4e2d\u5b58\u50a8 \\([A_4, A_5]\\)\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\uff1a</p> <ul> <li>\u5806\u7684\u5927\u5c0f\u5c31\u662f\u5206\u754c\u7ebf\u7684\u4f4d\u7f6e</li> <li>\u5806\u9876\u5143\u7d20\u5c31\u662f\u5206\u754c\u7ebf\u4e24\u7aef\u7684\u5143\u7d20</li> <li>\u5c06\u4e00\u4e2a\u5806\u9876\u5143\u7d20\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u5806\u4e2d\uff0c\u5c31\u662f\u8c03\u6574\u5206\u754c\u7ebf</li> </ul>"},{"location":"CSPS/ds/heap/%E5%BA%94%E7%94%A8/#\u52a8\u6001\u4e2d\u4f4d\u6570","title":"\u52a8\u6001\u4e2d\u4f4d\u6570","text":"<p>\u90a3\u4e48\u6211\u4eec\u5728\u63d2\u5165\u5143\u7d20\u65f6\uff0c\u53ef\u4ee5\u6839\u636e\u8be5\u5143\u7d20\u4e0e\u4e24\u4e2a\u5806\u9876\u7684\u5927\u5c0f\u6765\u51b3\u5b9a\u4ed6\u6240\u5e94\u8be5\u63d2\u5165\u7684\u5806\uff08\u4ed4\u7ec6\u601d\u8003\u63d2\u5165\u8fc7\u7a0b\uff09\u3002\u5728\u67e5\u8be2\u4e2d\u4f4d\u6570\u65f6\uff0c\u901a\u8fc7\u79fb\u52a8\u5806\u9876\u5143\u7d20\uff08\u5982\u4f55\u79fb\u52a8\uff1f\uff09\u8c03\u6574\u5206\u754c\u7ebf\u7684\u4f4d\u7f6e\uff0c\u4f7f\u5f97\u5927\u6839\u5806\u5b58\u50a8\u7684\u5143\u7d20\u6570\u91cf\u4e3a \\(\\frac{N + 1}{2}\\)\uff08\\(N\\) \u4e3a\u5f53\u524d\u5df2\u63d2\u5165\u7684\u5143\u7d20\u6570\u91cf\uff09\uff0c\u6b64\u65f6\u5927\u6839\u5806\u7684\u5806\u9876\u6070\u597d\u5c31\u662f\u4e2d\u4f4d\u6570\u3002</p> <p>\u5bf9\u4e8e\u6b64\u9898\uff0c\u53ef\u4ee5\u6309\u987a\u5e8f\u7684\u4e00\u4e2a\u4e2a\u63d2\u5165\u5143\u7d20\uff0c\u5e76\u4e14\u5728\u5947\u6570\u957f\u5ea6\u524d\u7f00\u7684\u4f4d\u7f6e\u8c03\u6574\u5206\u754c\u7ebf\u3002\u4e5f\u53ef\u4ee5\u6bcf\u6b21\u63d2\u5165\u5143\u7d20\u65f6\uff0c\u5c31\u8c03\u6574\u5206\u754c\u7ebf\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u8bc1\u660e\u6bcf\u6b21\u5206\u754c\u7ebf\u6700\u591a\u79fb\u52a8\u4e00\u4e2a\u5355\u4f4d\u3002</p> <p>\u63d2\u5165\u5143\u7d20\u603b\u65f6\u95f4 \\(O(n \\log n)\\)\uff0c\u79fb\u52a8\u5206\u754c\u7ebf\u603b\u65f6\u95f4 \\(O(n \\log n)\\)\uff08\u4e3a\u4ec0\u4e48\u6700\u591a\u79fb\u52a8 \\(n\\) \u6b21\uff1f\uff09</p> <p>\u7531\u4e8e\u53ea\u9700\u8981\u5b58\u50a8\u503c\uff0c\u4f7f\u7528 priority_queue \u6765\u5b9e\u73b0\u3002</p>"},{"location":"CSPS/ds/heap/%E5%BA%94%E7%94%A8/#\u4e60\u9898","title":"\u4e60\u9898","text":"<p>CSP-J2020 \u76f4\u64ad\u83b7\u5956 \u5bf9\u9876\u5806</p> <p>P1801 \u9ed1\u5323\u5b50 \u5bf9\u9876\u5806</p> <p>P2085 \u6700\u5c0f\u51fd\u6570\u503c \u5bf9\u9876\u5806\uff0c\u96be</p> <p>P2949 \u8d2a\u5fc3</p> <p>[NOI2015] \u8377\u9a6c\u53f2\u8bd7 \u8d2a\u5fc3</p> <p>P2827 \u86af\u8693 \u8d2a\u5fc3\uff0c\u96be</p>"},{"location":"L2/io_technique/","title":"\u8f93\u5165\u6280\u5de7","text":""},{"location":"L2/io_technique/#cin","title":"cin","text":"<p><code>cin</code> \u4f7f\u7528\u7a7a\u767d\u5b57\u7b26\u4f5c\u4e3a\u6570\u636e\u4e4b\u95f4\u7684\u5206\u9694\u7b26\uff0c\u7a7a\u767d\u5b57\u7b26\u5305\u542b\u7a7a\u683c\u7b26\u3001\u5236\u8868\u7b26\u3001\u6362\u884c\u7b26\u3002\u4f7f\u7528 <code>cin &gt;&gt;</code> \u65b9\u5f0f\u8bfb\u53d6\u6570\u636e\u65f6\u4e0d\u4f1a\u5c06\u7a7a\u767d\u5b57\u7b26\u5f53\u505a\u6570\u636e\u5904\u7406\u3002\u89c2\u5bdf\u4e0b\u9762\u51e0\u4e2a\u4f8b\u5b50\u3002</p> <pre><code>int a, b;\ncin &gt;&gt; a &gt;&gt; b;\ncout &lt;&lt; a &lt;&lt; ' ' &lt;&lt; b;\n\n// \u8f93\u5165 2 3\uff0c\u8f93\u51fa 2 3\n// \u8f93\u5165 2 \u56de\u8f66 3\uff0c\u8f93\u51fa 2 3\n</code></pre> <p><code>cin</code> \u5728\u9047\u5230\u65e0\u6cd5\u5339\u914d\u7684\u5b57\u7b26\u65f6\u4f1a\u81ea\u52a8\u5206\u9694\u3002</p> <pre><code>int a;\nchar c;\ncin &gt;&gt; a &gt;&gt; c;  // \u8f93\u5165 12?\ncout &lt;&lt; a &lt;&lt; ' ' &lt;&lt; c;  // \u8f93\u51fa 12 ?\n</code></pre> <p><code>cin</code> \u5728\u8bfb\u5165\u5b57\u7b26\u578b\u65f6\u4e0d\u5fc5\u4f7f\u7528\u5206\u9694\u7b26\u3002</p> <pre><code>char a, b;\ncin &gt;&gt; a &gt;&gt; b;\ncout &lt;&lt; a &lt;&lt; ' ' &lt;&lt; b;\n\n// \u8f93\u5165 ac\uff0c\u8f93\u51fa a c\n// \u8f93\u5165 a c\uff0c\u8f93\u51fa a c\n// \u8f93\u5165 a \u56de\u8f66 c\uff0c\u8f93\u51fa a c\n</code></pre> <p>\u8bfb\u5165\u6570\u636e\u5931\u8d25\u65f6\uff0c<code>cin</code> \u4f1a\u83b7\u5f97\u5931\u6548\u6807\u8bb0\u3002<code>cin</code> \u5931\u6548\u540e\u65e0\u6cd5\u518d\u4f7f\u7528 <code>cin</code> \u8fdb\u884c\u4efb\u4f55\u8bfb\u5165\u3002\u53ef\u4ee5\u5c06 <code>cin</code> \u8f6c\u4e3a bool \u7c7b\u578b\u6765\u67e5\u770b\u662f\u5426\u5931\u6548\u3002</p> <pre><code>int a = 1, b = 2;\nchar c = '!';\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; c; // \u8f93\u5165 67?89\ncout &lt;&lt; (bool)cin &lt;&lt; ' ' &lt;&lt; a &lt;&lt; ' ' &lt;&lt; b &lt;&lt; ' ' &lt;&lt; c;  // \u8f93\u51fa 0 67 0 !\n</code></pre> <p>\u53ef\u4ee5\u4f7f\u7528 <code>while (cin &gt;&gt; )</code> \u7684\u65b9\u5f0f\u8fde\u7eed\u8bfb\u53d6\u82e5\u5e72\u8f93\u5165\u76f4\u5230\u8f93\u5165\u7ed3\u675f\u6216\u8005\u8f93\u5165\u51fa\u73b0\u9519\u8bef\u3002</p> <pre><code>int sum = 0;\nwhile (cin &gt;&gt; x) {\n  sum += x;\n}\n\n// \u8f93\u5165 3 4 5 \u56de\u8f66\uff0c\u7136\u540e\u6309 ctrl + z\uff0c\u7136\u540e\u56de\u8f66\uff0c\u8f93\u51fa 12\n</code></pre> <p><code>cin.putback(c)</code> \u53ef\u4ee5\u5c06\u5b57\u7b26 <code>c</code> \u5f39\u56de\u5230\u8f93\u5165\u7f13\u51b2\u533a\u4e2d\u3002</p> <pre><code>int a;\ncin.putback('1');\ncin &gt;&gt; a; // \u8f93\u5165 2\ncout &lt;&lt; a;  // \u8f93\u51fa 21\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u5229\u7528 <code>cin.putback()</code> \u5e2e\u52a9\u6211\u4eec\uff0c\u5f53\u6211\u4eec\u4e0d\u786e\u5b9a\u662f\u5426\u8981\u8bfb\u5165\u6574\u6570\u65f6\uff0c\u53ef\u4ee5\u5148\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u8fdb\u884c\u68c0\u67e5\uff0c\u5982\u679c\u4e3a\u6574\u6570\uff0c\u5219\u5f39\u56de\u7136\u540e\u91cd\u65b0\u8bfb\u5165\u6574\u6570\u3002</p> <pre><code>char ch;\nint x;\ncin &gt;&gt; ch;\nif (ch &gt;= '0' &amp;&amp; ch &lt;= '9') {\n  cin.putback(ch);\n  cin &gt;&gt; x;\n}\n</code></pre> <p><code>cin.get()</code> \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u8bfb\u53d6\u5305\u62ec\u7a7a\u767d\u5b57\u7b26\u5728\u5185\u7684\u5b57\u7b26\u3002\u7528\u6cd5\u4e3a <code>cin.get(char \u53d8\u91cf\u540d)</code> \u6216\u8005 <code>\u53d8\u91cf\u540d = cin.get()</code>\u3002</p> <pre><code>char a, b, c;\ncin.get(a);\nb = cin.get();\ncin &gt;&gt; c;\ncout &lt;&lt; a &lt;&lt; b &lt;&lt; c;\n\n// \u8f93\u5165 2 3\n// \u8f93\u51fa 2 3\n</code></pre> <p>\u5173\u4e8e <code>cin</code> \u7684\u5931\u6548\u6807\u8bb0\u548c <code>while (cin &gt;&gt; )</code> \u7684\u539f\u7406\uff0c\u4ee5\u4e0b\u662f GPT-4 \u7684\u56de\u7b54\u3002</p> Gpt-4 while (cin &gt;&gt; x) \u7684\u539f\u7406\u662f\u4ec0\u4e48\uff1fcin \u6d41\u72b6\u6001\u662f\u4ec0\u4e48\uff1f <p>\u5728 C++ \u4e2d\uff0c\u4f7f\u7528 <code>while (cin &gt;&gt; x)</code> \u5faa\u73af\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u65b9\u5f0f\uff0c\u7528\u4e8e\u8fde\u7eed\u8bfb\u53d6\u8f93\u5165\u76f4\u5230\u9047\u5230\u8f93\u5165\u7ed3\u675f\u6216\u9519\u8bef\u3002\u8fd9\u4e2a\u8bed\u53e5\u7684\u5de5\u4f5c\u539f\u7406\u57fa\u4e8e <code>cin</code> \u7684\u72b6\u6001\uff0c\u5177\u4f53\u89e3\u91ca\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u8f93\u5165\u8fd0\u7b97\u7b26\uff08<code>&gt;&gt;</code>\uff09\uff1a\u5f53 <code>cin &gt;&gt; x</code> \u88ab\u6267\u884c\u65f6\uff0cC++ \u5c1d\u8bd5\u4ece\u6807\u51c6\u8f93\u5165\uff08\u901a\u5e38\u662f\u952e\u76d8\u8f93\u5165\uff09\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u53d8\u91cf <code>x</code> \u4e2d\u3002\u7c7b\u578b\u5fc5\u987b\u4e0e\u53d8\u91cf <code>x</code> \u7684\u7c7b\u578b\u5339\u914d\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002</p> </li> <li> <p>\u5faa\u73af\u6761\u4ef6\uff1a<code>while</code> \u5faa\u73af\u7684\u6761\u4ef6\u662f <code>cin &gt;&gt; x</code> \u7684\u7ed3\u679c\u3002\u5728 C++ \u4e2d\uff0c<code>cin &gt;&gt; x</code> \u5b9e\u9645\u4e0a\u8fd4\u56de <code>cin</code> \u5bf9\u8c61\u7684\u5f15\u7528\u3002\u5f53\u8f93\u5165\u6210\u529f\u65f6\uff08\u5373\u6570\u636e\u6210\u529f\u8bfb\u5165\u5e76\u4e14\u7c7b\u578b\u5339\u914d\uff09\uff0c<code>cin</code> \u4fdd\u6301\u5728\u6709\u6548\u72b6\u6001\uff08\u672a\u8bbe\u7f6e <code>failbit</code> \u6216 <code>badbit</code>\uff09\uff0c\u5e76\u88ab\u89c6\u4e3a\u4e00\u4e2a\u771f\u503c\u3002\u5982\u679c\u9047\u5230\u8f93\u5165\u9519\u8bef\uff08\u4f8b\u5982\u7c7b\u578b\u4e0d\u5339\u914d\u6216\u8f93\u5165\u6d41\u7ed3\u675f\uff09\uff0c<code>failbit</code> \u6216 <code>badbit</code> \u5c06\u88ab\u8bbe\u7f6e\uff0c<code>cin</code> \u5bf9\u8c61\u4f1a\u8f6c\u6362\u4e3a\u5047\u503c\uff0c\u56e0\u6b64\u7ec8\u6b62\u5faa\u73af\u3002</p> </li> <li> <p>\u5904\u7406\u4e0d\u5339\u914d\u6216\u9519\u8bef\uff1a\u5982\u679c\u8f93\u5165\u7684\u6570\u636e\u4e0e <code>x</code> \u7684\u7c7b\u578b\u4e0d\u5339\u914d\uff0c<code>cin</code> \u7684\u72b6\u6001\u5c06\u53d8\u4e3a\u9519\u8bef\u72b6\u6001\uff0c\u8fd9\u5bfc\u81f4 <code>while</code> \u5faa\u73af\u7ec8\u6b62\u3002\u4f8b\u5982\uff0c\u5982\u679c\u671f\u671b\u7684\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u4f46\u7528\u6237\u8f93\u5165\u4e86\u4e00\u4e9b\u5b57\u6bcd\uff0c<code>cin</code> \u5c06\u4e0d\u80fd\u5c06\u8fd9\u4e9b\u5b57\u6bcd\u89e3\u91ca\u4e3a\u6574\u6570\uff0c\u4ece\u800c\u8bbe\u7f6e <code>failbit</code>\u3002</p> </li> <li> <p>\u7ed3\u675f\u8f93\u5165\uff1a\u5728 Unix/Linux \u7cfb\u7edf\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 Ctrl+D\uff08\u6587\u4ef6\u7ed3\u675f\u7b26 EOF\uff09\u6765\u8868\u793a\u8f93\u5165\u7ed3\u675f\uff0c\u5728 Windows \u7cfb\u7edf\u4e2d\u901a\u5e38\u4f7f\u7528 Ctrl+Z\u3002\u8fd9\u4f1a\u4f7f <code>cin</code> \u8fdb\u5165\u6587\u4ef6\u7ed3\u675f\u72b6\u6001\uff08\u8bbe\u7f6e <code>eofbit</code>\uff09\uff0c\u540c\u65f6\u5982\u679c\u6ca1\u6709\u66f4\u591a\u7684\u6709\u6548\u6570\u636e\uff0c\u4e5f\u4f1a\u8bbe\u7f6e <code>failbit</code>\uff0c\u4ece\u800c\u505c\u6b62\u5faa\u73af\u3002</p> </li> </ol> <p>\u8fd9\u79cd <code>while (cin &gt;&gt; x)</code> \u7ed3\u6784\u975e\u5e38\u9002\u5408\u4e8e\u9700\u8981\u591a\u6b21\u8bfb\u53d6\u540c\u7c7b\u578b\u6570\u636e\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u8f93\u5165\u4e00\u7cfb\u5217\u6570\u5b57\u3002\u5f53\u6570\u636e\u6b63\u786e\u8f93\u5165\u65f6\uff0c\u5faa\u73af\u7ee7\u7eed\uff1b\u5f53\u9047\u5230\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u8f93\u5165\u6216\u8f93\u5165\u7ed3\u675f\u65f6\uff0c\u5faa\u73af\u505c\u6b62\uff0c\u5141\u8bb8\u7a0b\u5e8f\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u64cd\u4f5c\u3002</p> <p>\u5728 C++ \u4e2d\uff0c<code>cin</code> \u6d41\u72b6\u6001\u6307\u7684\u662f\u4e00\u4e2a\u8f93\u5165\u6d41\u7684\u5f53\u524d\u72b6\u6001\uff0c\u8fd9\u4e9b\u72b6\u6001\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u4e86\u89e3\u662f\u5426\u53d1\u751f\u4e86\u8f93\u5165\u9519\u8bef\u6216\u5176\u4ed6\u7c7b\u578b\u7684\u6d41\u95ee\u9898\u3002C++ \u6807\u51c6\u5e93\u4e2d\u7684\u8f93\u5165\u6d41\u5bf9\u8c61\uff08\u5982 <code>cin</code>\uff09\u4f7f\u7528\u72b6\u6001\u6807\u5fd7\u6765\u8868\u793a\u6d41\u7684\u5f53\u524d\u5065\u5eb7\u72b6\u51b5\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684 <code>cin</code> \u6d41\u72b6\u6001\u6807\u5fd7\uff1a</p> <ol> <li> <p>goodbit: \u5982\u679c\u8bbe\u7f6e\u4e86 <code>goodbit</code>\uff0c\u8868\u793a\u6d41\u672a\u53d1\u751f\u9519\u8bef\uff0c\u72b6\u6001\u826f\u597d\u3002\u8fd9\u662f\u9ed8\u8ba4\u72b6\u6001\uff0c\u6ca1\u6709\u8bbe\u7f6e\u5176\u4ed6\u4efb\u4f55\u9519\u8bef\u6807\u5fd7\u65f6\uff0c<code>goodbit</code> \u4f1a\u88ab\u8bbe\u7f6e\u3002</p> </li> <li> <p>eofbit: \u5982\u679c\u5728\u8bfb\u53d6\u671f\u95f4\u5230\u8fbe\u4e86\u8f93\u5165\u7684\u672b\u5c3e\uff0c\u5c06\u8bbe\u7f6e <code>eofbit</code>\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u5c1d\u8bd5\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4f46\u5df2\u7ecf\u8fbe\u5230\u4e86\u6587\u4ef6\u7684\u672b\u5c3e\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002</p> </li> <li> <p>failbit: \u5982\u679c\u56e0\u4e3a\u9884\u671f\u683c\u5f0f\u5916\u7684\u5b57\u7b26\u6216\u5176\u4ed6\u539f\u56e0\u5bfc\u81f4\u8f93\u5165\u64cd\u4f5c\u5931\u8d25\uff0c\u5219\u4f1a\u8bbe\u7f6e <code>failbit</code>\u3002\u4f8b\u5982\uff0c\u5982\u679c\u671f\u671b\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u4f46\u7528\u6237\u8f93\u5165\u4e86\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5c31\u4f1a\u8bbe\u7f6e <code>failbit</code>\u3002</p> </li> <li> <p>badbit: \u5982\u679c\u5728\u8bfb\u5199\u64cd\u4f5c\u4e2d\u53d1\u751f\u9519\u8bef\uff0c\u5982\u4e0d\u53ef\u6062\u590d\u7684\u6d41\u9519\u8bef\u6216\u8bbe\u5907\u6545\u969c\uff0c\u5c06\u8bbe\u7f6e <code>badbit</code>\u3002\u8bbe\u7f6e <code>badbit</code> \u901a\u5e38\u610f\u5473\u7740\u6d41\u4e0d\u80fd\u7ee7\u7eed\u4f7f\u7528\u3002</p> </li> </ol> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528\u51e0\u79cd\u65b9\u6cd5\u6765\u68c0\u67e5\u8fd9\u4e9b\u72b6\u6001\u6807\u5fd7\uff1a * <code>cin.good()</code> \u68c0\u67e5 <code>goodbit</code>\uff0c\u5982\u679c\u6d41\u72b6\u6001\u826f\u597d\uff0c\u5373\u6ca1\u6709\u9519\u8bef\uff0c\u8fd4\u56de <code>true</code>\u3002 * <code>cin.eof()</code> \u68c0\u67e5 <code>eofbit</code>\uff0c\u5982\u679c\u8fbe\u5230\u8f93\u5165\u672b\u5c3e\uff0c\u8fd4\u56de <code>true</code>\u3002 * <code>cin.fail()</code> \u68c0\u67e5 <code>failbit</code> \u6216 <code>badbit</code>\uff0c\u5982\u679c\u4efb\u4e00\u9519\u8bef\u6807\u5fd7\u88ab\u8bbe\u7f6e\uff0c\u8fd4\u56de <code>true</code>\u3002 * <code>cin.bad()</code> \u68c0\u67e5 <code>badbit</code>\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86 <code>badbit</code>\uff0c\u8fd4\u56de <code>true</code>\u3002</p> <p>\u8fd9\u4e9b\u51fd\u6570\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u8f93\u5165\u64cd\u4f5c\u4e4b\u524d\u9a8c\u8bc1\u6d41\u7684\u72b6\u6001\uff0c\u4ece\u800c\u5728\u5904\u7406\u8f93\u5165\u65f6\u505a\u51fa\u9002\u5f53\u7684\u9519\u8bef\u5904\u7406\u3002</p>"},{"location":"L2/io_technique/#getline","title":"getline","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>getline()</code> \u51fd\u6570\u6309\u884c\u8bfb\u5165\u4e00\u6574\u884c\u5b57\u7b26\u4e32\u5230 <code>string</code> \u53d8\u91cf\u4e2d\uff0c\u7528\u6cd5\u4e3a <code>getline(cin, string \u53d8\u91cf\u540d);</code>\u3002<code>getline()</code> \u9ed8\u8ba4\u4ee5\u6362\u884c\u7b26\u4e3a\u5206\u9694\u7b26\u3002</p> <pre><code>string a;\ngetline(cin, a);\ncout &lt;&lt; a;\n\n// \u8f93\u5165 123 abc\n// \u8f93\u51fa 123 abc\n</code></pre> <p>\u8c03\u7528 <code>getline()</code> \u51fd\u6570\u4f1a\u5c06\u8f93\u5165\u7f13\u51b2\u533a\u4e2d\u76f4\u5230\u7b2c\u4e00\u4e2a\u6362\u884c\u7b26\uff08\u5305\u62ec\u6362\u884c\u7b26\uff09\u7684\u5185\u5bb9\u5168\u90e8\u5f39\u51fa\u3002\u5728\u8c03\u7528 <code>getline()</code> \u51fd\u6570\u4e4b\u524d\uff0c\u4e00\u5b9a\u8981\u4fdd\u8bc1\u4e4b\u524d\u7684\u6362\u884c\u7b26\u4e00\u5b9a\u4e0d\u5728\u8f93\u5165\u7f13\u51b2\u533a\u4e2d\u3002</p> <pre><code>int x;\nstring s;\ncin &gt;&gt; x;\ngetline(cin, s);\n\n// \u8f93\u5165 2\uff0c\u56de\u8f66\uff0c\u7a0b\u5e8f\u7acb\u9a6c\u7ed3\u675f\n// \u5e94\u8be5\u5728 cin &gt;&gt; x; \u4e4b\u540e\u7acb\u9a6c\u8ddf\u4e00\u4e2a \n</code></pre>"},{"location":"L2/string/","title":"string \u7684\u6210\u5458\u51fd\u6570","text":""},{"location":"L2/string/#\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528-string","title":"\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 string","text":"<p>\u7528\u5b57\u7b26\u6570\u7ec4\u5b9e\u73b0\u5b57\u7b26\u4e32\u662f\u6709\u8bb8\u591a\u4e0d\u4fbf\u7684\uff1a</p> <ul> <li>\u53d7\u9650\u4e8e\u6570\u7ec4\u7684\u8bed\u6cd5\u8bbe\u8ba1\uff0c\u4e0d\u80fd\u76f4\u63a5\u5bf9\u5b57\u7b26\u4e32\u76f4\u63a5\u8d4b\u503c\u3001\u590d\u5236\u3001\u62fc\u63a5\u3002</li> <li>\u65e0\u6cd5\u76f4\u63a5\u6bd4\u8f83\u5b57\u7b26\u4e32\u7684\u5b57\u5178\u5e8f\u5927\u5c0f\uff0c\u9700\u8981\u8c03\u7528 <code>strcmp</code> \u51fd\u6570\u3002</li> </ul> <p><code>std::string</code> \u662f\u5728\u6807\u51c6\u6a21\u677f\u5e93\uff08Standard Template Library\uff09\u7684\u5934\u6587\u4ef6 <code>&lt;string&gt;</code> \u4e2d\u63d0\u4f9b\u7684\u4e00\u4e2a\u5df2\u5c01\u88c5\u597d\u7684\u5b57\u7b26\u4e32\u7c7b\uff1a - <code>string</code> \u80fd\u52a8\u6001\u5206\u914d\u7a7a\u95f4\uff0c\u65e0\u9700\u9884\u5148\u6307\u660e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 - \u5c06\u4e00\u4e9b\u5e38\u7528\u529f\u80fd\u5c01\u88c5\u4e3a\u6210\u5458\u51fd\u6570\u3002 - \u4f53\u73b0\u4e86 C++ \u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u7279\u6027\u3002</p>"},{"location":"L2/string/#\u5e38\u89c4\u4f7f\u7528","title":"\u5e38\u89c4\u4f7f\u7528","text":"<pre><code>string s, t = \"abc\";  // \u58f0\u660e\uff0c\u521d\u59cb\u5316\ncin &gt;&gt; s;             // \u53ef\u4ee5\u76f4\u63a5\u8f93\u5165\nt[0] = 'z';           // \u652f\u6301\u4e0b\u6807\u8bbf\u95ee\ncout &lt;&lt; a;            // \u76f4\u63a5\u8f93\u51fa\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\n</code></pre> <p><code>string</code> \u652f\u6301\u7c7b\u4f3c\u6570\u7ec4\u7684\u65b9\u5f0f\u901a\u8fc7\u4e0b\u6807\u6765\u5b58\u53d6\u7a7a\u95f4\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5\u8f93\u5165\u8f93\u51fa\u3002\u8f93\u5165\u65f6\u9ed8\u8ba4\u4ee5\u7a7a\u767d\u5b57\u7b26\u4e3a\u5206\u9694\u7b26\u3002</p>"},{"location":"L2/string/#getline","title":"getline()","text":"<p>\u4f7f\u7528 <code>getline(cin, a)</code> \u5c06\u4e00\u6574\u884c\u5b57\u7b26\u4e32\u8bfb\u5165\uff0c\u4ee5\u6362\u884c\u7b26\u4e3a\u5206\u9694\u7b26\u3002</p> <pre><code>string s;\ngetline(cin, s);\n</code></pre>"},{"location":"L2/string/#\u8fd0\u7b97\u7b26\u91cd\u8f7d","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":""},{"location":"L2/string/#\u8d4b\u503c\u8fd0\u7b97\u7b26","title":"\u8d4b\u503c\u8fd0\u7b97\u7b26","text":"<pre><code>string s, t;\nchar a[10] = \"abc\";\ns = \"123\";  // \u8d4b\u503c\nt = s;      // \u8d4b\u503c\nt = a;      // \u5efa\u8bae\u4e0d\u8981\u5c06\u5b57\u7b26\u6570\u7ec4\u7684\u5b57\u7b26\u4e32\u8d4b\u503c\u7ed9 `string` \u53d8\u91cf\n</code></pre>"},{"location":"L2/string/#\u5173\u7cfb\u8fd0\u7b97\u7b26","title":"\u5173\u7cfb\u8fd0\u7b97\u7b26","text":"<p><code>&gt;</code>\u3001<code>&lt;</code>\u3001<code>&gt;=</code>\u3001<code>&lt;=</code>\u3001<code>==</code>\u3001<code>!=</code>\uff0c\u5bf9\u4e24\u4e2a <code>string</code> \u4e4b\u95f4\u8fdb\u884c\u5b57\u5178\u5e8f\u6bd4\u8f83\u3002</p> <pre><code>string x = \"123\", y = \"156\";\ncout &lt;&lt; (x &lt; y) &lt;&lt; '\\n';\nstring a = \"45\", y = \"123\";\ncout &lt;&lt; (a &lt; b) &lt;&lt; '\\n';\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002</p>"},{"location":"L2/string/#\u52a0\u6cd5\u8fd0\u7b97\u7b26","title":"\u52a0\u6cd5\u8fd0\u7b97\u7b26","text":"<p>\u53ef\u4ee5\u62fc\u63a5\u4e24\u4e2a <code>string</code> \u53d8\u91cf\u3002</p> <pre><code>string s = \"123\", t = \"456\";\ncout &lt;&lt; s + t &lt;&lt; '\\n';  // 123456\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O(n)\nt += s;                 // \u65f6\u95f4\u590d\u6742\u5ea6 O(n)\ncout &lt;&lt; t &lt;&lt; '\\n';      // 456123\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5728\u4e00\u4e2a <code>char</code> \u548c <code>string</code> \u4e4b\u95f4\u8fdb\u884c\u62fc\u63a5\u3002</p> <pre><code>string s = \"abc\";\ns += 'z';           // \u65f6\u95f4\u590d\u6742\u5ea6 O(1)\ncout &lt;&lt; s &lt;&lt; '\\n';  // abcz\ncout &lt;&lt; 'z' + s;    // zabcz\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O(n)\n</code></pre>"},{"location":"L2/string/#\u5e38\u7528\u6210\u5458\u51fd\u6570","title":"\u5e38\u7528\u6210\u5458\u51fd\u6570","text":"<p>\u5b9a\u4e49 <code>string s, t</code>\uff0c\u4ee4\u4ed6\u4eec\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5206\u522b\u4e3a \\(n\\) \u548c \\(m\\)\u3002</p> \u6210\u5458\u51fd\u6570 \u529f\u80fd \u65f6\u95f4\u590d\u6742\u5ea6 s.size(), s.length() \u8fd4\u56de s \u7684\u957f\u5ea6 \\(O(1)\\) s.empty() \u8fd4\u56de s \u662f\u5426\u4e3a\u7a7a\u4e32 \\(O(1)\\) s.clear() \u6e05\u7a7a\u5b57\u7b26\u4e32\uff0cs \u53d8\u4e3a\u7a7a\u4e32 \\(O(n)\\) s.push_back(x) \u5c06\u5b57\u7b26\u53d8\u91cf x \u7684\u5185\u5bb9\u6dfb\u52a0\u5230 s \u7684\u5c3e\u90e8 \\(O(1)\\) s.pop_back() \u5220\u9664 s \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26 \\(O(1)\\) s.substr(pos) \u8fd4\u56de\u4ece s[pos] \u5230 s \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u6784\u6210\u7684\u5b50\u4e32 \\(O(len)\\)\uff0c\\(len\\) \u4e3a\u5b50\u4e32\u957f\u5ea6 s.substr(pos, len) \u8fd4\u56de\u4ece s[pos] \u5f00\u59cb\u7684\u957f\u5ea6\u4e3a len \u7684\u5b50\u4e32 \\(O(len)\\)\uff0c\\(len\\) \u4e3a\u5b50\u4e32\u957f\u5ea6 s.insert(pos, t) \u5728 s[pos] \u4e4b\u524d\u63d2\u5165\u5b57\u7b26\u4e32 t \\(O(n + m)\\) s.find(t) \u67e5\u627e t \u5728 s \u4e2d\u4f5c\u4e3a\u5b50\u4e32\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e \u6700\u597d \\(O(m)\\)\uff0c\u6700\u574f \\(O(nm)\\) s.find(t, pos) \u67e5\u627e t \u5728 s[pos] \u53ca\u4e4b\u540e\u4f5c\u4e3a\u5b50\u4e32\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e \u6700\u597d \\(O(m)\\)\uff0c\u6700\u574f \\(O(nm)\\) s.erase(pos, len) \u5220\u9664\u4ece s[pos] \u5f00\u59cb\u7684\u8fde\u7eed\u7684 len \u4e2a\u5b57\u7b26 \\(O(n)\\) s.begin() \u8fd4\u56de\u6307\u5411 s[0] \u7684\u8fed\u4ee3\u5668 \\(O(1)\\) s.end() \u8fd4\u56de\u6307\u5411 s \u5c3e\u90e8\u5360\u4f4d\u7b26\u7684\u8fed\u4ee3\u5668 \\(O(1)\\) <p>\u5bf9\u4e8e <code>.find()</code>\uff0c\u5982\u679c\u67e5\u627e\u4e0d\u5230\u76f8\u5e94\u5b50\u4e32\uff0c\u8fd4\u56de\u5e38\u91cf <code>string::npos</code>\uff0c\u5c06\u5176\u5f3a\u5236\u8f6c\u5316\u4e3a <code>int</code> \u7c7b\u578b\u540e\u7ed3\u679c\u4e3a <code>-1</code>\u3002</p> <p>\u5bf9\u4e8e <code>.substr(pos, len)</code>\uff0c\u5982\u679c\u6240\u6c42\u7684\u5b50\u4e32\u957f\u5ea6\u5df2\u7ecf\u8d85\u51fa\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff0c\u5373 \\(pos + len \\ge n\\)\uff0c\u5219\u5176\u7b49\u540c\u4e8e <code>.substr(pos)</code>\uff1b\u5982\u679c \\(pos \\ge n\\)\uff0c\u62a5 <code>RE</code> \u9519\u8bef\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c<code>.insert()</code>\u3001<code>.erase()</code>\u3001<code>.find()</code>\u3001<code>.substr()</code> \u5728\u4fe1\u606f\u5b66\u4e2d\u4e0d\u5e38\u7528\uff0c\u56e0\u4e3a\u5728\u7ed9\u5b9a\u6570\u636e\u89c4\u6a21\u4e0b\u5f88\u6709\u53ef\u80fd\u8d85\u65f6\uff0c\u4f46\u5fc5\u987b\u638c\u63e1\uff0c\u53ef\u4ee5\u7528\u6765\u5199\u8d85\u65f6\u66b4\u529b\u3002</p>"},{"location":"L2/string/#sort-\u548c-reverse","title":"sort \u548c reverse()","text":"<p>\u5bf9\u4e8e <code>s.begin()</code> \u548c <code>s.end()</code>\uff1b<code>s.end()</code> \u53ef\u4ee5\u5728\u903b\u8f91\u4e0a\u7406\u89e3\u4e3a\u6307\u5411 s \u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8fed\u4ee3\u5668\u3002</p> <p>\u5bf9\u5b57\u7b26\u4e32 <code>s</code> \u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u6392\u5e8f\u53ef\u4ee5\u4f7f\u7528 <code>sort(s.begin(), s.end())</code>\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n \\log n)\\)\u3002</p> <p>\u5c06\u5b57\u7b26\u4e32 <code>s</code> \u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u7ffb\u8f6c\u53ef\u4ee5\u4f7f\u7528 <code>reverse(s.begin(), s.end())</code>\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</p> <p>\u53ef\u4ee5\u5c06 <code>.begin()</code>\u3001<code>.end()</code> \u6682\u65f6\u7406\u89e3\u4e3a C++ \u8bed\u8a00\u4e2d\u7684\u6307\u9488\uff08\u4f46\u4e0d\u5b8c\u5168\u662f\uff09\u3002</p>"},{"location":"L2/two_pointer/","title":"\u53cc\u6307\u9488","text":""},{"location":"L2/two_pointer/#\u4ecb\u7ecd","title":"\u4ecb\u7ecd","text":"<p>\u53cc\u6307\u9488\uff08two pointer\uff09\uff0c\u5728\u56fd\u5185\u53c8\u79f0\u4e3a\u5c3a\u53d6\u6cd5\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4f1a\u5b9a\u4e49\u4e24\u4e2a\u6216\u66f4\u591a\u7684\u6307\u9488\u5728\u5e8f\u5217\u4e0a\u8fdb\u884c\u626b\u63cf\u3002\u6839\u636e\u6307\u9488\u7684\u626b\u63cf\u6a21\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\uff1a\u540c\u5411\u626b\u63cf\u548c\u53cd\u5411\u626b\u63cf\u3002</p> <p>\u53cd\u5411\u626b\u63cf\uff1a\u8bbe\u5b9a\u4e24\u4e2a\u6307\u9488 \\(i, j\\)\uff0c\\(i\\) \u4ece\u5934\u5230\u5c3e\u626b\u63cf\uff0c\\(j\\) \u4ece\u5c3e\u5230\u5934\u626b\u63cf\uff0c\u4e00\u822c\u5728 \\(i, j\\) \u76f8\u9047\u65f6\u505c\u6b62\u3002</p> <p>\u540c\u5411\u626b\u63cf\uff1a\u8bbe\u5b9a\u4e24\u4e2a\u6307\u9488 \\(i, j\\)\uff0c\\(i, j\\) \u90fd\u662f\u4ece\u5934\u5230\u5c3e\u626b\u63cf\uff0c\u4e00\u822c\u5728\u4e24\u4e2a\u6307\u9488\u90fd\uff08\u6216\u5176\u4e2d\u4e4b\u4e00\uff09\u8d8a\u754c\u65f6\u505c\u6b62\u3002</p>"},{"location":"L2/two_pointer/#\u4ece\u6a21\u62df\u7684\u89d2\u5ea6\u770b\u53cc\u6307\u9488","title":"\u4ece\u6a21\u62df\u7684\u89d2\u5ea6\u770b\u53cc\u6307\u9488","text":"<p>\u4ee3\u7801\u7684\u901a\u5e38\u683c\u5f0f\u5982\u4e0b\uff1a</p> <p>!!! \u6a21\u677f\uff08\u6a21\u62df\u89c6\u89d2\uff09</p> <pre><code>=== \"\u540c\u5411\u626b\u63cf\"\n    ```cpp\n    int i = 1, j = 1;\n    while (i &lt;= n &amp;&amp; j &lt;= n) {\n      if () {\n        // ...... \u5e72\u4e00\u4e9b\u4e8b\u60c5\n        i++;  // \u8c03\u6574 i\n      } else {\n        // ...... \u5e72\u4e00\u4e9b\u4e8b\u60c5\n        j--;  // \u8c03\u6574 j\n      }\n    }\n    ```\n\n=== \"\u53cd\u5411\u626b\u63cf\"\n\n    ```cpp\n    int i = 1, j = n;\n    while (i &lt; j) {\n      if () {\n        // ...... \u5e72\u4e00\u4e9b\u4e8b\u60c5\n        i++;  // \u8c03\u6574 i\n      } else {\n        // ...... \u5e72\u4e00\u4e9b\u4e8b\u60c5\n        j--;  // \u8c03\u6574 j\n      }\n    }\n    ```\n</code></pre>"},{"location":"L2/two_pointer/#\u4f18\u5316\u679a\u4e3e","title":"\u4f18\u5316\u679a\u4e3e","text":"<p>\u5f53\u5e8f\u5217\u4e2d\u5177\u6709\u67d0\u79cd\u5355\u8c03\u6027\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u6765\u4f18\u5316\u679a\u4e3e\u8303\u56f4\u3002</p> <p>\u4ee3\u7801\u7684\u683c\u5f0f\u901a\u5e38\u5982\u4e0b\uff1a</p> <p>!!! \u6a21\u677f\uff08\u4f18\u5316\u679a\u4e3e\u89c6\u89d2\uff09</p> <pre><code>=== \"\u540c\u5411\u626b\u63cf\"\n\n    ```cpp\n    for (int i = 1, j = 1; i &lt;= n; i++) {  // \u4ece\u5c0f\u5230\u5927\u679a\u4e3e i\n      for (; \u6ee1\u8db3\u4e00\u4e9b\u6761\u4ef6; j++) {            // \u4ece\u5c0f\u5230\u5927\u8c03\u6574 j\n        // ...... \u5e72\u4e00\u4e9b\u4e8b\u60c5\n      }\n      // ...... \u5e72\u4e00\u4e9b\u4e8b\u60c5\n    }\n    ```\n\n=== \"\u53cd\u5411\u626b\u63cf\"\n\n    ```cpp\n    for (int i = 1, j = n; i &lt; j; i++) {  // \u4ece\u5c0f\u5230\u5927\u679a\u4e3e i\n      for (; \u6ee1\u8db3\u4e00\u4e9b\u6761\u4ef6; j--) {           // \u4ece\u5927\u5230\u5c0f\u8c03\u6574 j\n        // ...... \u5e72\u4e00\u4e9b\u4e8b\u60c5\n      }\n      // ...... \u5e72\u4e00\u4e9b\u4e8b\u60c5\n    }\n    ```\n</code></pre> <p>\u5173\u4e8e\u53cc\u6307\u9488\u662f\u5982\u4f55\u7528\u4e8e\u679a\u4e3e\u7684\uff0c\u8bf7\u5b66\u4e60\u4ee5\u4e0b\u4f8b\u9898\u3002</p>"},{"location":"dp/matrix_dp/","title":"\u77e9\u9635 DP","text":"<p>\u987e\u540d\u601d\u4e49\uff0c\u5728\u77e9\u9635\u3001\u7f51\u683c\u56fe\u4e0a\u505a\u7684 DP\u3002</p> <p>\u5bf9\u4e8e\u77e9\u9635\u7c7b\u7684 DP\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u7f51\u683c\u56fe\u641c\u7d22\u7684\u65b9\u5f0f\u627e\u5230\u72b6\u6001\u548c\u8f6c\u79fb\u3002</p>"},{"location":"dp/matrix_dp/#atcoder-dp_h","title":"atcoder dp_h","text":"<p>\u72b6\u6001\uff1a\\(dp(i, j)\\) \u8868\u793a\u4ece \\((1, 1)\\) \u8d70\u5230 \\((i, j)\\) \u7684\u65b9\u6848\u6570\u3002 \u8f6c\u79fb\uff1a\u5bf9\u4e8e\u4e0d\u4e3a\u969c\u788d\u7684\u683c\u5b50 \\((i, j)\\)\uff0c\\(dp_{i, j} = dp_{i - 1, j} + dp_{i, j - 1}\\)\u3002 \u62d3\u6251\u5e8f\uff1a\\(i\\) \u4ece\u5c0f\u5230\u5927\uff08\u6216\u8005 \\(j\\) \u4ece\u5c0f\u5230\u5927\uff09\u3002</p> <p>\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a \\(O(NM)\\)\u3002</p> \u4ee3\u7801 <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MAXN = 1e3 + 1, MOD = 1e9 + 7;\n\nint n, m, dp[MAXN][MAXN];\nchar c[MAXN][MAXN];\n\nint main() {\n  cin &gt;&gt; n &gt;&gt; m;\n  for (int i = 1; i &lt;= n; i++) {\n    for (int j = 1; j &lt;= m; j++) {\n      cin &gt;&gt; c[i][j];\n    }\n  }\n  dp[1][1] = 1;\n  for (int i = 1; i &lt;= n; i++) {\n    for (int j = 1; j &lt;= m; j++) {\n      if ((i + j &gt; 2 &amp;&amp; c[i][j] != '#')) {\n        dp[i][j] = (dp[i - 1][j] + dp[i][j - 1]) % MOD;\n      }\n    }\n  }\n  cout &lt;&lt; dp[n][m];\n  return 0;\n}\n</code></pre> <p>\u6ce8\u610f\u4f7f\u7528\u6536\u96c6\u578b\u5b9e\u73b0\u77e9\u9635\u7c7b DP \u65f6\uff0c\u9700\u8981\u4fdd\u8bc1\u88ab\u6536\u96c6\u7684\u72b6\u6001\u5df2\u88ab\u6c42\u89e3\u8fc7\u3002</p>"},{"location":"dp/matrix_dp/#\u6d1b\u8c37-p1006","title":"\u6d1b\u8c37 P1006","text":"\u5f62\u5f0f\u5316\u9898\u610f <p>\u7ed9\u5b9a\u4e00\u4e2a \\(n \\times m\\) \u7684\u6570\u5b57\u77e9\u9635\uff0c\u4f60\u9700\u8981\u627e\u5230\u4e00\u6761\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\u7684\u8def\u5f84\uff08\u53ea\u80fd\u5411\u53f3\u5411\u4e0b\u8d70\uff09\u548c\u4e00\u6761\u4ece\u53f3\u4e0b\u5230\u5de6\u4e0a\u7684\u8def\u5f84\uff08\u53ea\u80fd\u5411\u4e0a\u5411\u5de6\u8d70\uff09\uff0c\u5e76\u4e14\u4e24\u6761\u8def\u5f84\u4e0d\u80fd\u76f8\u4ea4\u3002\u8bf7\u4f60\u6c42\u51fa\u7ecf\u8fc7\u7684\u6570\u5b57\u7684\u6700\u5927\u503c\u3002</p> \u63d0\u793a <p>\u628a\u4e24\u6761\u8def\u5f84\u90fd\u770b\u505a\u662f\u5de6\u4e0a\u5230\u53f3\u4e0b\u89d2\u7684\u8def\u5f84\u3002\u7136\u540e\u5c1d\u8bd5\u5b9e\u73b0\u641c\u7d22\uff0c\u5982\u4f55\u5b9e\u73b0\u8f6c\u79fb\uff0c\u5e76\u4e14\u4fdd\u8bc1\u8def\u5f84\u4e0d\u76f8\u4ea4\uff1f</p> \u72b6\u6001\u548c\u8f6c\u79fb <p>\\(dp{x1, y1, x2, y2}\\) \u8868\u793a\u4e24\u6761\u8def\u5f84\u4ece\u5de6\u4e0a\u89d2\u5206\u522b\u540c\u65f6\u8d70\u5230 \\((x1, y1)\\) \u548c \\((x2, y2)\\) \u65f6\u7684\u6700\u5927\u6570\u5b57\u548c\u3002\u540c\u65f6\u610f\u5473\u7740 \\(x1 + y1 = x2 + y2\\)\u3002\u6ce8\u610f\u8def\u5f84\u4e0d\u80fd\u76f8\u4ea4\uff0c\u56e0\u6b64\u4e0d\u80fd\u5b58\u5728 \\(x1 = x2, y1 = y2\\) \u7684\u60c5\u51b5\u3002</p> <p>\u8f6c\u79fb\u5c31\u679a\u4e3e \\((x1, y1)\\) \u548c \\((x2, y2)\\) \u884c\u8d70\u7684\u60c5\u51b5\uff0c\u4e00\u5171\u56db\u79cd\u3002</p> <p>\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a \\(O(n^2m^2)\\)\u3002</p> \u4f18\u5316 <p>\u5df2\u77e5 \\(x1, y1, x2\\)\uff0c\u53ef\u4ee5\u63a8\u51fa \\(y2\\)\uff0c\u56e0\u6b64\u53ef\u4ee5\u964d\u4f4e\u4e00\u4e2a\u7ef4\u5ea6\u3002\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a \\(O(n^2m)\\) \u6216\u8005 \\(O(nm^2)\\)\u3002</p> <p>\u5f53\u4f60\u65e0\u6cd5\u5904\u7406\u597d\u8f6c\u79fb\u7684\u7ec6\u8282\u65f6\uff0c\u4e0d\u59a8\u7528 <code>\u641c\u7d22 -&gt; \u8bb0\u5fc6\u5316\u641c\u7d22</code> \u7684\u65b9\u5f0f\u5b8c\u6210\u6b64\u9898\u3002</p>"},{"location":"dp/memorization/","title":"\u8bb0\u5fc6\u5316","text":"<p>\u8bb0\u5fc6\u5316\u641c\u7d22\u662f\u4e00\u79cd\u901a\u8fc7\u8bb0\u5f55\u5df2\u7ecf\u904d\u5386\u8fc7\u7684\u72b6\u6001\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u907f\u514d\u5bf9\u540c\u4e00\u72b6\u6001\u91cd\u590d\u904d\u5386\u7684\u641c\u7d22\u5b9e\u73b0\u65b9\u5f0f\u3002</p> <p>\u56e0\u4e3a\u8bb0\u5fc6\u5316\u641c\u7d22\u786e\u4fdd\u4e86\u6bcf\u4e2a\u72b6\u6001\u53ea\u8bbf\u95ee\u4e00\u6b21\uff0c\u5b83\u4e5f\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u52a8\u6001\u89c4\u5212\u5b9e\u73b0\u65b9\u5f0f\u3002</p>"},{"location":"dp/memorization/#\u6d1b\u8c37-p1434-\u6ed1\u96ea","title":"\u6d1b\u8c37 P1434 \u6ed1\u96ea","text":"\u5f62\u5f0f\u5316\u9898\u610f <p>\u7ed9\u5b9a \\(N \\times M\\) \u5927\u5c0f\u7684\u6570\u5b57\u77e9\u9635\uff0c\u4f60\u53ef\u4ee5\u9009\u5b9a\u4e00\u4e2a\u683c\u5b50\u51fa\u53d1\uff0c\u6bcf\u6b21\u8d70\u5230\u4e00\u4e2a\u4e0a\u4e0b\u5de6\u53f3\u76f8\u90bb\u7684\u6570\u5b57\u6bd4\u5f53\u524d\u683c\u5b50\u5c0f\u7684\u683c\u5b50\u4e0a\u3002\u8bf7\u6c42\u51fa\u884c\u8d70\u7684\u6700\u957f\u7684\u8def\u5f84\u3002</p>"},{"location":"dp/memorization/#\u6734\u7d20-dfs","title":"\u6734\u7d20 DFS","text":"<p>\u5199\u641c\u7d22\uff0c\u4e0d\u4e22\u4eba\u3002</p> <p>\u5728\u641c\u7d22\u65f6\u8bb0\u5f55\u4ee5\u4e0b\u51e0\u4e2a\u72b6\u6001\uff1a\u5f53\u524d\u683c\u5b50\u5750\u6807\uff0c\u884c\u8d70\u7684\u957f\u5ea6\uff0c\u6570\u5b57\u77e9\u9635\u3002</p> Dfs <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int N = 110;\nconst int dx[5] = {0, 0, 1, -1};\nconst int dy[5] = {1, -1, 0, 0};\n\nint r, c, ans, a[N][N];\n\nvoid S(int x, int y, int s){\n  if (x &lt; 1 || x &gt; r || y &lt; 1 || y &gt; c){\n    return ;\n  }\n  ans = max(ans, s);\n  for (int i = 0; i &lt; 4; i++){\n    if (a[x + dx[i]][y + dy[i]] &lt; a[x][y]){\n      S(x + dx[i], y + dy[i], s + 1);\n    }\n  }\n}\n\nint main(){\n  cin &gt;&gt; r &gt;&gt; c;\n  for (int i = 1; i &lt;= r; i++){\n    for (int j = 1; j &lt;= c; j++){\n      cin &gt;&gt; a[i][j];\n    }\n  }\n  for (int i = 1; i &lt;= r; i++){\n    for (int j = 1; j &lt;= c; j++){\n      S(i, j, 1);\n    }\n  }\n  cout &lt;&lt; ans;\n  return 0;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u6307\u6570\u7ea7\u522b\uff0c\u663e\u7136\u4e0d\u80fd\u901a\u8fc7\u3002</p>"},{"location":"dp/memorization/#\u8bb0\u5fc6\u5316_1","title":"\u8bb0\u5fc6\u5316","text":"<p>\u6211\u4eec\u53d1\u73b0\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u67d0\u4e9b\u72b6\u6001\uff08\u683c\u5b50\uff09\u4f1a\u91cd\u590d\u7ecf\u8fc7\u591a\u6b21\uff0c\u4ece\u800c\u505a\u4e86\u8bb8\u591a\u65e0\u7528\u7684\u641c\u7d22\u3002\u4e0d\u59a8\u5c1d\u8bd5\u52a0\u5165\u8bb0\u5fc6\u5316\u6570\u7ec4\uff0c\u53d1\u73b0 AC\u3002</p> \u8bb0\u5fc6\u5316\u4ee3\u7801 <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int MAXN = 1010;\nconst int dx[4] = {0, 0, 1, -1};\nconst int dy[4] = {1, -1, 0, 0};\n\nint n, m, a[MAXN][MAXN], dp[MAXN][MAXN], ans;\n\nint S(int x, int y) {\n  if (dp[x][y] != -1) {\n    return dp[x][y];\n  }\n  dp[x][y] = 1;\n  for (int i = 0; i &lt; 4; i++) {\n    int nx = x + dx[i], ny = y + dy[i];\n    if (nx &gt;= 1 &amp;&amp; nx &lt;= n &amp;&amp; ny &gt;= 1 &amp;&amp; ny &lt;= m &amp;&amp; a[nx][ny] &gt; a[x][y]) {\n      dp[x][y] = max(dp[x][y], S(nx, ny) + 1);\n    }\n  }\n  return dp[x][y];\n}\n\nint main() {\n  cin &gt;&gt; n &gt;&gt; m;\n  for (int i = 1; i &lt;= n; i++) {\n    for (int j = 1; j &lt;= m; j++) {\n      cin &gt;&gt; a[i][j];\n      dp[i][j] = -1;\n    }\n  }\n  for (int i = 1; i &lt;= n; i++) {\n    for (int j = 1; j &lt;= m; j++) {\n      ans = max(ans, S(i, j));\n    }\n  }\n  cout &lt;&lt; ans;\n  return 0;\n}\n</code></pre> \u53ef\u4ee5\u4f7f\u7528\u8bb0\u5fc6\u5316\u7684\u539f\u56e0 <p>\u6b64\u9898\u7684\u72b6\u6001\u8f6c\u79fb\u662f\u5b58\u5728\u62d3\u6251\u5e8f\u7684\uff1a\u7ecf\u8fc7\u7684\u683c\u5b50\u7684\u6570\u5b57\u4ece\u5927\u5230\u5c0f\u3002</p> <p>\u4f60\u5f53\u7136\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u7528\u5faa\u73af\u7684\u65b9\u5f0f\u5199 dp\uff0c\u5c31\u662f\u6bd4\u8f83\u9ebb\u70e6\uff0c\u9700\u8981\u5904\u7406\u597d\u62d3\u6251\u5e8f\u548c\u4e00\u4e9b\u8fb9\u754c\u95ee\u9898\u3002</p> Dp <pre><code>/*\n  \u72b6\u6001\u8868\u793a\n    (x, y, l) \u8868\u793a\u4ee5 (x, y) \u7ed3\u5c3e\u7684\u6ed1\u5761\u957f\u5ea6\u4e3a l\n    (x, y) \u76f8\u540c\u65f6\uff0c\u6700\u5927\u5316 l\uff0cdp[x][y] \u8868\u793a\u4ee5 (x, y) \u7ed3\u5c3e\u7684\u6700\u957f\u6ed1\u5761\u957f\u5ea6\n  \u72b6\u6001\u8f6c\u79fb\n    dp[x][y] = max(dp[x'][y'] + 1)\uff0c\u5176\u4e2d (x', y') \u4e0e (x, y) \u76f8\u90bb\uff0c\u5e76\u4e14 a[x'][y'] &gt; a[x][y]\n  \u521d\u59cb\u72b6\u6001\n    dp[x][y] = 1\n  \u62d3\u6251\u5e8f\n    \u62d3\u6251\u5e8f\u4e0d\u660e\u663e\uff0c\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\n\n  \u72b6\u6001\u8868\u793a\n    \u7531\u4e8e\u6ed1\u5761\u662f\u4e0b\u964d\u5e8f\u5217\uff0c\u91cd\u65b0\u7ed9\u683c\u5b50\u6807\u53f7\uff0c\u5e76\u8bb0\u5f55\u6bcf\u4e2a\u683c\u5b50\u7684\u5750\u6807\u3001\u6570\u503c\uff0c\u5e76\u6309\u6570\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n    (i, l) \u8868\u793a\u4ee5\u7b2c i \u4e2a\u683c\u5b50\u7ed3\u5c3e\u7684\u6ed1\u5761\u957f\u5ea6\u4e3a l\n    dp[i] \u8868\u793a\u4ee5\u7b2c i \u4e2a\u683c\u5b50\u7ed3\u5c3e\u7684\u6700\u957f\u6ed1\u5761\u957f\u5ea6\n  \u72b6\u6001\u8f6c\u79fb\n    dp[i] = max(dp[j]) + 1\uff0c\u5176\u4e2d j &lt; i\uff08\u4fdd\u8bc1\u4e86\u9ad8\u5ea6\u4e0b\u964d\uff09\u5e76\u4e14 j \u548c i \u7684\u5750\u6807\u76f8\u90bb\n  \u521d\u59cb\u72b6\u6001\n    dp[i] = 1;\n  \u62d3\u6251\u5e8f\n    \u7531\u4e8e\u5df2\u7ecf\u6392\u5e8f\uff0c\u968f\u7740 i \u7684\u589e\u5927\u9ad8\u5ea6\u5fc5\u7136\u4e0b\u964d\uff0c\u6309 i \u9012\u589e\u7684\u65b9\u5411\u8f6c\u79fb\n*/\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int N = 1001;\nconst int dx[] = {0, 0, 1, -1};\nconst int dy[] = {1, -1, 0, 0};\n\nstruct Node{\n  int x, y, v;  // \u5750\u6807\u548c\u6570\u503c\n};\n\nbool cmp(const Node &amp;i, const Node &amp;j){  // \u6309\u7167\u6570\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n  return i.v &gt; j.v;\n}\n\nint n, m, c;\nNode a[N * N];\nint dp[N * N];\n\nbool Check(const Node &amp;a, const Node &amp;b){\n  for (int i = 0; i &lt; 4; i++){\n    if (a.x + dx[i] == b.x &amp;&amp; a.y + dy[i] == b.y){\n      return 1;\n    }\n  }\n  return 0;\n}\n\nint main(){\n  cin &gt;&gt; n &gt;&gt; m;\n  for (int i = 1; i &lt;= n; i++){\n    for (int j = 1; j &lt;= m; j++){\n      int x;\n      cin &gt;&gt; x;\n      a[++c] = {i, j, x};\n    }\n  }\n  sort(a + 1, a + c + 1, cmp);\n  int ans = 0;\n  for (int i = 1; i &lt;= c; i++){  // \u6309\u6570\u503c\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\n    dp[i] = 1;\n    for (int j = 1; j &lt; i &amp;&amp; a[j].v &gt; a[i].v; j++){  // \u679a\u4e3e\u6570\u503c\u5927\u7684\u70b9\n      if (Check(a[i], a[j])){  // \u5982\u679c\u4e24\u4e2a\u70b9\u76f8\u90bb\n        dp[i] = max(dp[i], dp[j] + 1);\n      }\n    }\n    ans = max(ans, dp[i]);\n  }\n  cout &lt;&lt; ans &lt;&lt; endl;\n  return 0;\n}\n</code></pre>"},{"location":"dp/memorization/#\u4e0e\u4f7f\u7528\u5faa\u73af\u7684\u9012\u63a8\u7684\u533a\u522b","title":"\u4e0e\u4f7f\u7528\u5faa\u73af\u7684\u9012\u63a8\u7684\u533a\u522b","text":"<p>\u53ef\u4ee5\u53d1\u73b0\u8f6c\u79fb\u5f62\u5f0f\u4e0a\uff0c\u8bb0\u5fc6\u5316\u641c\u7d22\u548c\u6536\u96c6\u578b\u9012\u63a8\u662f\u5f88\u76f8\u4f3c\u7684\u3002\u56e0\u4e3a\u8bb0\u5fc6\u5316\u641c\u7d22\u548c\u6536\u96c6\u578b\u9012\u63a8\u672c\u8d28\u4e0a\u53ea\u662f dp \u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u6cd5\u3002</p> <p>\u5faa\u73af dp \u9700\u8981\u5148\u6307\u660e\u62d3\u6251\u5e8f\u4fdd\u8bc1\u6bcf\u4e2a\u72b6\u6001\u53ea\u6c42\u89e3\u4e00\u6b21\uff0c\u800c\u8bb0\u5fc6\u5316\u641c\u7d22\u4e0d\u9700\u8981\u62d3\u6251\u5e8f\uff08\u53ea\u8981\u9898\u76ee\u7684\u9650\u5236\u6761\u4ef6\u4fdd\u8bc1\u6709\u62d3\u6251\u5e8f\uff09\uff0c\u901a\u8fc7\u7ed9\u72b6\u6001\u6253\u6807\u8bb0\u7684\u65b9\u5f0f\u5b9e\u73b0\u6bcf\u4e2a\u72b6\u6001\u6c42\u89e3\u4e00\u6b21\u3002</p>"},{"location":"dp/memorization/#\u6280\u5de7","title":"\u6280\u5de7","text":"<p>\u5f53\u4f60\u53d1\u73b0\u4e00\u9053\u52a8\u6001\u89c4\u5212\u9898\u76ee\u7684\u62d3\u6251\u5e8f\u6709\u70b9\u96be\u627e\u5230\uff0c\u6216\u8005\u8bf4\u9898\u76ee\u7684\u8f6c\u79fb\u8fc7\u7a0b\u6bd4\u8f83\u590d\u6742\uff0c\u5bfc\u81f4\u4f60\u7528\u641c\u7d22\u6216\u8005\u5206\u6cbb\u6765\u7f16\u5199\u4ee3\u7801\u65f6\uff0c\u8bb0\u5fc6\u5316\u662f\u4e00\u4e2a\u597d\u7684\u4f18\u5316\u7b56\u7565\u3002</p> <p>Warning</p> <p>\u5e73\u65f6\u5199\u52a8\u89c4\u9898\u65f6\u8fd8\u662f\u5c3d\u91cf\u5199\u5faa\u73af\u7684 dp\uff0c\u53bb\u5206\u6790\u72b6\u6001\u8f6c\u79fb\u62d3\u6251\u5e8f\uff0c\u5728\u5e94\u8bd5\u4e2d\u5b9e\u5728\u5199\u4e0d\u51fa\u5faa\u73af dp \u624d\u8003\u8651\u8bb0\u5fc6\u5316\u3002</p> <p>\u4e00\u822c\u5199\u8bb0\u5fc6\u5316\u7684\u6d41\u7a0b\u4e3a\uff1a</p> <ol> <li>\u5199\u51fa\u66b4\u641c dfs</li> <li>\u5c06 dfs \u6539\u6210\u6ca1\u6709\u3010\u5916\u90e8\u53d8\u91cf\u3011\u5bf9\u641c\u7d22\u8fc7\u7a0b\u9020\u6210\u3010\u5168\u5c40\u5f71\u54cd\u3011\u7684\u4ee3\u7801</li> <li>\u6dfb\u52a0\u8bb0\u5fc6\u5316\u6570\u7ec4</li> </ol> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u8bb0\u5fc6\u5316\u641c\u7d22\u6709\u4ee5\u4e0b\u51e0\u4e2a\u7279\u70b9\uff1a</p> <ol> <li>\u7531\u4e8e\u9012\u5f52\u7684\u5b9e\u73b0\u5f62\u5f0f\uff0c\u5e38\u6570\u65f6\u95f4\u5f00\u9500\u6bd4\u8f83\u5927\uff0c\u5e76\u4e14\u96be\u4ee5\u4f7f\u7528\u5176\u4ed6\u4f18\u5316\u3002</li> <li>\u5bf9\u4e8e\u4e00\u4e9b\u6bd4\u8f83\u590d\u6742\u7684 DP \u9898\u76ee\uff0c\u6bd4\u5faa\u73af DP \u80fd\u66f4\u597d\u7684\u5904\u7406\u8fb9\u754c\u60c5\u51b5\u3002</li> <li>\u5faa\u73af DP \u53ef\u80fd\u9700\u8981\u904d\u5386\u62d3\u6251\u5e8f\u4e2d\u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\uff0c\u800c\u8bb0\u5fc6\u5316\u641c\u7d22\u4e0d\u4f1a\u5bf9\u4e00\u4e9b\u65e0\u6548\u3001\u975e\u6cd5\u72b6\u6001\u8fdb\u884c\u641c\u7d22\u3002\uff08\u5728\u4e00\u4e9b\u9898\u76ee\u4e2d\u5f88\u6709\u4ef7\u503c\uff0c\u4f8b\u5982 [NOIP2018 \u666e\u53ca\u7ec4] \u6446\u6e21\u8f66\uff09</li> </ol>"},{"location":"dp/memorization/#\u4e00\u4e9b\u4e60\u9898","title":"\u4e00\u4e9b\u4e60\u9898","text":"<p>DAG \u4e0a\u6700\u957f\u8def</p> <p>[NOIP2018 \u666e\u53ca\u7ec4] \u6446\u6e21\u8f66</p>"},{"location":"dp/multi_sequence_dp/","title":"\u591a\u5e8f\u5217 dp","text":""},{"location":"dp/multi_sequence_dp/#\u53cc\u5e8f\u5217\u95ee\u9898","title":"\u53cc\u5e8f\u5217\u95ee\u9898","text":""},{"location":"dp/multi_sequence_dp/#atcoder-dp_f","title":"atcoder dp_f","text":"<p>\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\uff0clongest common subsequence\uff0c\u7b80\u79f0 lcs\u3002</p> <p>\u9898\u610f</p> <p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 \\(s, t\\)\uff0c\u6c42\u51fa\u5b83\u4eec\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217 \\(x\\)\uff0c\u5373 \\(x\\) \u65e2\u662f \\(s\\) \u7684\u5b50\u5e8f\u5217\u53c8\u662f \\(t\\) \u7684\u5b50\u5e8f\u5217\u3002\\(1 \\le |s|, |t| \\le 3000\\)\u3002</p> <p>\u53ef\u4ee5\u8003\u8651\u5982\u4f55\u6784\u9020\u516c\u5171\u7684\u5b50\u5e8f\u5217\u3002</p> \u4e00\u4e9b\u53ef\u4f9b\u53c2\u8003\u7684\u66b4\u641c DFS1DFS2DFS3 <pre><code>// \u6c42\u51fa s \u548c t \u7684\u5b50\u5e8f\u5217\uff0c\u518d\u5224\u516c\u5171\n#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nstring s, t;\nint n, m;\nset&lt;string&gt; res_s, res_t;\n\nvoid dfs(const string &amp;s, set&lt;string&gt; &amp;S, int last, string ans) {\n  S.insert(ans);\n  for (int i = last + 1; i &lt; s.size(); i++) {\n    dfs(s, S, i, ans + s[i]);\n  }\n}\n\nint main() {\n  cin &gt;&gt; s &gt;&gt; t;\n  dfs(s, res_s, -1, \"\");\n  dfs(t, res_t, -1, \"\");\n  for (auto s : res_s) {\n    if (res_t.count(s)) {  // \u627e\u5230\u516c\u5171\u5b50\u5e8f\u5217\n      cout &lt;&lt; s &lt;&lt; '\\n';\n    }\n  }\n  return 0;\n}\n</code></pre> <pre><code>// \u5148\u6c42\u51fa s \u7684\u5b50\u5e8f\u5217\uff0c\u518d\u5224\u8be5\u5b50\u5e8f\u5217\u662f\u5426\u4e3a t \u7684\u5b50\u5e8f\u5217\n#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nset&lt;string&gt; res_s;\nstring s, t;\n\n// \u5224\u65ad a \u662f b \u7684\u5b50\u5e8f\u5217\nbool Check(const string &amp;a, const string &amp;b) {\n  int n = a.size(), m = b.size(), i, j;\n  for (i = 0, j = 0; i &lt; n &amp;&amp; j &lt; m; j++) {\n    i += a[i] == b[j];\n  }\n  return i == n;\n}\n\nvoid dfs(const string &amp;s, set&lt;string&gt; &amp;S, int last, string ans) {\n  S.insert(ans);\n  for (int i = last + 1; i &lt; s.size(); i++) {\n    string str = ans + s[i];\n    if (Check(str, t)) {\n      dfs(s, S, i, ans + s[i]);\n    }\n  }\n}\n\nint main() {\n  cin &gt;&gt; s &gt;&gt; t;\n  dfs(s, res_s, -1, \"\");\n  for (auto s : res_s) {\n    if (Check(s, t)) {\n    }\n  }\n  return 0;\n}\n</code></pre> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nset&lt;string&gt; res, _res;\nstring s, t;\n\n// \u4ee5 s[last_s] \u548c t[last_t] \u7ed3\u5c3e\u7684\u516c\u5171\u5b50\u5e8f\u5217\u4e3a ans\nvoid dfs(int last_s, int last_t, string ans) {\n  res.insert(ans);\n  for (int i = last_s + 1; i &lt; s.size(); i++) {\n    for (int j = last_t + 1; j &lt; t.size(); j++) {\n      if (s[i] == t[j]) {\n        dfs(i, j, ans + s[i]);\n        break;\n      }\n    }\n  }\n}\n\n// s[1] ~ s[i] \u548c t[1] ~ t[j] \u7684\u516c\u5171\u5b50\u5e8f\u5217\u4e3a ans\nvoid DFS(int i, int j, string ans) {\n  _res.insert(ans);\n  if (i == s.size() || j == t.size()) {\n    return;\n  }\n  if (s[i] == t[j]) {\n    DFS(i + 1, j + 1, ans + s[i]);\n  }\n  DFS(i + 1, j, ans), DFS(i, j + 1, ans);\n}\n\nint main() {\n  freopen(\"1.out\", \"w\", stdout);\n  cin &gt;&gt; s &gt;&gt; t;\n  dfs(-1, -1, \"\");\n  for (auto str : res) {\n    cout &lt;&lt; str &lt;&lt; '\\n';\n  }\n  cout &lt;&lt; '\\n';\n  DFS(0, 0, \"\");\n  for (auto str : _res) {\n    cout &lt;&lt; str &lt;&lt; '\\n';\n  }\n  return 0;\n}\n</code></pre> \u6784\u9020\u8fc7\u7a0b <p>\u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u6307\u9488 \\(i, j\\)\uff0c\u4e00\u5f00\u59cb\u5b83\u4eec\u4e3a \\(1\\)\uff0c\u7528\u4e8e\u6307\u5411 \\(s\\) \u548c \\(t\\) \u7684\u5b57\u7b26\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u4e09\u6761\u89c4\u5219\u6784\u9020\u516c\u5171\u5b50\u5e8f\u5217\uff1a</p> <ol> <li>\\(s_i\\) \u4e0d\u5728\u516c\u5171\u5b50\u5e8f\u5217\u4e2d\uff0c\u6b64\u65f6 \\(i\\) \u52a0 \\(1\\)\uff08\\(i \\le |s|\\)\uff09\u3002</li> <li>\\(t_j\\) \u4e0d\u5728\u516c\u5171\u5b50\u5e8f\u5217\u4e2d\uff0c\u6b64\u65f6 \\(j\\) \u52a0 \\(1\\)\uff08\\(j \\le |t|\\)\uff09\u3002</li> <li>\\(s_i = t_j\\) \u65f6\uff0c\u53ef\u4ee5\u5c06 \\(s_i\\)\uff08\u6216 \\(t_j\\)\uff09\u52a0\u5165\u5230\u7ed3\u679c\u7684\u516c\u5171\u5b50\u5e8f\u5217\u4e2d\uff08\\(i \\le |s|, j \\le |t|\\)\uff09\u3002</li> </ol> <p>\u5c1d\u8bd5\u7528\u641c\u7d22\u5b9e\u73b0\u8be5\u6784\u9020\u8fc7\u7a0b\u3002</p> \u72b6\u6001\u548c\u8f6c\u79fb <p>\u5b9a\u4e49 \\(dp_{i, j}\\) \u8868\u793a \\(s_1 s_2 \\dots s_i\\) \u548c \\(t_1 t_2 \\dots t_j\\) \u7684\u516c\u5171\u5b50\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\u3002</p> <p>\u6839\u636e\u4e0a\u8ff0\u6784\u9020\u8fc7\u7a0b\uff0c\u663e\u7136\u6709 \\(dp_{i, j} = \\max(dp_{i - 1, j}, dp_{i, j - 1}, dp_{i - 1, j - 1} + [s_i == t_j])\\)\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(|s||t|)\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(|s||t|)\\)\u3002</p> \u65b9\u6848\u8f93\u51fa <p>\u4ece\u76ee\u6807\u72b6\u6001 \\(dp_{|s|, |t|}\\) \u5f00\u59cb\uff0c\u5012\u63a8\u5bfb\u627e\u5728\u6700\u4f18\u7684\u8f6c\u79fb\u8def\u5f84\u4e0a\u7684\u72b6\u6001\uff0c\u7136\u540e\u6784\u9020\u5b57\u7b26\u4e32\u3002</p> \u4ee3\u7801 <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MAXN = 3e3 + 1;\n\nstring s, t;\nint dp[MAXN][MAXN];\n\nint main() {\n  cin &gt;&gt; s &gt;&gt; t;\n  int n = s.size(), m = t.size();\n  s = '#' + s, t = '#' + t;\n  for (int i = 1; i &lt;= n; i++) {\n    for (int j = 1; j &lt;= m; j++) {\n      dp[i][j] = max({dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1] + (s[i] == t[j])});\n    }\n  }\n  string ans;\n  for (int i = n, j = m; i &gt;= 1 &amp;&amp; j &gt;= 1;) {\n    if (dp[i][j] == dp[i - 1][j]) {\n      i--;\n    } else if (dp[i][j] == dp[i][j - 1]) {\n      j--;\n    } else {\n      ans += s[i];\n      i--, j--;\n    }\n  }\n  reverse(ans.begin(), ans.end());\n  cout &lt;&lt; ans &lt;&lt; '\\n';\n  return 0;\n}\n</code></pre>"},{"location":"dp/multi_sequence_dp/#cses-1639","title":"CSES 1639","text":"<p>\u7f16\u8f91\u8ddd\u79bb\u3002</p> <p>\u9898\u610f</p> <p>\u7ed9\u5b9a\u5b57\u7b26\u4e32 \\(s\\) \u548c \\(t\\)\uff0c\u4f60\u53ef\u4ee5\u5728\u5b57\u7b26\u4e32 \\(s\\) \u4e2d\u63d2\u5165\u3001\u5220\u9664\u3001\u4fee\u6539\u5b57\u7b26\uff0c\u6c42\u51fa\u4f7f\u5f97 \\(s\\) \u53d8\u4e3a \\(t\\) \u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002\\(1 \\le |s|, |t| \\le 5000\\)\u3002</p> <p>\u540c\u6837\u5730\uff0c\u8003\u8651\u5982\u4f55\u6784\u9020\u4fee\u6539\u65b9\u6848\u3002\u6b63\u7740\u6784\u9020\u65b9\u6848\u6709\u70b9\u56f0\u96be\uff0c\u6211\u4eec\u4e0d\u59a8\u5229\u7528\u5206\u6cbb\u7684\u601d\u60f3\u5c06\u5927\u95ee\u9898\u5206\u89e3\u6210\u5c0f\u95ee\u9898\u8fdb\u884c\u6c42\u89e3\u3002</p> <p>\u4ee4 \\(F(i, j)\\) \u8868\u793a\u5c06 \\(s_1 s_2 \\dots, s_i\\) \u53d8\u4e3a \\(t_1 t_2 \\dots t_j\\) \u7684\u6700\u5c11\u4fee\u6539\u6b21\u6570\uff0c\u5219\u539f\u95ee\u9898\u4e3a \\(F(|s|, |t|)\\)\u3002</p> \u5206\u6cbb\u8fc7\u7a0b <p>\u5bf9\u4e8e\u95ee\u9898 \\(F(i, j)\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u505a\u5982\u4e0b\u5206\u89e3\uff1a</p> <ol> <li>\u53ef\u4ee5\u8003\u8651\u5728\u5b57\u7b26 \\(s_i\\) \u4e4b\u540e\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26 \\(t_j\\)\uff0c\u5c06\u95ee\u9898\u5206\u89e3\u4e3a \\(F(i, j - 1)\\)\u3002</li> <li>\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u5c06\u5b57\u7b26 \\(s_i\\) \u76f4\u63a5\u5220\u6389\uff0c\u5c06\u95ee\u9898\u5206\u89e3\u4e3a \\(F(i - 1, j)\\)\u3002</li> <li>\u53ef\u4ee5\u8003\u8651\u5c06\u5b57\u7b26 \\(s_i\\) \u4fee\u6539\u4e3a \\(t_j\\)\uff0c\u5c06\u95ee\u9898\u5206\u89e3\u4e3a \\(F(i - 1, j - 1)\\)\u3002</li> </ol> <p>\\(F(i, j) = \\min(F(i, j - 1) + 1, F(i - 1, j) + 1, F(i - 1, j - 1) + [s_i \\ne t_j])\\)</p> <p>\u5c06\u4e0a\u8ff0\u8fc7\u7a0b\u8f6c\u6362\u6210 dp \u5373\u53ef\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e00\u4e9b\u8fb9\u754c\u95ee\u9898\uff08\u81ea\u884c\u601d\u8003\u548c\u8c03\u8bd5\uff09\u3002</p> \u4ee3\u7801 <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MAXN = 5e3 + 1;\n\nstring s, t;\nint n, m, dp[MAXN][MAXN];\n\nint main() {\n  ios::sync_with_stdio(0), cin.tie(0);\n  cin &gt;&gt; s &gt;&gt; t;\n  n = s.size(), m = t.size();\n  s = '#' + s, t = '#' + t;\n  for (int i = 1; i &lt;= n; i++) {\n    dp[i][0] = i;\n  }\n  for (int i = 1; i &lt;= m; i++) {\n    dp[0][i] = i;\n  }\n  for (int i = 1; i &lt;= n; i++) {\n    for (int j = 1; j &lt;= m; j++) {\n      /*\n      dp[i][j] = min({dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1]}) + 1;\n      if (s[i] == t[j]) {\n        dp[i][j] = min(dp[i][j], dp[i - 1][j - 1]);\n      }\n      */\n      if (s[i] == t[j]) {\n        dp[i][j] = dp[i - 1][j - 1];\n      } else {\n        dp[i][j] = min({dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1]}) + 1;\n      }\n    }\n  }\n  cout &lt;&lt; dp[n][m];\n  return 0;\n}\n</code></pre>"},{"location":"dp/sequence_dp/","title":"\u5e8f\u5217 DP","text":""},{"location":"dp/sequence_dp/#\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217","title":"\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217","text":"<p>longest increasing subsequence\uff0c\u7b80\u79f0 LIS\u3002</p>"},{"location":"dp/sequence_dp/#\u6d1b\u8c37-b3637","title":"\u6d1b\u8c37 B3637","text":"<p>\u72b6\u6001\uff1a\\(dp_i\\) \u8868\u793a\u4ee5 \\(i\\)\u200b \u7ed3\u5c3e\u7684 LIS \u7684\u6700\u957f\u957f\u5ea6\u3002</p> <p>\u76f4\u63a5\u505a \\(O(N^2)\\) dp\u3002</p>"},{"location":"dp/sequence_dp/#cses-1145","title":"CSES 1145","text":"<p>LIS \u7684 \\(O(n \\log n)\\) \u5b9e\u73b0\uff0c\u672c\u5904\u8bb2\u89e3\u4e8c\u5206\uff0c\u4ee5\u540e\u8bb2\u89e3\u6570\u636e\u7ed3\u6784\u4f18\u5316\u3002</p> <p>\u4e00\u5f00\u59cb\u7528\u641c\u7d22\u5b9e\u73b0 LIS \u7684\u72b6\u6001\u8bbe\u8ba1\u4e3a \\((i, x)\\)\uff0c\u8868\u793a\u4e0a\u5347\u5b50\u5e8f\u5217\u672b\u5c3e\u5143\u7d20\u4e3a \\(a_i\\)\uff0c\u957f\u5ea6\u4e3a \\(x\\)\u3002</p> <p>\u7c7b\u4f3c\u4e8e CF1582F1\uff0c\u5047\u8bbe\u8003\u8651\u5b8c\u524d \\(i\\) \u4e2a\u5143\u7d20\u540e\uff0c\u6709\u5f88\u591a\u957f\u5ea6\u4e3a \\(x\\) \u7684\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u90a3\u5bf9\u4e8e\u957f\u5ea6\u4e3a \\(x\\) \u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u80af\u5b9a\u662f\u672b\u5c3e\u5143\u7d20\u8d8a\u5c0f\u8d8a\u597d\u3002</p> <p>\u56e0\u6b64\u91cd\u65b0\u8bbe\u8ba1\u72b6\u6001 \\(dp_{i, x}\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u5143\u7d20\u7684\u957f\u5ea6\u4e3a \\(x\\) \u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u672b\u5c3e\u5143\u7d20\u6700\u5c0f\u503c\u3002\u521d\u59cb\u5316\u65b9\u9762\uff0c\u7531\u4e8e\u4e00\u5f00\u59cb\u53ea\u6709\u7a7a\u5e8f\u5217\uff0c\u6240\u4ee5 \\(dp_{0, 1} \\sim dp_{0, n}\\) \u90fd\u4e3a \\(\\infty\\)\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a \\(dp_{i, 1} \\sim dp_{i, n}\\) \u662f\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684\uff0c\u53ef\u4ee5\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\uff1a</p> <ul> <li>\u5047\u8bbe\u5b58\u5728\u4e00\u4e2a \\(x(0 \\le x \\le n - 1)\\) \u4f7f\u5f97 \\(dp_{i, x} \\ge dp_{i, x + 1}\\) \u5e76\u4e14 \\(dp_{i, x + 1} \\ne \\infty\\)\u3002</li> <li>\u4ee4\u524d \\(i\\) \u4e2a\u5143\u7d20\u4e2d\u957f\u5ea6\u4e3a \\(x + 1\\) \u7684\u67d0\u4e2a\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u503c\u4f9d\u6b21\u4e3a \\(p_1 \\lt p_2 \\lt \\dots \\lt p_{x + 1} = dp_{i, x + 1}\\)\u3002</li> <li>\u90a3\u4e48\u5bf9\u4e8e\u957f\u5ea6\u4e3a \\(x\\) \u7684\u4e0a\u5347\u5b50\u5e8f\u5217 \\(p_1 \\lt p_2 \\dots \\lt p_x \\lt dp_{i, x + 1} \\le dp_{i, x}\\)\u3002\u672b\u5c3e\u5143\u7d20 \\(p_x\\) \u6bd4 \\(dp_{i, x}\\) \u5c0f\uff0c\u4e0e \\(dp_{i, x}\\) \u7684\u5b9a\u4e49\u77db\u76fe\u3002\u53cd\u8bc1\u6cd5\u6210\u7acb\u3002</li> </ul> <p>\u89c2\u5bdf\u8f6c\u79fb\uff1a</p> <ul> <li>\u53ef\u4ee5\u4e0d\u9009\u7b2c \\(i + 1\\) \u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u5148 \\(dp_{i + 1, x} = dp_{i, x}\\)</li> <li>\u5982\u679c\u9009 \\(a_{i + 1}\\)\uff0c\u5219\u53ef\u4ee5\u627e\u5230 \\(dp_{i + 1, x} \\ge a_{i + 1}\\) \u4e2d\u7684\u6700\u5c0f\u7684 \\(x\\)\uff08\u4e3a\u4e86\u4fdd\u8bc1 \\(dp_{i + 1}\\) \u7684\u5355\u8c03\u6027\uff09\uff0c\u7136\u540e\u66f4\u65b0 \\(dp_{i + 1, x}\\) \u7684\u503c\u3002</li> <li>\u6bcf\u6b21\u53ea\u4f1a\u4fee\u6539 \\(dp_{i + 1}\\) \u4e2d\u7684\u4e00\u4e2a\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u964d\u7ef4\u4f18\u5316\u3002</li> </ul> <p>\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(N)\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N \\log N)\\)\u3002</p>"},{"location":"dp/sequence_dp/#\u5212\u5206-dp","title":"\u5212\u5206 DP","text":"<p>\u5212\u5206 DP\uff1a\u5728\u6570\u7ec4\u4e2d\u9009 \\(k\\) \u4e2a\u5143\u7d20\u3001\u9009 \\(k\\) \u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5b50\u6bb5\u3001\u5206\u4e3a \\(k\\) \u4e2a\u5b50\u6bb5\u7684\u4e00\u7c7b\u52a8\u6001\u89c4\u5212\u6a21\u578b\u3002\u76f8\u5f53\u4e8e\u662f\u5728\u5b50\u5e8f\u5217\u95ee\u9898\u7684\u57fa\u7840\u4e4b\u4e0a\u52a0\u4e86\u4e00\u4e2a\u9009\u6570\u6570\u91cf\u7684\u9650\u5236\u3002</p> <p>\u5212\u5206 DP \u7ecf\u5e38\u4e0e\u5404\u79cd\u5404\u6837\u7684\u4f18\u5316\u7ed3\u5408\u8d77\u6765\u8003\u5bdf\uff08\u56e0\u4e3a\u72b6\u6001\u6bd4\u8f83\u597d\u60f3\uff09\uff0c\u4f8b\u5982\u524d\u7f00\u548c\u3001\u53cc\u6307\u9488\u3001\u7d2f\u52a0\u548c\u3001\u5355\u8c03\u961f\u5217\u3001\u7ebf\u6bb5\u6811\u7b49\u4e00\u7cfb\u5217\u6570\u636e\u7ed3\u6784\u4f18\u5316\u3002</p>"},{"location":"dp/sequence_dp/#\u6d1b\u8c37-p9688","title":"\u6d1b\u8c37 P9688","text":"<p>\u4ee4 \\(dp_{x, i}\\) \u8868\u793a\u5728\u524d \\(i\\) \u79cd\u989c\u8272\u4e2d\u9009\u4e86 \\(x\\) \u79cd\u989c\u8272\uff0c\u6700\u540e\u9009\u7684\u989c\u8272\u4e3a \\(i\\) \u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>\u8f6c\u79fb\u65f6\u8003\u8651\u679a\u4e3e\u4e0a\u4e00\u4e2a\u9009\u4e86\u989c\u8272 \\(j\\)\uff0c\u5219 \\(dp_{x, i}\\) \u53ef\u4ee5\u7531 \\(dp_{x - 1, j}\\) \u8f6c\u79fb\u800c\u6765\uff0c\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u65f6 \\(j \\lt i\\)\u3001\u989c\u8272 \\(i, j\\) \u90fd\u51fa\u73b0\u3001\u989c\u8272\u4e3a \\(i\\) \u7684\u683c\u5b50\u5168\u90e8\u5728\u989c\u8272\u4e3a \\(j\\) \u7684\u683c\u5b50\u7684\u53f3\u8fb9\u3002\u8fd9\u4e9b\u9650\u5236\u6761\u4ef6\u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406\u6bcf\u79cd\u989c\u8272\u7684\u6700\u65e9\u3001\u6700\u665a\u683c\u5b50\u6765\u5b9e\u73b0\u3002</p> <p>\\(dp\\) \u8fc7\u7a0b\u7684\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(NK)\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N^2K)\\)\u200b\u3002</p> <p>\u5212\u5206 \\(dp\\) \u7684\u62d3\u6251\u5e8f\uff0c\u53ef\u4ee5\u662f \\(x\\) \u4ece\u5c0f\u5230\u5927\uff0c\u4e5f\u53ef\u4ee5\u662f \\(i\\) \u4ece\u5c0f\u5230\u5927\u3002</p>"},{"location":"dp/sequence_dp/#cf1133e","title":"CF1133E","text":"\u5f62\u5f0f\u5316\u9898\u610f <p>\u7ed9\u5b9a \\(n\\) \u4e2a\u6574\u6570 \\(a_i\\)\uff0c\u4f60\u9700\u8981\u5c06\u6574\u6570\u5206\u4e3a\u6700\u591a \\(k\\) \u7ec4\uff0c\u6bcf\u4e2a\u6574\u6570\u6700\u591a\u5206\u5230\u4e00\u7ec4\uff0c\u5e76\u4e14\u6bcf\u7ec4\u5185\u6574\u6570\u7684\u6781\u5dee\u4e0d\u8d85\u8fc7 \\(5\\)\u3002\u6c42\u6700\u591a\u6709\u591a\u5c11\u6574\u6570\u88ab\u5206\u7ec4\u3002\\(1 \\le k \\le n \\le 5000\\)\u3002</p> \u63d0\u793a <p>\u4e0d\u96be\u60f3\u5230\uff0c\u53ef\u4ee5\u5148\u6392\u5e8f\uff0c\u6b64\u65f6\u6bcf\u7ec4\u5185\u7684\u6574\u6570\u4e00\u5b9a\u662f\u6392\u5e8f\u540e\u7684\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\u3002</p> \u72b6\u6001\u548c\u8f6c\u79fb <p>\u5b9a\u4e49\u72b6\u6001 \\(dp_{i, j}\\) \u8868\u793a\u524d \\(i\\) \u4e2a\u6574\u6570\u5206\u4e3a\u4e86 \\(j\\) \u4e2a\u975e\u7a7a\u7ec4\u65f6\u9009\u51fa\u7684\u6700\u591a\u6570\u91cf\u3002</p> <p>\u8003\u8651\u6536\u96c6\u578b\u8f6c\u79fb\u3002\u5982\u679c \\(a_i\\) \u4e0d\u88ab\u5206\u7ec4\uff0c\u663e\u7136\u6709\u8f6c\u79fb \\(dp_{i, j} = \\max(dp_{i - 1, j})\\)\u3002\u5426\u5219\uff0c\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u7b2c \\(j\\) \u7ec4\u9009\u7684\u7b2c\u4e00\u4e2a\u6574\u6570 \\(a_k\\)\uff0c\u9700\u8981\u6ee1\u8db3 \\(a_i - a_k \\le 5\\)\uff0c\u7136\u540e\u505a\u8f6c\u79fb \\(dp_{i, j} = \\max{dp_{i, j}, dp_{k - 1, j - 1} + i - k + 1}\\)\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(nk)\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^2k)\\)\uff0cTLE\u3002</p> \u4f18\u5316 <p>\u5982\u679c \\(a_i\\) \u88ab\u5206\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5c3d\u53ef\u80fd\u591a\u7684\u6574\u6570\u548c \\(a_i\\) \u4e00\u7ec4\u3002\u5f62\u5f0f\u5316\u5730\u8bf4\uff0c\u5c31\u662f\u627e\u5230\u6700\u5c0f\u7684\u6ee1\u8db3 \\(a_i - a_k \\le 5\\) \u7684 \\(k\\)\uff0c\u7136\u540e\u53ea\u505a\u4e00\u6b21\u8fd9\u4e2a \\(k\\) \u7684\u8f6c\u79fb\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u6216\u8005\u53cc\u6307\u9488\u9884\u5904\u7406\u5904\u6bcf\u4e2a \\(i\\) \u5bf9\u5e94\u7684 \\(k\\)\u3002</p> <p>\u9884\u5904\u7406\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n) \\sim O(n \\log n)\\)\uff0cdp \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u4e3a \\(O(nk)\\)\u3002</p> \u8bc1\u660e <p>\u601d\u7ef4\u8bc1\u660e\uff1a\u5f53\u5206\u51fa\u7684\u7ec4\u6570 \\(j\\) \u4e00\u5b9a\u65f6\uff0c\u5143\u7d20\u6570\u91cf\u8d8a\u5c11\uff0c\u8d8a\u6709\u53ef\u80fd\u5168\u90e8\u88ab\u5206\u7ec4\u3002\u4e00\u65b9\u9762\u8f6c\u79fb\u4fdd\u8bc1\u4e86\u7b2c \\(j\\) \u7ec4\u9009\u51fa\u7684\u6570\u5b57\u5c3d\u53ef\u80fd\u591a\uff0c\u53e6\u4e00\u65b9\u9762\u4fdd\u8bc1\u524d \\(k - 1\\) \u4e2a\u6570\u5b57\u5c3d\u53ef\u80fd\u90fd\u88ab\u5206\u7ec4\u3002</p> <p>\u5f62\u5f0f\u5316\u8bc1\u660e\uff1a\\(0 \\le dp_{i, j} - dp_{i - 1, j} \\le 1\\)\uff0c\u5219\u5bf9\u4e8e \\(k\\) \u548c \\(k + 1\\) \u7684\u8f6c\u79fb\u6709 \\((dp_{k - 1, j - 1} + i - k + 1) - (dp_{k, j - 1} + i - k) \\ge 0\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\u51b3\u7b56 \\(k\\) \u6bd4 \\(k + 1\\) \u66f4\u4f18\u3002</p>"},{"location":"dp/sequence_dp/#cf467c","title":"CF467C","text":""},{"location":"dp/sequence_dp/#\u65f6\u95f4\u5e8f\u5217\u4e0a-dp","title":"\u65f6\u95f4\u5e8f\u5217\u4e0a DP","text":""},{"location":"dp/sequence_dp/#cses-1140","title":"CSES 1140","text":"<p>\u65f6\u95f4\u5e8f\u5217\u4e0a\u7684 \\(dp\\)\u3002\u6211\u4eec\u5148\u8003\u8651 \\(a_i, b_i \\le 10^5\\) \u65f6\u95f4\u8303\u56f4\u6bd4\u8f83\u5c0f\u7684\u60c5\u51b5\u3002</p> <p>\u4ee4 \\(dp_i\\) \u8868\u793a\u5230\u65f6\u523b \\(i\\) \u7ed3\u675f\u65f6\u7684\u6700\u5927\u83b7\u5229\u3002</p> <p>\u5206\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u8fdb\u884c\u8f6c\u79fb\uff1a</p> <ul> <li> <p>\u9996\u5148 \\(dp_i = dp_{i - 1}\\)\uff0c\u8868\u793a\u65f6\u523b \\(i\\) \u4e4b\u524d\u6ca1\u6709\u8fdb\u884c\u9879\u76ee\u8fdb\u884c\u3002</p> </li> <li> <p>\u5982\u679c\u65f6\u523b \\(i\\) \u662f\u67d0\u4e9b\u9879\u76ee \\(j\\) \u7684\u7ed3\u675f\u65f6\u523b\uff0c\u5219 \\(dp_i = \\max\\{ dp_{a_j - 1} + p_j\\}\\)\uff0c\u8868\u793a\u5728\u65f6\u523b \\(i\\) \u65f6\u8fdb\u884c\u4e86\u9879\u76ee\u3002</p> </li> </ul> <p>\u62d3\u6251\u5e8f\u663e\u7136\u4e3a \\(i\\) \u4ece\u5c0f\u5230\u5927\uff0c\u5feb\u901f\u67e5\u627e \\(j\\) \u662f\u8981\u505a\u7684\u4e8b\u60c5\uff0c\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5</p> <ul> <li>\u5bf9\u6240\u6709\u4efb\u52a1\u6309\u7ed3\u675f\u65f6\u523b\u6392\u5e8f\uff0c\u7136\u540e\u53cc\u6307\u9488\u7684\u65b9\u5f0f\u7ef4\u62a4 \\(j\\)\u3002</li> <li>\u5c06\u4ee5\u65f6\u523b \\(i\\) \u7ed3\u675f\u7684\u4efb\u52a1\u7528 <code>vector</code> \u8bb0\u5f55\uff0c\u7136\u540e\u8f6c\u79fb\u65f6\u76f4\u63a5\u904d\u5386\u5bf9\u5e94\u7684 <code>vector</code>\u3002</li> </ul> <p>\\(dp\\) \u8fc7\u7a0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N + T)\\)\uff0c\u5176\u4e2d \\(N\\) \u4e3a\u4efb\u52a1\u6570\u91cf\uff0c\\(T\\)\u200b \u4e3a\u65f6\u95f4\u957f\u5ea6\u3002 </p> <p>\u7531\u4e8e\u9898\u76ee\u7684 \\(a_i, b_i \\le 10^9\\)\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u6240\u6709\u51fa\u73b0\u7684\u65f6\u523b\u79bb\u6563\u5316\u5904\u7406\u5373\u53ef\u3002</p>"},{"location":"dp/sequence_dp/#\u79bb\u6563\u5316","title":"\u79bb\u6563\u5316","text":"<pre><code>int cnt = 0;\nint t[];  // vector&lt;int&gt; t;\nfor (int i = 1; i &lt;= n; i++) {\n  cin &gt;&gt; a[i];\n  t[++cnt] = a[i];\n  // t.push_back(a[i]);\n}\nsort(t + 1, t + cnt + 1);\n// unique \u8fd4\u56de\u5df2\u6392\u5e8f\u8303\u56f4\u4e2d\u53bb\u91cd\u540e\u7684\u6570\u5217\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u4e00\u4e2a\u5730\u5740\u6216\u8fed\u4ee3\u5668\n// int m = unique(t + 1, t + cnt + 1) - t - 1;\n// sort(t.begin(), t.end());\n// t.erase(unique(t.begin(), t.end()), t.end());\n/*\n    for (int i = 1; i &lt;= cnt; i++) {\n        if (i == 1 || a[i] != a[i - 1]) {\n            a[++m] = a[i];\n        }\n    }\n*/\nfor (int i = 1; i &lt;= n; i++) {\n  a[i] = lower_bound(t + 1, t + cnt + 1, a[i]) - t;  \n  // \u6216 lower_bound(t.begin(), t.end(), a[i]) - t.begin() + 1;\n}\n</code></pre> <pre><code>map&lt;int, int&gt; h;\nfor (int i = 1; i &lt;= n; i++) {\n  cin &gt;&gt; a[i];\n  h[a[i]] = 1;\n}\nint cnt = 0;\nfor (pair&lt;int, int&gt; &amp;it : h) {\n  it.second = ++cnt;\n}\n\n// h[x] \u8bb0\u5f55\u4e86 x \u79bb\u6563\u5316\u540e\u7684\u503c\n</code></pre> <p>NOI \u7cfb\u5217\u8d5b\u4e8b\u5efa\u8bae\u4f7f\u7528\u7b2c\u4e00\u79cd\uff08\u6570\u7ec4\u6a21\u62df\uff0c\u4e0d\u662f <code>vector</code>\uff09\uff0c\u5e38\u6570\u5c0f\u3002</p>"},{"location":"dp/sequence_dp/#\u6d1b\u8c37-p1280","title":"\u6d1b\u8c37 P1280","text":"<p>\u4e0e CSES 1140 \u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u6709\u4e00\u4e2a\u8f6c\u79fb\u5904\u7406\u8d77\u6765\u6709\u4e9b\u7ec6\u8282\uff1a\u5728\u67d0\u65f6\u523b\u6709\u4efb\u52a1\u65f6\uff0c\u5fc5\u987b\u505a\u5176\u4e2d\u4e00\u4e2a\u4efb\u52a1\u3002</p> <p>\u8003\u8651\u5982\u4e0b\u60c5\u51b5\uff1a</p> <ul> <li>\u5982\u679c\u5f53\u524d\u65f6\u523b \\(i\\) \u6ca1\u6709\u4efb\u52a1\u5f00\u59cb\uff0c\u6536\u96c6\u578b\u8f6c\u79fb \\(dp_i \\gets dp_{i - 1} + 1\\)</li> <li>\u5426\u5219\u5f53\u524d\u65f6\u523b\u5f00\u59cb\u7684\u4efb\u52a1\u662f \\(j\\)\uff0c\u6269\u6563\u578b\u8f6c\u79fb \\(dp_{i - 1} \\to dp_{p_j + t_j - 1}\\)</li> </ul>"},{"location":"dp/sequence_dp/#\u5176\u4ed6\u9898\u76ee","title":"\u5176\u4ed6\u9898\u76ee","text":""},{"location":"dp/sequence_dp/#abc271_e","title":"abc271_e","text":"<p>\u4ece \\(1\\) \u5230 \\(N\\) \u7684\u8def\u5f84\u7684\u7f16\u53f7\u5e8f\u5217\u662f \\(E\\) \u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\u3002</p> <p>\u770b\u4f3c\u72b6\u6001\u4e3a \\(dp_i\\) \u4ee5\u8fb9 \\(E_i\\) \u7ed3\u5c3e\u7684\uff0c\u4ece \\(1\\) \u5230 \\(B_{E_i}\\)\u200b \u7684\u6700\u5c11\u957f\u5ea6\u3002</p> <p>\u4e0b\u4e00\u6761\u8fb9\u7684\u9009\u53d6\u5fc5\u987b\u8981\u4ee5\u5f53\u524d\u8fb9\u7684\u7ec8\u70b9\u4e3a\u8d77\u70b9\u3002</p> <p>\u91cd\u65b0\u8bbe\u8ba1\u72b6\u6001\u4e3a \\(dp_{i, u}\\) \u8868\u793a\u8003\u8651\u4e86\u8fb9 \\(E_1, \\dots, E_i\\)\uff0c\u4ece \\(1\\) \u5230 \\(u\\) \u7684\u6700\u5c11\u8def\u5f84\u957f\u5ea6\u3002</p> <p>\u8f6c\u79fb\u4e3a $$ dp_{i, u} =  \\begin{cases}  \\begin{aligned} dp_{i - 1, u}&amp;, &amp;E_i \\ne (u, v)\\ \\min(dp_{i - 1, u}, dp_{i - 1, v})&amp;, &amp;E_i = (u, v) \\end{aligned} \\end{cases} $$</p> <p>\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u53ef\u4ee5\u7701\u7565\u7b2c\u4e00\u7ef4\uff0c\u5176\u6b21\u53d1\u73b0\u8f6c\u79fb\u65f6\u53ea\u9700\u8981\u505a \\(E_i = (u, v)\\)\u200b \u7684\u8f6c\u79fb\uff0c\u56e0\u6b64\u7b2c\u4e00\u7ef4\u662f\u6beb\u65e0\u7528\u5904\u7684\u3002</p> <p>\u8fd9\u91cc\u7528\u5230\u7684\u601d\u7ef4\u603b\u7ed3\u6210\u4e00\u53e5\u8bdd\uff1a\u505a\u5e8f\u5217\u578b \\(dp\\) \u4e0d\u4e00\u5b9a\u8981\u7528\u5143\u7d20\u4e0b\u6807\u5f53 \\(dp\\) \u72b6\u6001\uff0c\u4e5f\u53ef\u4ee5\u7528\u5143\u7d20\u503c\u5f53 \\(dp\\) \u7684\u72b6\u6001\u3002</p>"},{"location":"dp/sequence_dp/#cf1582f1","title":"CF1582F1","text":"<p>\u5f88\u81ea\u7136\u7684\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u72b6\u6001\u8bbe\u8ba1\uff1a\\((i, x)\\) \u8868\u793a\u4e0a\u5347\u5b50\u5e8f\u5217\u672b\u5c3e\u5143\u7d20\u4e3a \\(a_i\\)\uff0c\u5b50\u5e8f\u5217\u5f02\u6216\u503c\u4e3a \\(x\\)\u3002</p> <p>\u76f4\u63a5\u66b4\u529b\u505a\u9012\u63a8\uff0c\u65f6\u95f4 \\(O(N^2 \\times V)\\)\uff0c\u5176\u4e2d \\(V = 512\\)\uff0c\u4e0d\u80fd\u63a5\u53d7\u3002</p> <p>\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u5047\u8bbe\u8003\u8651\u5b8c\u524d \\(i\\) \u4e2a\u5143\u7d20\uff0c\u6709\u5f88\u591a\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u503c\u4e3a \\(x\\)\uff0c\u90a3\u6211\u80af\u5b9a\u662f\u8d2a\u5fc3\u5730\u9009\u62e9\u8fd9\u4e9b\u5b50\u5e8f\u5217\u4e2d\u672b\u5c3e\u5143\u7d20\u5c3d\u53ef\u80fd\u5c0f\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u5b50\u80fd\u591f\u8ba9\u540e\u7eed\u7684\u5143\u7d20\u5c3d\u53ef\u80fd\u505a\u8f6c\u79fb\u3002</p> <p>\u4f18\u5316\u4e0b\u72b6\u6001\u8bbe\u8ba1\uff0c\\(dp_{i, x}\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u5143\u7d20\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u5f02\u6216\u503c\u4e3a \\(x\\) \u7684\u672b\u5c3e\u5143\u7d20\u6700\u5c0f\u503c\u3002\u8f6c\u79fb\u5c31\u662f\u9009\u6216\u4e0d\u9009\u5f53\u524d\u5143\u7d20\u3002\u53ef\u4ee5\u53d1\u73b0\u8f6c\u79fb\u53d1\u751f\u5728 \\(dp_i\\) \u548c \\(dp_{i - 1}\\) \u4e4b\u95f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u7a7a\u95f4\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(V)\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N \\times V)\\)\u3002</p>"},{"location":"dp/theory/","title":"DP \u7406\u8bba","text":"<p>\u5b9e\u73b0 DP \u7684\u51e0\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u8bfb\u9898\uff0c\u5c06\u9898\u610f\u8868\u8fbe\u4e3a\u6570\u5b66\u5f62\u5f0f\uff0c\u5728\u6b64\u5f62\u5f0f\u4e2d\u5bfb\u627e\u72b6\u6001\u3001\u8f6c\u79fb\u3001\u62d3\u6251\u5e8f\u3001\u6700\u4f18\u5316\u5c5e\u6027\u3002</li> <li>\u63a8\u4e0d\u51fa\u72b6\u6001\u65f6\u53ef\u4ee5\u5148\u5c1d\u8bd5\u5b9e\u73b0\u641c\u7d22\u3002</li> <li>\u8fb9\u754c\uff1a\u521d\u59cb\u72b6\u6001\u662f\u54ea\u4e9b\uff1f\u76ee\u6807\u72b6\u6001\u662f\u54ea\u4e9b\uff1f\u72b6\u6001\u521d\u59cb\u5316\u4e3a\u4ec0\u4e48\u503c\uff1f\u8f6c\u79fb\u4e2d\u662f\u5426\u53ef\u80fd\u51fa\u73b0\u6570\u7ec4\u8d8a\u754c\u3001\u6570\u636e\u6ea2\u51fa\uff1f</li> <li>\u4f18\u5316\u72b6\u6001\u8bbe\u8ba1\uff1a\u964d\u7ef4\u3001\u6539\u53d8\u6700\u4f18\u5316\u5c5e\u6027\u7b49</li> <li>\u4f18\u5316\u8f6c\u79fb\uff1a\u6570\u636e\u7ed3\u6784\u4f18\u5316\uff08\u524d\u7f00\u548c\uff0c\u5355\u8c03\u961f\u5217\uff0c\u5355\u8c03\u6808\uff0c\u7ebf\u6bb5\u6811\u7b49\uff09\uff0c\u51b3\u7b56\u5355\u8c03\u6027\uff08\u659c\u7387\u4f18\u5316\uff0c\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\uff09\u3001\u6839\u53f7\u7b97\u6cd5\u7b49\u6570\u5b66\u7c7b\u4f18\u5316\u3002</li> </ol>"},{"location":"ds/stack/","title":"stack","text":"<p>stack is a LIFO structure</p>"},{"location":"math/notation/","title":"\u6570\u5b66\u7b26\u53f7","text":"<p>\u5173\u4e8e\u6570\u5b66\u7b26\u53f7\uff0c\u8bf7\u53c2\u8003\u5982\u4e0b\u94fe\u63a5</p> <p>OI-Wiki \u6570\u5b66\u7b26\u53f7</p> <p>\u5f85\u8865\u5168\u3002</p>"},{"location":"math/CSPJ/number_theory/","title":"\u6570\u8bba","text":"<p>\u5173\u4e8e\u6570\u8bba\u90e8\u5206\u7684\u6982\u5ff5\uff0c\u53ef\u53c2\u8003\u5982\u4e0b\u94fe\u63a5\uff1a</p> <p>OI-Wiki \u6570\u8bba\u57fa\u7840</p>"},{"location":"math/CSPJ/number_theory/#\u7ea6\u6570\u548c\u500d\u6570","title":"\u7ea6\u6570\u548c\u500d\u6570","text":"<p>\u7ea6\u6570\u603b\u662f\u6210\u5bf9\u51fa\u73b0\u7684\uff1a</p> <ul> <li>\u5982\u679c \\(a\\) \u662f \\(n\\) \u7684\u7ea6\u6570\uff0c\u90a3\u4e48 \\(\\frac{n}{a}\\) \u4e5f\u662f \\(n\\) \u7684\u7ea6\u6570\u3002</li> <li>\u8fd9\u4e00\u5bf9\u7ea6\u6570 \\(a\\) \u548c \\(\\frac{n}{a}\\)\uff0c\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e \\(\\sqrt{n}\\)\uff0c\u53e6\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e \\(\\sqrt{n}\\)\u3002</li> <li> <p>\u4ee4 \\(n\\) \u6709\u4e00\u5bf9\u7ea6\u6570 \\(pq = n\\)\uff0c\u4e0d\u59a8\u8bbe \\(p \\le q\\)\uff0c\\(n = pq \\ge p^2\\)\uff0c\\(p \\le \\sqrt n\\)\u3002</p> </li> <li> <p>\u5982\u679c \\(a\\) \u7b49\u4e8e \\(\\frac{n}{a}\\)\uff0c\u90a3\u4e48 \\(n\\) \u662f\u4e00\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\u3002</p> </li> </ul> <p>\u63a8\u8bba\uff1a\\(n\\) \u7684\u7ea6\u6570\u6570\u91cf\u4e3a\u5947\u6570\uff0c\u7b49\u4ef7\u4e8e \\(n\\) \u4e3a\u5b8c\u5168\u5e73\u65b9\u6570\u3002</p>"},{"location":"math/CSPJ/number_theory/#\u679a\u4e3e\u7ea6\u6570\u7ea6\u6570\u6cd5","title":"\u679a\u4e3e\u7ea6\u6570\uff08\u7ea6\u6570\u6cd5\uff09","text":"<p>\u7ed9\u5b9a \\(n\\)\uff0c\u6c42 \\(n\\) \u7684\u6bcf\u4e2a\u7ea6\u6570\uff0c\\(n \\le 10^9\\)\u3002</p> <pre><code>int divisor[], m;  // \u8bb0\u5f55\u7ea6\u6570\uff0cdivisor \u7ea6\u6570\n\nfor (int i = 1; i * i &lt;= n; i++) {  // \u679a\u4e3e\u7ea6\u6570\n  if (n % i == 0) {\n    divisor[++m] = i;\n    if (i * i != n) {  // \u6ce8\u610f\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u5224\u65ad\n      divisor[++m] = n / i;\n    }\n  }\n}\n\n// \u4f3c\u4e4e\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(sqrt(n))\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(\\sqrt n)\\)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 \\(\\max(d(n))\\)\uff0c\u5176\u4e2d \\(d(n)\\) \u8868\u793a \\(n\\) \u7684\u7ea6\u6570\u6570\u91cf\uff0c\u5927\u7ea6\u4e3a \\(O(n^{\\frac{1}{3}})\\)\u3002\u9002\u7528\u4e8e\u6c42\u89e3\u5c11\u91cf\u8f83\u5927\u6570\u7684\u7ea6\u6570\u3002</p> <p></p>"},{"location":"math/CSPJ/number_theory/#\u679a\u4e3e\u500d\u6570\u500d\u6570\u6cd5","title":"\u679a\u4e3e\u500d\u6570\uff08\u500d\u6570\u6cd5\uff09","text":"<p>\u7ed9\u5b9a \\(n\\)\uff0c\u6c42 \\(1 \\sim n\\) \u7684\u6bcf\u4e2a\u6570\u7684\u7ea6\u6570\uff0c\\(n \\le 10^5\\)\u3002</p> <pre><code>const int MAXN = 1e5 + 1;\n\n// \u6bcf\u4e2a\u6570\u7684\u7ea6\u6570\u6570\u91cf\u4e0d\u7b49\uff0cvector \u5b58\u50a8\u7ea6\u6570\nvector&lt;int&gt; divisor[MAXN];  // divisor[i] \u8bb0\u5f55\u4e86 i \u7684\u6240\u6709\u7ea6\u6570\n\nfor (int i = 1; i &lt; MAXN; i++) {\n  for (int j = i; j &lt; MAXN; j += i) {  // \u679a\u4e3e i \u7684\u500d\u6570 j\n    divisor[j].push_back(i);  // j \u6709\u7ea6\u6570 i\n  }\n  /* \u6216\u8005\u4ee5\u4e0b\u4ee3\u7801\n  for (int j = 1; j * i &lt;= n; j++) {\n    divisor[j * i].push_back(i);\n  }\n  */\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(\\frac{n}{1} + \\frac{n}{2} + \\dots + \\frac{n}{n} = O(n \\log n)\\)\uff0c\u8c03\u548c\u7ea7\u6570\u590d\u6742\u5ea6\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(n \\log n)\\)\u3002\u5b9e\u9645\u4e0a\u8bf4\u660e\u4e86 \\(1 \\sim n\\) \u7684\u7ea6\u6570\u6570\u91cf\u4e3a \\(O(n \\log n)\\) \u7ea7\u522b\u3002</p>"},{"location":"math/CSPJ/number_theory/#\u8d28\u6570\u4e0e\u5408\u6570","title":"\u8d28\u6570\u4e0e\u5408\u6570","text":"<p>\u5bf9\u4e8e\u6b63\u6574\u6570 \\(p \\ne 0, 1\\)\uff0c\u5982\u679c \\(p\\) \u9664\u4e86 \\(1\\) \u548c \\(p\\) \u4ee5\u5916\u6ca1\u6709\u5176\u4ed6\u7ea6\u6570\uff0c\u5219 \\(p\\) \u4e3a\u8d28\u6570\u3002</p> <p>\u5bf9\u4e8e\u6b63\u6574\u6570 \\(p \\ne 0, 1\\)\uff0c\u5982\u679c \\(p\\) \u4e0d\u662f\u8d28\u6570\uff0c\u5219 \\(p\\) \u4e3a\u5408\u6570\u3002</p>"},{"location":"math/CSPJ/number_theory/#\u8d28\u6570\u5224\u5b9a","title":"\u8d28\u6570\u5224\u5b9a","text":"<p>\u82e5 \\(n\\) \u4e3a\u5408\u6570\uff0c\u5219 \\(n\\) \u53ef\u4ee5\u8868\u793a\u4e3a \\(n = pq\\)\uff0c\u5176\u4e2d \\(p, q \\gt 1\\)\u3002</p> <ul> <li>\u4ee4 \\(p \\le q\\)\uff0c\u5219\u53ef\u4ee5\u53d1\u73b0 \\(n = pq \\ge p^2\\)\uff0c\u5219 \\(p \\le \\sqrt n\\)\u3002</li> <li>\u56e0\u6b64\u53ef\u4ee5\u8bd5\u9664\u6cd5\uff0c\u679a\u4e3e \\(2 \\sim \\lbrack \\sqrt{n} \\rbrack\\) \u5185\u7684\u6570\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u6709 \\(n\\) \u7684\u7ea6\u6570\u3002</li> </ul> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(\\sqrt n)\\)\u3002</p> <pre><code>bool P(int n) {\n  for (int i = 2; i * i &lt;= n; i++) {  // \u8bd5\u9664\u6cd5\uff0c\u679a\u4e3e 2 ~ sqrt(n) \u4e2d\u7684\u5176\u4ed6\u7ea6\u6570\n    if (n % i == 0) {  // \u627e\u5230\u5176\u4ed6\u7ea6\u6570\uff0c\u4e0d\u662f\u8d28\u6570\n      return 0;\n    }\n  }\n  return n != 1;  // \u7279\u5224 1\uff0c\u5176\u4ed6\u6570\u4e3a\u8d28\u6570\n}\n</code></pre>"},{"location":"math/CSPJ/number_theory/#\u8d28\u6570\u7b5b","title":"\u8d28\u6570\u7b5b","text":"<p>\u4f7f\u7528\u8d28\u6570\u5224\u65ad\u7b5b\u51fa \\(1 \\sim n\\) \u4ee5\u5185\u7684\u8d28\u6570\uff0c\u6548\u7387 \\(O(n \\sqrt n)\\) \u5f88\u4f4e\uff0c\u9700\u8981\u4f7f\u7528\u8d28\u6570\u7b5b\u3002</p> <p>\u8d28\u6570\u7b5b\u7684\u601d\u60f3\u4e3a\u7b5b\u9664\u6240\u6709\u5408\u6570\uff0c\u5269\u4e0b\u6ca1\u88ab\u7b5b\u9664\u7684\u6570\u4e3a\u8d28\u6570\u3002\u6bcf\u4e2a\u5408\u6570\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a\u8d28\u56e0\u6570\uff0c\u5229\u7528\u8d28\u56e0\u6570\u5c06\u5408\u6570\u7b5b\u9664\u3002</p>"},{"location":"math/CSPJ/number_theory/#\u57c3\u6c0f\u7b5b","title":"\u57c3\u6c0f\u7b5b","text":"<p>\u601d\u60f3\uff1a\u6bcf\u627e\u5230\u4e00\u4e2a\u8d28\u6570\uff0c\u5c31\u5c06\u5b83\u7684\u6240\u6709\u500d\u6570\u7b5b\u53bb\u3002</p> <p>\u7b97\u6cd5\u601d\u8def\uff1a</p> <ul> <li>\u4ece \\(2\\) \u5f00\u59cb\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6bcf\u4e2a\u6574\u6570 \\(i\\)</li> <li>\u5982\u679c \\(i\\) \u672a\u88ab\u7b5b\u53bb<ul> <li>\u8bb0\u5f55\u8d28\u6570</li> <li>\u5c06 \\(i\\) \u7684\u6240\u6709\u500d\u6570\u7b5b\u53bb</li> </ul> </li> </ul> <pre><code>int v[MAXN], prime[MAXN], tot;\n\nfor (int i = 2; i &lt;= n; i++) {\n  if (!v[i]) {  // \u662f\u8d28\u6570\n    prime[++tot] = i;\n    // v[i] = i;  // \u53ef\u4ee5\u8bb0\u5f55\u6700\u5c0f\u8d28\u56e0\u6570\n    for (int j = i * 2; j &lt;= n; j += i) {  // \u5c06\u6240\u6709\u8d28\u6570\u7684\u500d\u6570\u7b5b\u9664\n      v[j] = 1;\n      // if (!v[j]) v[j] = i;  // \u53ef\u4ee5\u8bb0\u5f55\u9996\u6b21\u7b5b\u9664\u65f6\u7684\u6700\u5c0f\u8d28\u56e0\u6570\n    }\n  }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(\\frac{n}{2}+\\frac{n}{3}+\\frac{n}{5}+\\frac{n}{7}+\\frac{n}{11}+\\dots = O(n \\log (\\log n))\\)\u3002 </p>"},{"location":"math/CSPJ/number_theory/#\u6b27\u62c9\u7b5b\u7ebf\u6027\u7b5b","title":"\u6b27\u62c9\u7b5b\uff08\u7ebf\u6027\u7b5b\uff09","text":"<p>\u57c3\u6c0f\u7b5b\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u662f\u7ebf\u6027\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5408\u6570\u4f1a\u88ab\u5b83\u7684\u591a\u4e2a\u8d28\u56e0\u5b50\u7b5b\u53bb\u3002</p> <ul> <li>\u5982\u679c\u6bcf\u4e2a\u5408\u6570\u53ea\u4f1a\u88ab\u7b5b\u4e00\u6b21\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u7ebf\u6027 \\(O(n)\\) \u7684\u3002</li> <li>\u6bcf\u4e2a\u5408\u6570\u90fd\u6709\u4e00\u4e2a\u6700\u5c0f\u8d28\u56e0\u6570\uff0c\u5c1d\u8bd5\u5229\u7528\u6700\u5c0f\u8d28\u56e0\u6570\u5c06\u5408\u6570\u7b5b\u9664\u3002</li> </ul> <p>\u6b27\u62c9\u7b5b\uff1a\u4f7f\u7528\u6700\u5c0f\u8d28\u56e0\u6570\u4f5c\u4e3a\u500d\u6570\uff0c\u5c06\u6bcf\u4e2a\u5408\u6570\u7b5b\u53bb\u3002\u6bcf\u4e2a\u5408\u6570\u53ea\u4f1a\u88ab\u5176\u6700\u5c0f\u8d28\u56e0\u6570\u7b5b\u53bb\u3002</p> <p>\u7b97\u6cd5\u601d\u8def\uff1a</p> <ul> <li>\u4ece \\(2\\) \u5f00\u59cb\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6bcf\u4e2a\u6574\u6570 \\(i\\)</li> <li>\u5982\u679c \\(i\\) \u672a\u88ab\u7b5b\u53bb<ul> <li>\u8bb0\u5f55\u8d28\u6570</li> </ul> </li> <li>\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u8d28\u6570\u8868\u4e2d\u7684\u6bcf\u4e2a\u8d28\u6570 \\(prime[j]\\)<ul> <li>\u7b5b\u53bb\u5408\u6570 \\(i * prime[j]\\)\uff0c\u6b64\u65f6 \\(i * prime[j]\\) \u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u4e3a \\(prime[j]\\)</li> <li>\u5982\u679c \\(i \\ \\% \\ prime[j] == 0\\)\uff0c\u8df3\u51fa \\(j\\) \u5faa\u73af\uff0c\u56e0\u4e3a\u66f4\u5927\u7684 \\(prime[j]\\) \u4e0d\u518d\u662f \\(i * prime[j]\\) \u7684\u6700\u5c0f\u8d28\u56e0\u5b50</li> </ul> </li> </ul> <pre><code>int v[MAXN], prime[MAXN], tot;\n\n// \u7ebf\u6027\u7b5b\uff08\u6b27\u62c9\u7b5b\uff09\uff0c\u7b5b\u51fa 1 ~ n \u5185\u7684\u6240\u6709\u8d28\u6570\n// \u7ebf\u6027\u7b5b\uff1a\u6bcf\u4e2a\u5408\u6570\u53ea\u88ab\u5176\u6700\u5c0f\u8d28\u56e0\u6570\u7b5b\u6389\n// \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\nvoid Sieve(int n) {\n  for (int i = 2; i &lt;= n; i++) {  // \u679a\u4e3e\u6bcf\u4e2a\u6570\n    if (!v[i]) {                  // \u6570\u5b57\u6ca1\u88ab\u7b5b\u6389\n      // v[i] = i;                // \u53ef\u4ee5\u6700\u5c0f\u8d28\u56e0\u6570\n      prime[++tot] = i;           // \u8bb0\u5f55\u8d28\u6570\n    }\n    for (int j = 1; j &lt;= tot &amp;&amp; i * prime[j] &lt;= n; j++) {  // \u679a\u4e3e\u8d28\u6570\u8868\u7684\u6bcf\u4e2a\u8d28\u6570\u4f5c\u4e3a\u6700\u5c0f\u8d28\u56e0\u6570\uff0c\u4fdd\u8bc1\u4e0d\u8d8a\u754c\n      v[i * prime[j]] = 1;                                 // \u7b5b\u6389\u5408\u6570 i * prime[j]\n      //v[i * prime[j]] = prime[j];                        // \u6216\u8005\u8bb0\u5f55\u6700\u5c0f\u8d28\u56e0\u6570\n      if (i % prime[j] == 0) {                             // \u4fdd\u8bc1\u4e86 i * prime[j] \u7684\u6700\u5c0f\u8d28\u56e0\u6570\u4e3a prime[j]\n        break;\n      }\n      // \u5f53 i % prime[j] = 0 \u65f6\uff0ci \u7684\u8d28\u56e0\u6570\u5206\u89e3\u5f62\u5f0f\u5305\u542b\u4e86 prime[j]\n      // \u5373 i \u7684\u6700\u5c0f\u8d28\u56e0\u6570\u5c31\u662f prime[j]\n      // \u5982\u679c\u7ee7\u7eed\u5f80\u540e\u679a\u4e3e\u8d28\u6570\uff0cprime[j] \u6bd4 i \u7684\u6700\u5c0f\u8d28\u56e0\u6570\u8981\u5927\n      // i * prime[j] \u7684\u6700\u5c0f\u8d28\u56e0\u6570\u4e0d\u662f prime[j]\uff0c\u56e0\u6b64 i * prime[j] \u4e0d\u80fd\u88ab prime[j] \u7b5b\u9664\n      // \u56e0\u6b64 i % prime[j] = 0\uff0c\u4e0d\u9700\u8981\u518d\u679a\u4e3e\u66f4\u5927\u7684 prime[j] \u4e86\n    }\n  }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n)\\)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</p>"},{"location":"math/CSPJ/number_theory/#\u6742\u9879","title":"\u6742\u9879","text":"<p>\\(1 \\sim N\\) \u5185\u7684\u8d28\u6570\u6570\u91cf\u7ea6\u4e3a \\(O(\\dfrac{N}{\\ln N})\\)\u3002</p>"},{"location":"math/CSPJ/number_theory/#\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570","title":"\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570","text":"<p>\u8bb0 \\(a_1, a_2, \\dots, a_n\\) \u7684\u6700\u5927\u516c\u7ea6\u6570\uff08greatest common divisor, gcd\uff09\u548c\u6700\u5c0f\u516c\u500d\u6570\uff08least common multiple, lcm\uff09\u4e3a </p> <p>\\(gcd(a_1, a_2, \\dots, a_n) = (a_1, a_2, \\dots, a_n)\\) \u548c \\(lcm(a_1, a_2, \\dots, a_n) = [a_1, a_2, \\dots, a_n]\\)\u3002</p> <p>\u6ce8\u610f\uff0c\u5bf9\u4e8e\u4efb\u610f\u6574\u6570 \\(a \\ne 0\\)\uff0c\\((a, 0) = a\\)\u3002</p> <p>\u4e92\u8d28\uff1a\\(a\\) \u548c \\(b\\) \u6700\u5927\u516c\u7ea6\u6570\u4e3a \\(1\\)\uff0c\u90a3\u4e48 \\(a\\) \u548c \\(b\\) \u4e92\u8d28\u3002</p>"},{"location":"math/CSPJ/number_theory/#\u6027\u8d28","title":"\u6027\u8d28","text":"<ul> <li>\u7ed3\u5408\u5f8b\u548c\u4ea4\u6362\u5f8b\uff0c\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8ba1\u7b97 gcd \u548c lcm\uff0c\u4f8b\u5982 \\((a_1, a_2, a_3) = ((a_1, a_2), a_3) = (a_1, (a_2, a_3)) = (a_2, (a_1, a_3))\\)\uff0clcm \u540c\u7406\u3002</li> <li>\\((ka_1, ka_2, \\dots, ka_n) = k \\times (a_1, a_2, \\dots a_n)\\)\u3002lcm \u540c\u7406\u3002</li> <li>\u4e24\u6570\u7684 gcd \u548c lcm \u7684\u4e58\u79ef\u7b49\u4e8e\u4e24\u6570\u4e58\u79ef\uff0c\u5373 \\((a_1, a_2) \\times[a_1, a_2] = a_1 \\times a_2\\)\u3002</li> </ul>"},{"location":"math/CSPJ/number_theory/#\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5","title":"\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5","text":"<p>\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u89e3\u4e24\u6570 \\(a, b\\) \u6700\u5927\u516c\u7ea6\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log (\\max(a, b)))\\)\u3002\u4e0d\u8981\u6c42\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8bc1\u660e\u3002</p> <p>\\((a, b) = (b, a \\bmod b)\\)\u3002\u6ce8\u610f\uff0c\u5bf9\u4e8e\u4efb\u610f\u6574\u6570 \\(a \\ne 0\\)\uff0c\\((a, 0) = a\\)\u3002</p> <pre><code>int gcd(int a, int b) {  // \u6700\u5927\u516c\u7ea6\u6570\n  return !b ? a : gcd(b, a % b);\n}\n\nint lcm(int a, int b) {      // \u6700\u5c0f\u516c\u500d\u6570\n  return a / gcd(a, b) * b;  // \u6ce8\u610f\u5148\u9664\u540e\u4e58\uff0c\u5c3d\u53ef\u80fd\u907f\u514d\u6ea2\u51fa\n}\n</code></pre>"},{"location":"math/CSPJ/number_theory/#\u7b97\u6570\u57fa\u672c\u5b9a\u7406\u552f\u4e00\u5206\u89e3\u5b9a\u7406","title":"\u7b97\u6570\u57fa\u672c\u5b9a\u7406\uff08\u552f\u4e00\u5206\u89e3\u5b9a\u7406\uff09","text":"<p>\u5c31\u662f\u8d28\u56e0\u6570\u5206\u89e3\u3002</p> <p>\u53ef\u4ee5\u5c06\u4efb\u610f\u5927\u4e8e\u7b49\u4e8e \\(2\\) \u7684\u81ea\u7136\u6570 \\(N\\) \u5206\u89e3\u4e3a\u6709\u9650\u4e2a\u8d28\u6570\u7684\u4e58\u79ef\uff0c\u5373 \\(N = p_1^{a_1}p_2^{a_2}p_3^{a_3}\\cdots p_k^{a_k}= \\prod \\limits_{i = 1} ^ k p_i^{a_i}\\)\uff0c\u5176\u4e2d \\(p_i\\) \u662f\u4e92\u4e0d\u76f8\u540c\u7684\u8d28\u56e0\u6570\uff08\\(2 \\le p_1 \\lt p_2 \\lt \\dots \\lt p_k\\)\uff09\uff0c\\(a_i\\) \u662f\u5bf9\u5e94\u7684\u8d28\u56e0\u6570\u7684\u5e42\u6b21\uff08\\(a_i \\ge 1\\)\uff09\uff0c\\(k\\) \u4e3a \\(N\\) \u5206\u89e3\u51fa\u7684\u4e0d\u540c\u8d28\u56e0\u6570\u4e2a\u6570\u3002</p>"},{"location":"math/CSPJ/number_theory/#\u8d28\u56e0\u6570\u5206\u89e3","title":"\u8d28\u56e0\u6570\u5206\u89e3","text":""},{"location":"math/CSPJ/number_theory/#\u8bd5\u9664\u6cd5\u5206\u89e3\u8d28\u56e0\u6570","title":"\u8bd5\u9664\u6cd5\u5206\u89e3\u8d28\u56e0\u6570","text":"<p>\u4ece \\(2\\) \u5f00\u59cb\u679a\u4e3e\uff0c\u627e\u5230\u4e00\u4e2a \\(n\\) \u7684\u7ea6\u6570\uff0c\u5c31\u4e0d\u65ad\u5730\u5c06\u5b83\u5206\u89e3\u3002\u7531\u4e8e\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7684\u7ea6\u6570\uff0c\u56e0\u6b64\u627e\u5230\u7684\u56e0\u6570\u4e5f\u5fc5\u7136\u4e3a\u8d28\u6570\u3002\u7531\u4e8e \\(n\\) \u6700\u591a\u53ea\u6709\u4e00\u4e2a\u5927\u4e8e \\(\\sqrt{n}\\) \u7684\u8d28\u56e0\u6570\uff0c\u56e0\u6b64\u53ea\u7528\u679a\u4e3e \\(2 \\sim \\sqrt{n}\\) \u4e2d\u7684\u8d28\u56e0\u6570\u5e76\u4f5c\u5206\u89e3\uff0c\u6700\u540e\u7279\u5224\u5927\u4e8e \\(\\sqrt{n}\\) \u7684\u8d28\u56e0\u6570\u5373\u53ef\u3002</p> <p>\u7531\u4e8e\u6bcf\u6b21\u5206\u89e3\uff0c\u81f3\u5c11\u5c06\u539f\u6570\u51cf\u534a\uff0c\u56e0\u6b64\u5206\u89e3\u8fc7\u7a0b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log n)\\)\uff0c\u5e76\u4e14 \\(n\\) \u7684\u8d28\u56e0\u6570\u4e2a\u6570\u4e0d\u8d85\u8fc7 \\(O(\\log n)\\)\u3002</p> <p>\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\sqrt n)\\)\uff0c\u8bb0\u5f55\u8d28\u56e0\u5b50\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(\\log n)\\)\u3002\u9002\u7528\u4e8e\u5bf9\u8f83\u5c11\u6570\u91cf\u7684\u8f83\u5927\u6570\u505a\u8d28\u56e0\u6570\u5206\u89e3\uff0c\\(n \\le 10^{14}\\)\u3002</p> <pre><code>int cnt, a[];  // \u8bb0\u5f55\u8d28\u56e0\u5b50\u5206\u89e3\u5f62\u5f0f\uff0c\u6570\u7ec4\u7a7a\u95f4\u5f00 O(logn) \u8fd9\u4e48\u5927\n\nvoid D(int n) {\n  for (int i = 2; i * i &lt;= n; i++) {  // \u53ea\u6709\u679a\u4e3e 2 ~ sqrt(n) \u7684\u8d28\u56e0\u5b50 O(sqrt(n))\n    for (; n % i == 0; n /= i) {  // \u8d28\u56e0\u6570\u5206\u89e3 O(logn)\n      a[++cnt] = i;\n    }\n  }\n  if (n &gt; 1) {  // \u7279\u5224\u5927\u4e8e sqrt(n) \u7684\u8d28\u56e0\u6570\n    a[++cnt] = n;\n  }\n}\n</code></pre>"},{"location":"math/CSPJ/number_theory/#\u6700\u5c0f\u8d28\u56e0\u6570\u5206\u89e3\u8d28\u56e0\u6570","title":"\u6700\u5c0f\u8d28\u56e0\u6570\u5206\u89e3\u8d28\u56e0\u6570","text":"<p>\u5728\u57c3\u6c0f\u7b5b\u4e2d\uff0c\u53ef\u4ee5\u8bb0\u5f55\u6bcf\u4e2a\u5408\u6570\u9996\u6b21\u88ab\u7b5b\u9664\u7684\u6700\u5c0f\u8d28\u56e0\u6570\u3002</p> <pre><code>int v[MAXN], prime[MAXN], tot;\n\nfor (int i = 2; i &lt;= n; i++) {\n  if (!v[i]) {  // \u662f\u8d28\u6570\n    prime[++tot] = i;\n    v[i] = i;  // \u53ef\u4ee5\u8bb0\u5f55\u6700\u5c0f\u8d28\u56e0\u6570\n    for (int j = i * 2; j &lt;= n; j += i) {  // \u5c06\u6240\u6709\u8d28\u6570\u7684\u500d\u6570\u7b5b\u9664\n      v[j] = 1;\n      // if (!v[j]) v[j] = i;  // \u53ef\u4ee5\u8bb0\u5f55\u9996\u6b21\u7b5b\u9664\u65f6\u7684\u6700\u5c0f\u8d28\u56e0\u6570\n    }\n  }\n}\n</code></pre> <p>\u5728\u6b27\u62c9\u7b5b\u4e2d\uff0c\u6bcf\u4e2a\u5408\u6570\u90fd\u53ea\u88ab\u6700\u5c0f\u8d28\u56e0\u6570\u4f5c\u4e3a\u500d\u6570\u800c\u7b5b\u9664\uff0c\u7b5b\u9664\u65f6\u8bb0\u5f55\u6700\u5c0f\u8d28\u56e0\u6570\u3002</p> <pre><code>int v[MAXN], prime[MAXN], tot;\n\n// \u7ebf\u6027\u7b5b\uff08\u6b27\u62c9\u7b5b\uff09\uff0c\u7b5b\u51fa 1 ~ n \u5185\u7684\u6240\u6709\u8d28\u6570\n// \u7ebf\u6027\u7b5b\uff1a\u6bcf\u4e2a\u5408\u6570\u53ea\u88ab\u5176\u6700\u5c0f\u8d28\u56e0\u6570\u7b5b\u6389\n// \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\nvoid Sieve(int n) {\n  for (int i = 2; i &lt;= n; i++) {  // \u679a\u4e3e\u6bcf\u4e2a\u6570\n    if (!v[i]) {                  // \u6570\u5b57\u6ca1\u88ab\u7b5b\u6389\n      v[i] = i;                   // \u8bb0\u5f55\u6700\u5c0f\u8d28\u56e0\u6570\n      prime[++tot] = i;           // \u8bb0\u5f55\u8d28\u6570\n    }\n    for (int j = 1; j &lt;= tot &amp;&amp; i * prime[j] &lt;= n; j++) {  // \u679a\u4e3e\u8d28\u6570\u8868\u7684\u6bcf\u4e2a\u8d28\u6570\u4f5c\u4e3a\u6700\u5c0f\u8d28\u56e0\u6570\n      v[i * prime[j]] = prime[j];                          // \u6216\u8005\u8bb0\u5f55\u6700\u5c0f\u8d28\u56e0\u6570\n      if (i % prime[j] == 0) {                             // \u4fdd\u8bc1\u4e86 i * prime[j] \u7684\u6700\u5c0f\u8d28\u56e0\u6570\u4e3a prime[j]\n        break;\n      }\n    }\n  }\n}\n</code></pre> <p>\u5229\u7528\u6700\u5c0f\u8d28\u56e0\u6570\u8fdb\u884c\u8d28\u56e0\u6570\u5206\u89e3\uff1a</p> <pre><code>int cnt, a[];  // \u8bb0\u5f55\u8d28\u56e0\u5b50\u5206\u89e3\u5f62\u5f0f\uff0c\u7a7a\u95f4 O(log n)\n\nvoid D(int n) {\n  for (; n &gt; 1; n /= v[n]) {  // \u5206\u89e3\u6700\u5c0f\u8d28\u56e0\u6570\n    a[++cnt] = v[n];          // \u8bb0\u5f55\n  }\n}\n</code></pre> <p>\u9884\u5904\u7406\u6700\u5c0f\u8d28\u56e0\u5b50\u65f6\u95f4 \\(O(n \\log \\log n)\\) \u6216 \\(O(n)\\)\uff0c\u5bf9\u5355\u4e2a\u6570\u5206\u89e3\u8d28\u56e0\u6570 \\(O(\\log n)\\)\u3002\u9002\u7528\u4e8e\u5bf9\u591a\u4e2a\u6570\u503c\u8f83\u5c0f\u7684\u6570\u4f5c\u8d28\u56e0\u6570\u5206\u89e3\u3002\u4f8b\u5982\uff0c\u5bf9 \\(10^5\\) \u4e2a\u6570\u503c\u5927\u5c0f \\(\\le 10^7\\) \u7684\u6570\u505a\u8d28\u56e0\u6570\u5206\u89e3\u3002</p>"},{"location":"math/CSPJ/number_theory/#\u8d28\u56e0\u6570\u5206\u89e3\u4e0e\u7ea6\u6570","title":"\u8d28\u56e0\u6570\u5206\u89e3\u4e0e\u7ea6\u6570","text":"<p>\u5982\u679c \\(x = \\prod \\limits_{i=1}^kp_i^{a_i}\\)\uff0c\u5176\u4e2d \\(p_i\\) \u4e92\u4e0d\u76f8\u540c\uff0c\\(a_i \\ge 0\\)\uff0c\u6709\uff1a</p> <ul> <li>\\(x\\) \u7684\u7ea6\u6570 \\(d = \\prod \\limits_{i = 1}^k p_i^{c_i}\\)\uff0c\u5176\u4e2d \\(0 \\le c_i \\le a_i\\)\u3002</li> <li>\\(d\\) \u4e2d\u51fa\u73b0\u7684\u8d28\u56e0\u6570\uff0c\u5fc5\u7136\u51fa\u73b0\u5728 \\(x\\) \u7684\u8d28\u56e0\u6570\u4e2d\u3002\\(d\\) \u4e2d\u6bcf\u4e2a\u8d28\u56e0\u5b50 \\(p_i\\) \u7684\u51fa\u73b0\u6b21\u6570 \\(c_i\\) \u5fc5\u7136\u4e0d\u8d85\u8fc7 \\(x\\) \u5bf9\u5e94\u8d28\u56e0\u5b50\u7684\u51fa\u73b0\u6b21\u6570 \\(a_i\\)\u3002 </li> <li>\u56e0\u6b64\u53ef\u4ee5\u5229\u7528\u8d28\u56e0\u6570\u5206\u89e3\u5224\u65ad\u6574\u9664\u3001\u7ea6\u6570\u3001\u500d\u6570\u3002</li> <li>\u8bb0\u7ea6\u6570\u6570\u91cf\u51fd\u6570 \\(d(x)\\) \u8868\u793a \\(x\\) \u7684\u6b63\u7ea6\u6570\u6570\u91cf\uff0c\u7531\u4e58\u6cd5\u539f\u7406\u53ef\u5f97 \\(d(x) = (1+a_1) \\times (1 + a_2) \\times \\dots \\times(1 + a_k) = \\prod \\limits_{i = 1}^k (1 + a_i)\\)\u3002</li> <li>\u8fdb\u4e00\u6b65\u53d1\u73b0 \\(d(x) = d(p_1^{c_1}) \\times d(p_2^{c_2}) \\times \\dots \\times d(p_k^{c_k})\\)\u3002\u4f3c\u4e4e\u53ef\u4ee5\u5bf9\u51fd\u6570\u8fdb\u884c\u5206\u89e3\uff08\u79ef\u6027\u51fd\u6570\uff09\u3002</li> <li>\u5bf9 \\(x\\) \u7684\u6bcf\u4e2a\u8d28\u56e0\u5b50 \\(p_i\\) \u5355\u72ec\u8003\u8651\uff0c\u5176\u7ea6\u6570 \\(d\\) \u5bf9\u5e94\u7684\u8d28\u56e0\u5b50 \\(0 \\le c_i \\le a_i\\)\uff0c\u4e5f\u5c31\u662f \\(c_i\\) \u6709 \\((a_i + 1)\\) \u79cd\u9009\u62e9\u3002</li> <li>\u5728\u8d28\u56e0\u6570\u5206\u89e3\u5f62\u5f0f\u4e2d\uff0c\u6bcf\u79cd\u8d28\u56e0\u5b50\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u624d\u53ef\u80fd\u4f7f\u7528\u4e58\u6cd5\u539f\u7406\u3002</li> <li>\u9010\u6708 P1324\uff0c\u6b27\u62c9\u7b5b\u9884\u5904\u7406\u6700\u5c0f\u8d28\u56e0\u6570\uff0c\u6700\u5c0f\u8d28\u56e0\u6570\u5206\u89e3\u6cd5</li> <li>\u5373\u7ea6\u6570\u548c\u51fd\u6570 \\(\\sigma(n)\\) \u8868\u793a \\(n\\) \u7684\u6240\u6709\u6b63\u7ea6\u6570\u4e4b\u548c\u3002</li> <li>\u4e0d\u8981\u6c42\u638c\u63e1\u3002</li> </ul> <p>\u6bcf\u4e2a\u8d28\u56e0\u6570\u76f8\u4e92\u72ec\u7acb\u3002</p>"},{"location":"math/CSPJ/number_theory/#\u8d28\u56e0\u6570\u5206\u89e3\u4e0e\u516c\u7ea6\u6570\u516c\u500d\u6570","title":"\u8d28\u56e0\u6570\u5206\u89e3\u4e0e\u516c\u7ea6\u6570\u516c\u500d\u6570","text":"<p>\u5982\u679c \\(x = \\prod \\limits_{i=1}^kp_i^{a_i}\\)\uff0c\\(y = \\prod \\limits_{i=1}^k p_i^{b_i}\\)\uff08\u5176\u4e2d \\(a_1, \\dots, a_k\\) \u548c  \\(b_1, \\dots, b_k\\) \u4e2d\u53ef\u80fd\u6709\u6307\u6570 \\(0\\)\uff09\uff0c\u6709\uff1a</p> <ul> <li>\u6700\u5927\u516c\u7ea6\u6570 \\((x, y) = \\prod \\limits_{i=1}^k p_i^{\\min(a_i, b_i)}\\)\u3002</li> <li>\u6700\u5c0f\u516c\u500d\u6570 \\([x,y] = \\prod \\limits_{i=1}^k p_i^{\\max(a_i, b_i)}\\)\u3002</li> <li>\u5bf9\u6bcf\u4e2a\u8d28\u56e0\u6570\u5355\u72ec\u8003\u8651\u3002</li> </ul> <p>\u4e24\u6570\u7684 gcd \u548c lcm \u7684\u4e58\u79ef\u7b49\u4e8e\u4e24\u6570\u4e58\u79ef\uff0c\u5373 \\((x, y) \\times [x, y] = x \\times y\\)\uff0c\u5199\u6210\u8d28\u56e0\u6570\u5206\u89e3\u7684\u5f62\u5f0f\u4e3a\uff1a</p> <ul> <li>\\(\\prod \\limits_{i=1}^k p_i^{\\min(a_i, b_i)} \\times \\prod \\limits_{i=1}^k p_i^{\\max(a_i, b_i)} = \\prod \\limits_{i=1}^k p_i^{a_i + b_i}\\)\u3002</li> <li>\u4e5f\u5c31\u662f \\(\\min(a, b) + \\max(a, b) = a + b\\) \u7684\u4f53\u73b0\u3002</li> </ul>"},{"location":"math/CSPJ/number_theory_problem/","title":"\u6570\u8bba\u4e60\u9898","text":""},{"location":"math/CSPJ/number_theory_problem/#\u7ea6\u6570\u548c\u500d\u6570","title":"\u7ea6\u6570\u548c\u500d\u6570","text":"<ul> <li>\u9010\u6708 P1324</li> <li>\u6d1b\u8c37 P1403 \u7ea6\u6570\u7814\u7a76</li> <li>\u6d1b\u8c37 P1414 \u53c8\u662f\u6bd5\u4e1a\u5b63</li> <li>\u6d1b\u8c37 P1372 \u53c8\u662f\u6bd5\u4e1a\u5b63</li> <li>\u6d1b\u8c37 P2926</li> </ul> <p>\u7ea6\u6570\u679a\u4e3e\u548c\u500d\u6570\u679a\u4e3e\u7ecf\u5e38\u76f8\u4e92\u8f6c\u5316\u3002</p>"},{"location":"math/CSPJ/number_theory_problem/#\u6d1b\u8c37-p1403-\u7ea6\u6570\u7814\u7a76","title":"\u6d1b\u8c37 P1403 \u7ea6\u6570\u7814\u7a76","text":"<p>\u4f7f\u7528\u7ea6\u6570\u6cd5\u679a\u4e3e\u6c42\u89e3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N \\sqrt N)\\)\u3002</p> <p>\u4e0d\u518d\u679a\u4e3e\u7ea6\u6570\uff0c\u800c\u662f\u679a\u4e3e\u7ea6\u6570\u51fa\u73b0\u5728\u591a\u5c11\u4e2a\u500d\u6570\u4e2d\uff08\u500d\u6570\u679a\u4e3e\uff09</p> <p>\u4f7f\u7528\u500d\u6570\u6cd5\u679a\u4e3e \\(i\\)\uff0c\u6c42\u89e3 \\(1 \\sim N\\) \u6709\u591a\u5c11\u6570\u662f \\(i\\) \u7684\u500d\u6570\uff08\u6240\u6709 \\(i\\) \u7684\u500d\u6570\u90fd\u4f1a\u6709\u7ea6\u6570 \\(i\\)\uff09\uff0c\u5373 \\(\\sum \\limits_{i = 1} ^ N \\lfloor \\dfrac{N}{i} \\rfloor\\)\u3002\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N)\\)\u3002</p>"},{"location":"math/CSPJ/number_theory_problem/#\u6d1b\u8c37-p1372-\u53c8\u662f\u6bd5\u4e1a\u5b63-1","title":"\u6d1b\u8c37 P1372 \u53c8\u662f\u6bd5\u4e1a\u5b63 1","text":"<p>\u679a\u4e3e\u7ea6\u6570 \\(d\\)\uff08\u679a\u4e3e\u7b54\u6848\uff09\uff0c\u8fd9 \\(k\\) \u4e2a\u4eba \\(d, 2d, 3d, \\dots, kd\\)\u3002\u53ea\u8981\u6700\u5927\u7684\u4eba\u7684\u7f16\u53f7 \\(kd \\le n\\) \u5373\u53ef\uff0c\u5373 \\(d \\le \\lfloor \\dfrac{n}{k} \\rfloor\\)\u3002</p>"},{"location":"math/CSPJ/number_theory_problem/#\u6d1b\u8c37-p1414-\u53c8\u662f\u6bd5\u4e1a\u5b63-2","title":"\u6d1b\u8c37 P1414 \u53c8\u662f\u6bd5\u4e1a\u5b63 2","text":"<p>\u679a\u4e3e\u7b54\u6848\u7ea6\u6570 \\(d\\)\uff0c\u770b\u662f\u5426\u6709\u81f3\u5c11 \\(k\\) \u4e2a \\(d\\) \u7684\u500d\u6570\uff08\u5982\u679c\u6709\uff0c\u7b54\u6848\u662f\u53ef\u4ee5\u7684\uff09\u3002</p> <p>\u4ee4 \\(V = 10^6\\)\u3002</p>"},{"location":"math/CSPJ/number_theory_problem/#\u7b97\u6cd5-1","title":"\u7b97\u6cd5 1","text":"<p>\u679a\u4e3e \\(k = i\\)</p> <ul> <li>\u679a\u4e3e\u7b54\u6848 \\(d\\)</li> <li>\u679a\u4e3e\u6bcf\u4e2a\u80fd\u529b\u503c\uff0c\u770b\u6709\u591a\u5c11\u4e2a \\(d\\) \u7684\u500d\u6570</li> </ul> <p>\u603b\u65f6\u95f4 \\(O(n^2V)\\)\u3002</p>"},{"location":"math/CSPJ/number_theory_problem/#\u7b97\u6cd5-2","title":"\u7b97\u6cd5 2","text":"<p>\u4f7f\u7528\u500d\u6570\u6cd5\u9884\u5904\u7406 \\(cnt_d\\) \u8868\u793a \\(a_1 \\dots a_n\\) \u4e2d \\(d\\) \u7684\u500d\u6570\u6570\u91cf\u3002\\(O(V \\log V)\\)\u3002</p> <p>\u679a\u4e3e \\(k = i\\)</p> <ul> <li>\u679a\u4e3e\u7b54\u6848 \\(d\\)\uff0c\u6c42 \\(cnt_d &gt;= k\\) \u65f6 \\(d\\) \u7684\u6700\u5927\u503c\u3002</li> </ul> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(V \\log V + nV)\\)\u3002</p>"},{"location":"math/CSPJ/number_theory_problem/#\u7b97\u6cd5-3","title":"\u7b97\u6cd5 3","text":"<p>\u4ee4 \\(ans_i\\) \u8868\u793a \\(k = i\\) \u65f6\u7684\u7b54\u6848\u3002</p> <p>\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7b54\u6848 \\(d\\)</p> <ul> <li>\u7ef4\u62a4 \\(ans_{cnt_d}\\) \u7684\u6700\u5927\u503c\u3002</li> </ul> <p>\u6ce8\u610f\u5230\uff0c\u5e76\u4e0d\u662f \\(ans_1 \\dots ans_n\\) \u90fd\u88ab\u6c42\u89e3\u51fa\u6765</p> <ul> <li>\\(ans_n \\ge 1\\)\u3002</li> <li> <p>\u6700\u7ec8 \\(ans_i \\ge ans_{i + 1}\\)\u3002</p> </li> <li> <p>\u4ece\u540e\u5f80\u524d\u7ef4\u62a4 \\(ans_i = \\max(ans_i, ans_{i + 1})\\)\u3002</p> </li> </ul> <p>\u9884\u5904\u7406 \\(O(V \\log V)\\)\uff0c\u7ef4\u62a4 \\(ans\\) \u6570\u7ec4 \\(O(V)\\)\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(V \\log V)\\)\u3002\\(cnt\\) \u548c \\(ans\\) \u7684\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(V)\\)\u3002</p>"},{"location":"math/CSPJ/number_theory_problem/#\u8d28\u6570\u4e0e\u5408\u6570","title":"\u8d28\u6570\u4e0e\u5408\u6570","text":"<ul> <li>\u9010\u6708 P1321 \u8d28\u6570\u5224\u65ad</li> <li>\u9010\u6708 P1322 \u57c3\u6c0f\u7b5b</li> <li>\u6d1b\u8c37 P3383 \u6b27\u62c9\u7b5b</li> <li>\u6d1b\u8c37 P1835 \u533a\u95f4\u7b5b</li> </ul>"},{"location":"math/CSPJ/number_theory_problem/#gcd-\u548c-lcm","title":"gcd \u548c lcm","text":"<ul> <li>\u9010\u6708 P1325</li> <li>\u6d1b\u8c37 P1029 \u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\u95ee\u9898</li> <li>gcd on blackboard</li> <li>\u6d1b\u8c37 P1072</li> <li>\u6d1b\u8c37 P1572</li> <li>\u6d1b\u8c37 P4057</li> <li>\u6d1b\u8c37 P2651</li> <li>\u6d1b\u8c37 P2660</li> <li>CF 1154G</li> </ul>"},{"location":"math/CSPJ/number_theory_problem/#\u8d28\u56e0\u6570\u5206\u89e3","title":"\u8d28\u56e0\u6570\u5206\u89e3","text":"<ul> <li>\u9010\u6708 P1323\uff0c\u8bd5\u9664\u6cd5\u5206\u89e3\u8d28\u56e0\u6570</li> <li>\u9010\u6708 P1324\uff0c\u6b27\u62c9\u7b5b\u9884\u5904\u7406\u6700\u5c0f\u8d28\u56e0\u6570\uff0c\u6700\u5c0f\u8d28\u56e0\u6570\u5206\u89e3\u6cd5</li> <li>\u6d1b\u8c37 P2043\uff0c\u8bd5\u9664\u6cd5\u3001\u6700\u5c0f\u8d28\u56e0\u6570\u6cd5\u90fd\u5199\u4e00\u904d\u3002</li> <li>CF 546D\uff0c\u5c06 \\(1 \\sim N\\) \u8868\u793a\u4e3a\u8d28\u56e0\u6570\u5206\u89e3\u5f62\u5f0f</li> <li>arc067_a\uff0c\u6c42 \\(N!\\) \u7684\u8d28\u56e0\u6570\u5206\u89e3\u5f62\u5f0f</li> <li>abc215_d\uff0c\u8d28\u56e0\u6570\u5206\u89e3 + \u7b5b</li> <li>abc259_e\uff0c\u8f83\u96be</li> <li>CF 1047C\uff0c\u8f83\u96be</li> </ul>"},{"location":"math/CSPJ/number_theory_problem/#\u5176\u4ed6","title":"\u5176\u4ed6","text":"<ul> <li>abc177_e</li> </ul>"}]}